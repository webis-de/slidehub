{"version":3,"sources":["js/lib/intersection-observer.mjs","js/config.mjs","js/documents-data.mjs","js/lib/reverse-iterable-map.mjs","js/util/clamp.mjs","js/core/ItemNavigator.mjs","js/core/SlidehubDocument.mjs","js/core/SlidehubParser.mjs","js/core/SlidehubDocumentLoader.mjs","js/core/SlidehubImageLoader.mjs","js/util/passive-event-listener.mjs","js/util/debounce.mjs","js/core/SlidehubMouseInteraction.mjs","js/core/SlidehubKeyboardInteraction.mjs","js/core/DocumentNavigator.mjs","js/core/Modal.mjs","js/core/SlidehubPlugin.mjs","js/plugins/DocumentSourceLinker.mjs","js/plugins/PageWidgetPlugin.mjs","js/plugins/namespace.mjs","js/util/getOuterWidth.mjs","js/util/getFragmentIdentifier.mjs","js/core/Slidehub.mjs","js/app.mjs"],"names":["polyfillIntersectionObserver","window","document","IntersectionObserverEntry","prototype","defineProperty","intersectionRatio","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","observe","target","isTargetAlreadyObserved","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","i","a","isNaN","_parseRootMargin","opt_rootMargin","marginString","margins","split","map","margin","parts","exec","value","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","_domObserver","MutationObserver","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","now","performance","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","top","bottom","left","right","width","height","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","computeRectIntersection","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","IntersectionObserver","time","rootBounds","boundingClientRect","targetArea","intersectionArea","callback","opt_options","options","fn","timeout","timer","bind","setTimeout","rootMargin","join","addEvent","node","event","opt_useCapture","addEventListener","attachEvent","removeEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","config","documentsData","ReverseIterableMap","iterable","_map","Map","_first","_last","key","set","clear","has","get","last","first","ReverseIterableMapNode","add","prev","next","delete","thisArg","undefined","entries","reverse","Symbol","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","iteratorResult","toStringTag","size","_key","_value","_next","_prev","clamp","ItemNavigator","slidehub","doc","_doc","_itemPos","_selectedItemPos","distance","by","vector","newSelectedItemPos","determineNewSelectedItemPos","selectedItemPos","updateSelectedItemPos","Number","isInteger","itemPos","updateItemPos","round","keepSelectedPageInFirstColumn","allItemsVisible","newItemPos","determineNewItemPos","scrollboxNode","scrollLeft","itemWidth","visibleItems","invalidItemPositions","maxPos","itemCount","selectItem","items","numberOfVisibleItems","SlidehubDocument","selectClassName","hoverClassName","name","imageCount","_name","_imageCount","_loaded","_node","_scrollboxNode","_items","_selectedItemNode","_hoveredItemNode","_itemNavigator","itemNode","selectedItemNode","itemContainer","parentElement","contains","classList","remove","slidehubSelectItemEvent","CustomEvent","dispatchEvent","activeElement","HTMLElement","blur","hoveredItemNode","unhoverItem","slidehubHoverItemEvent","markup","createMarkup","docNode","getElementById","insertAdjacentHTML","setNode","scrollboxClassName","selector","scrollbox","itemContainerClassName","itemClassName","imageSource","assets","images","documentSource","metaSlide","documents","dummyPage","querySelector","querySelectorAll","selectedDocument","selectDocument","loaded","parseDocumentsMarkup","parseDocumentsData","id","SlidehubDocumentLoader","batchSize","prevIterator","nextIterator","observer","documentObservationHandler","targetDoc","loadTargetDocument","loadBatch","documentFramesMarkup","values","iteratorFor","loadDocument","documentIterable","insertPosition","done","info","load","warn","SlidehubImageLoader","imageObserver","imageObserverOptions","imageObservationHandler","observeExistingDocuments","from","loadImage","image","startImageObserver","dataset","src","setAttribute","removeAttribute","handleItemImageLoaded","error","preserveAspectRatio","setItemAspectRatio","closest","style","cssText","includes","aspectRatio","naturalWidth","naturalHeight","setProperty","toString","listener","supportsPassive","opts","Object","e","passive","debounce","func","wait","immediate","context","args","arguments","callNow","apply","SlidehubMouseInteraction","scrolling","mouseX","innerWidth","mouseY","innerHeight","initStoreMousePosition","initHoverDocumentOnScroll","initExistingDocuments","initModifiers","storeMousePosition","handleScrollDocumentHover","initMouseInteraction","initScrollInteraction","handleWheelInteraction","active","handleClickSelect","handleMoveHover","clientX","clientY","targetElement","elementFromPoint","docElement","hoverDocument","itemElement","hoverItem","currentTarget","ratio","scrollingDirection","abs","deltaX","deltaY","vertical","horizontal","shiftKey","preventDefault","delta","navigateItem","sign","onModifierDown","onModifierUp","onModifierBlur","hoveredDocument","keyCode","SlidehubKeyboardInteraction","controlKeyNames","controlKey","navigateDocument","up","down","handleKeyboardInput","keyName","trigger","DocumentNavigator","selectedDocumentName","scrollDocumentIntoView","offset","getVerticalOffsets","extraPart","scrollBy","docEl","offsetTop","scrollY","offsetHeight","enableModals","lastFocusedElement","buttonArea","controlsOpenButton","createOpenButton","targetModal","modal","title","toLowerCase","openModal","closeOnEscape","trapTabKey","closeOnBackground","moveFocusToModal","getFocusableElements","focus","closeModal","tabable","tabIndex","ancestor","focusableElementsSelector","SlidehubPlugin","description","new","enabled","toggleButton","TypeError","enable","disable","createToggleButton","handleToggleButton","fieldset","toggleButtonMarkup","button","isPressed","getAttribute","String","triggerButtonAction","stateAttr","hasAttribute","DocumentSourceLinker","boundEnterHandler","enterHandler","boundDoubleClickHandler","doubleClickHandler","openInNewTab","ctrlKey","handleOpenIntent","isInteractive","openDocumentSource","itemIndex","page","fragment","itemSource","docSource","open","location","href","tag","tagName","potentiallyInteractive","disabled","offsetParent","PageWidgetPlugin","boundExposeItemCount","exposeItemCount","boundExposeCurrentItem","exposeCurrentItem","widgetHookNode","currentPageNode","totalPagesNode","insertWidgetMarkup","removeWidgetMarkup","widgetNode","firstElementChild","lastElementChild","textContent","lastChild","removeChild","detail","getOuterWidth","marginLeft","parseInt","marginRight","offsetWidth","getFragmentIdentifier","url","hashPosition","substring","Slidehub","plugin","_documents","_selectedDocument","_hoveredDocument","_documentNavigator","_itemWidth","_visibleItems","_scrollboxWidth","getNode","getDocuments","documentLoader","staticContent","insertDocumentFrames","determineTargetDocument","start","jumpToTargetDocument","loadPlugins","existingNode","slidehubNode","createNode","selectColor","highlightColor","createElement","appendChild","fragmentIdentifier","scrollTop","slidehubWidth","centerDocument","centerOffset","exposeDocumentInfo","imageLoader","mouseInteraction","observeDocumentLoaded","documentLoadedObserver","mutationHandler","childList","mutationsList","mutation","addedNodes","slidehubSelectDocumentEvent","unhoverDocument","slidehubHoverDocumentEvent","exposeItemWidth","exposeScrollboxWidth","exposeNumberOfVisibleItems","itemOuterWidth","scrollboxWidth","floor","documentNavigator"],"mappings":";AA6qBC,aApqBM,SAASA,EAA6BC,EAAQC,GAMjD,GAAA,yBAA0BD,GAC1B,8BAA+BA,GAC/B,sBAAuBA,EAAOE,0BAA0BC,UAIlD,mBAAoBH,EAAOE,0BAA0BC,WAClDC,OAAAA,eAAeJ,EAAOE,0BAA0BC,UAAW,iBAAkB,CAC7E,IAAA,WACI,OAAA,KAAKE,kBAAoB,SATtC,CAsBEC,IAAAA,EAAW,GA6EMH,EAAAA,UAAUI,iBAAmB,IAO7BJ,EAAAA,UAAUK,cAAgB,KAO1BL,EAAAA,UAAUM,QAAU,SAAUC,GAK7CC,IAJ0B,KAAKC,oBAAoBC,KAAK,SAAUC,GAC7DA,OAAAA,EAAKC,SAAWL,IAGrBC,CAIA,IAAED,GAA6B,GAAnBA,EAAOM,SACf,MAAA,IAAIC,MAAM,6BAGbC,KAAAA,oBACAN,KAAAA,oBAAoBO,KAAK,CAAEJ,QAASL,EAAQU,MAAO,OACnDC,KAAAA,wBACAC,KAAAA,2BAOcnB,EAAAA,UAAUoB,UAAY,SAAUb,GAC9CE,KAAAA,oBAAsB,KAAKA,oBAAoBY,OAAO,SAAUV,GAC5DA,OAAAA,EAAKC,SAAWL,IAEpB,KAAKE,oBAAoBa,SACvBC,KAAAA,0BACAC,KAAAA,wBAOYxB,EAAAA,UAAUyB,WAAa,WACrChB,KAAAA,oBAAsB,GACtBc,KAAAA,0BACAC,KAAAA,uBAScxB,EAAAA,UAAU0B,YAAc,WACvCC,IAAAA,EAAU,KAAKC,eAAeC,QAE3BF,OADFC,KAAAA,eAAiB,GACfD,GAYY3B,EAAAA,UAAU8B,gBAAkB,SAAUC,GACrDC,IAAAA,EAAYD,GAAiB,CAAC,GAG3BC,OAFFC,MAAMC,QAAQF,KAAYA,EAAY,CAACA,IAErCA,EAAUG,OAAOd,OAAO,SAAUe,EAAGC,EAAGC,GACzC,GAAY,iBAALF,GAAiBG,MAAMH,IAAMA,EAAI,GAAKA,EAAI,EAC7C,MAAA,IAAItB,MAAM,0DAEXsB,OAAAA,IAAME,EAAED,EAAI,MAeFrC,EAAAA,UAAUwC,iBAAmB,SAAUC,GACtDC,IACAC,GADeF,GAAkB,OACVG,MAAM,OAAOC,IAAI,SAAUC,GAChDC,IAAAA,EAAQ,wBAAwBC,KAAKF,GACrC,IAACC,EACG,MAAA,IAAIjC,MAAM,qDAEX,MAAA,CAAEmC,MAAOC,WAAWH,EAAM,IAAKI,KAAMJ,EAAM,MAQ7CJ,OAJC,EAAA,GAAKA,EAAQ,IAAMA,EAAQ,GAC3B,EAAA,GAAKA,EAAQ,IAAMA,EAAQ,GAC3B,EAAA,GAAKA,EAAQ,IAAMA,EAAQ,GAE5BA,GAQY3C,EAAAA,UAAUkB,sBAAwB,WAChD,KAAKkC,2BACHA,KAAAA,0BAA2B,EAI5B,KAAK/C,cACFgD,KAAAA,oBAAsBC,YAAY,KAAKnC,uBAAwB,KAAKd,gBAEhER,EAAAA,EAAQ,SAAU,KAAKsB,wBAAwB,GAC/CrB,EAAAA,EAAU,SAAU,KAAKqB,wBAAwB,GAEtD,qBAAsBtB,IACnB0D,KAAAA,aAAe,IAAIC,iBAAiB,KAAKrC,wBACzCoC,KAAAA,aAAajD,QAAQR,EAAU,CACtB,YAAA,EACD,WAAA,EACI,eAAA,EACN,SAAA,QAWEE,EAAAA,UAAUuB,wBAA0B,WACnD,KAAK6B,2BACFA,KAAAA,0BAA2B,EAElB,cAAA,KAAKC,qBACdA,KAAAA,oBAAsB,KAEfxD,EAAAA,EAAQ,SAAU,KAAKsB,wBAAwB,GAC/CrB,EAAAA,EAAU,SAAU,KAAKqB,wBAAwB,GAEzD,KAAKoC,eACFA,KAAAA,aAAa9B,aACb8B,KAAAA,aAAe,QAWLvD,EAAAA,UAAUmB,uBAAyB,WAClDsC,IAAAA,EAAc,KAAKC,eACnBC,EAAWF,EAAc,KAAKG,eA4V3B,CACA,IAAA,EACG,OAAA,EACF,KAAA,EACC,MAAA,EACA,MAAA,EACC,OAAA,GAhWLnD,KAAAA,oBAAoBoD,QAAQ,SAAUlD,GACrCJ,IAAAA,EAASI,EAAKC,QACdkD,EAAaC,EAAsBxD,GACnCyD,EAAqB,KAAKC,oBAAoB1D,GAC9C2D,EAAWvD,EAAKM,MAChBkD,EACFV,GACAO,GACA,KAAKI,kCAAkC7D,EAAQoD,GAE7CU,EAAY1D,EAAKM,MAAQ,IAAIlB,EAA0B,CACnDuE,KAuNHzE,EAAO0E,aAAeA,YAAYD,KAAOC,YAAYD,MAtNhD/D,OAAAA,EACYuD,mBAAAA,EACRH,WAAAA,EACMQ,iBAAAA,IAGfD,EAEMT,GAAeO,EAGpB,KAAKQ,qBAAqBN,EAAUG,IACjCzC,KAAAA,eAAeZ,KAAKqD,GAMvBH,GAAYA,EAASO,gBAClB7C,KAAAA,eAAeZ,KAAKqD,GAZtBzC,KAAAA,eAAeZ,KAAKqD,IAe1B,MAEC,KAAKzC,eAAeN,QACjBoD,KAAAA,UAAU,KAAKhD,cAAe,OAgBlB1B,EAAAA,UAAUoE,kCAAoC,SAAU7D,EAAQoD,GAE/E9D,GAA2C,QAA3CA,EAAO8E,iBAAiBpE,GAAQqE,QAAhC/E,CAOG,IALHiE,IAuO2Be,EAAOC,EAClCC,EACAC,EACAC,EACAC,EACAC,EACAC,EA5OAjB,EADaJ,EAAsBxD,GAEnC8E,EAASC,EAAc/E,GACvBgF,GAAS,GAELA,GAAQ,CACVC,IAAAA,EAAa,KACbC,EAAyC,GAAnBJ,EAAOxE,SAAgBhB,EAAO8E,iBAAiBU,GAAU,GAG/EI,GAA+B,QAA/BA,EAAoBb,QAAmB,OAqBvCY,GAnBAH,GAAU,KAAKK,MAAQL,GAAUvF,GAC1B,GAAA,EACI6D,EAAAA,GAOX0B,GAAUvF,EAAS6F,MACnBN,GAAUvF,EAAS8F,iBACa,WAAhCH,EAAoBI,WAEP9B,EAAAA,EAAsBsB,IAMnCG,IAwMyBX,EAvMgBW,EAuMTV,EAvMqBX,OAwMvDY,OACAC,OACAC,OACAC,OACAC,OACAC,EALAL,EAAMe,KAAKC,IAAIlB,EAAME,IAAKD,EAAMC,KAChCC,EAASc,KAAKE,IAAInB,EAAMG,OAAQF,EAAME,QACtCC,EAAOa,KAAKC,IAAIlB,EAAMI,KAAMH,EAAMG,MAClCC,EAAQY,KAAKE,IAAInB,EAAMK,MAAOJ,EAAMI,OAEpCE,EAASJ,EAASD,IA7MCkB,GA4MnBd,EAAQD,EAAQD,IAIT,GACTG,GAAU,GAAK,CACRL,IAAAA,EACGC,OAAAA,EACFC,KAAAA,EACCC,MAAAA,EACAC,MAAAA,EACCC,OAAAA,KArNe,MAEhBE,EAAAA,EAAcD,GAElBlB,OAAAA,IAQYnE,EAAAA,UAAU4D,aAAe,WACxCD,IAAAA,EACA,GAAA,KAAK+B,KACI3B,EAAAA,EAAsB,KAAK2B,UACjC,CAEDQ,IAAAA,EAAOpG,EAAS8F,gBAChBD,EAAO7F,EAAS6F,KACT,EAAA,CACJ,IAAA,EACC,KAAA,EACCO,MAAAA,EAAKC,aAAeR,EAAKQ,YACzBD,MAAAA,EAAKC,aAAeR,EAAKQ,YACxBD,OAAAA,EAAKE,cAAgBT,EAAKS,aAC1BF,OAAAA,EAAKE,cAAgBT,EAAKS,cAG/B,OAAA,KAAKC,wBAAwB1C,IASjB3D,EAAAA,UAAUqG,wBAA0B,SAAUC,GAC7D3D,IAAAA,EAAU,KAAK4D,kBAAkB1D,IAAI,SAAUC,EAAQT,GAClDS,MAAe,MAAfA,EAAOK,KACVL,EAAOG,MACPH,EAAOG,OAASZ,EAAI,EAAIiE,EAAKnB,MAAQmB,EAAKlB,QAAU,MAEtDoB,EAAU,CACPF,IAAAA,EAAKvB,IAAMpC,EAAQ,GACjB2D,MAAAA,EAAKpB,MAAQvC,EAAQ,GACpB2D,OAAAA,EAAKtB,OAASrC,EAAQ,GACxB2D,KAAAA,EAAKrB,KAAOtC,EAAQ,IAKrB6D,OAHCrB,EAAAA,MAAQqB,EAAQtB,MAAQsB,EAAQvB,KAChCG,EAAAA,OAASoB,EAAQxB,OAASwB,EAAQzB,IAEnCyB,GAaYxG,EAAAA,UAAUwE,qBAAuB,SAAUN,EAAUG,GAGpEoC,IAAAA,EAAWvC,GAAYA,EAASO,eAAiBP,EAAShE,mBAAqB,GAAK,EACpFwG,EAAWrC,EAASI,eAAiBJ,EAASnE,mBAAqB,GAAK,EAGxEuG,GAAAA,IAAaC,EAEZ,IAAA,IAAIrE,EAAI,EAAGA,EAAI,KAAKsE,WAAWrF,OAAQe,IAAK,CAC3CL,IAAAA,EAAY,KAAK2E,WAAWtE,GAK9BL,GAAAA,GAAayE,GACbzE,GAAa0E,GACb1E,EAAYyE,GAAazE,EAAY0E,EAE9B,OAAA,IAUQ1G,EAAAA,UAAU0D,aAAe,WACrC,OAAC,KAAKgC,MAAQkB,EAAa9G,EAAU,KAAK4F,OAS9B1F,EAAAA,UAAUiE,oBAAsB,SAAU1D,GACtDqG,OAAAA,EAAa,KAAKlB,MAAQ5F,EAAUS,IAQxBP,EAAAA,UAAUe,kBAAoB,WAC7CZ,EAAS0G,QAAQ,MAAQ,GAClB7F,EAAAA,KAAK,OAQGhB,EAAAA,UAAUwB,oBAAsB,WAC/CsF,IAAAA,EAAQ3G,EAAS0G,QAAQ,OACf,GAAVC,GAAa3G,EAAS4G,OAAOD,EAAO,IA6KnCE,EAAAA,qBAAuBA,EACvBjH,EAAAA,0BAA4BA,EA/nB1BA,SAAAA,EAA0BkB,GAC5BgG,KAAAA,KAAOhG,EAAMgG,KACb1G,KAAAA,OAASU,EAAMV,OACf2G,KAAAA,WAAajG,EAAMiG,WACnBC,KAAAA,mBAAqBlG,EAAMkG,mBAC3BhD,KAAAA,iBAAmBlD,EAAMkD,kBA6kBvB,CACA,IAAA,EACG,OAAA,EACF,KAAA,EACC,MAAA,EACA,MAAA,EACC,OAAA,GAllBLM,KAAAA,iBAAmBxD,EAAMkD,iBAG1BL,IAAAA,EAAa,KAAKqD,mBAClBC,EAAatD,EAAWqB,MAAQrB,EAAWsB,OAC3CjB,EAAmB,KAAKA,iBACxBkD,EAAmBlD,EAAiBgB,MAAQhB,EAAiBiB,OAI1DlF,KAAAA,kBADHkH,EACuBC,EAAmBD,EAGnB,KAAK3C,eAAiB,EAAI,EAa9CuC,SAAAA,EAAqBM,EAAUC,GAClCC,IAocYC,EAAIC,EAChBC,EArcAH,EAAUD,GAAe,GAEzB,GAAmB,mBAAZD,EACH,MAAA,IAAIxG,MAAM,+BAGd0G,GAAAA,EAAQ9B,MAAiC,GAAzB8B,EAAQ9B,KAAK7E,SACzB,MAAA,IAAIC,MAAM,2BAIbK,KAAAA,wBAybWsG,EAxbd,KAAKtG,uBAAuByG,KAAK,MAwbfF,EAvblB,KAAKtH,iBAwbHuH,EAAQ,KACL,WACAA,IACKE,EAAAA,WAAW,WACjBJ,IACQ,EAAA,MACPC,MA1bFhD,KAAAA,UAAY4C,EACZ7G,KAAAA,oBAAsB,GACtBmB,KAAAA,eAAiB,GACjB2E,KAAAA,kBAAoB,KAAK/D,iBAAiBgF,EAAQM,YAGlDnB,KAAAA,WAAa,KAAK7E,gBAAgB0F,EAAQxF,WAC1C0D,KAAAA,KAAO8B,EAAQ9B,MAAQ,KACvBoC,KAAAA,WAAa,KAAKvB,kBACpB1D,IAAI,SAAUC,GACNA,OAAAA,EAAOG,MAAQH,EAAOK,OAE9B4E,KAAK,KA2bDC,SAAAA,EAASC,EAAMC,EAAOT,EAAIU,GACG,mBAAzBF,EAAKG,iBACTA,EAAAA,iBAAiBF,EAAOT,EAAIU,IAAkB,GACf,mBAApBF,EAAKI,aAChBA,EAAAA,YAAY,KAAOH,EAAOT,GAY1Ba,SAAAA,EAAYL,EAAMC,EAAOT,EAAIU,GACG,mBAA5BF,EAAKM,oBACTA,EAAAA,oBAAoBL,EAAOT,EAAIU,IAAkB,GACjB,mBAArBF,EAAKO,cAChBA,EAAAA,aAAa,KAAON,EAAOT,GAqC3B1D,SAAAA,EAAsB0E,GACzBnC,IAAAA,EAEA,IACKmC,EAAAA,EAAG1E,wBACV,MAAO2E,IAKL,OAACpC,GAGCA,EAAKnB,OAASmB,EAAKlB,SAChB,EAAA,CACAkB,IAAAA,EAAKvB,IACHuB,MAAAA,EAAKpB,MACJoB,OAAAA,EAAKtB,OACPsB,KAAAA,EAAKrB,KACJqB,MAAAA,EAAKpB,MAAQoB,EAAKrB,KACjBqB,OAAAA,EAAKtB,OAASsB,EAAKvB,MAGxBuB,GASA,CACA,IAAA,EACG,OAAA,EACF,KAAA,EACC,MAAA,EACA,MAAA,EACC,OAAA,GAWHM,SAAAA,EAAavB,EAAQsD,GAErBV,IADHA,IAAAA,EAAOU,EACJV,GAAM,CACPA,GAAAA,GAAQ5C,EAAQ,OAAO,EAEpBC,EAAAA,EAAc2C,GAEhB,OAAA,EASA3C,SAAAA,EAAc2C,GACjB5C,IAAAA,EAAS4C,EAAKW,WAEdvD,OAAAA,GAA6B,IAAnBA,EAAOxE,UAAkBwE,EAAOwD,KAErCxD,EAAOwD,KAETxD,GAMV,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IApqBezF,QAAAA,6BAAAA;;AC0DPkJ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAvCT,IAAMA,EAAS,CAEL,OAAA,CACK,UAAA,yDACH,OAAA,0DAIK,eAAA,EAGJ,WAAA,EAIoB,+BAAA,EAGV,qBAAA,EAMR,YAAA,KAGG,eAAA,KAGN,SAAA,CACE,SAAA,sBACL,IAAA,OACM,UAAA,iBACI,cAAA,kBACT,KAAA,UAIDA,QAAAA,OAAAA;;AC0IAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IA5MT,IAAMA,EAAgB,CACpB,CAAC,oBAAqB,KACtB,CAAC,sCAAuC,GACxC,CAAC,qBAAsB,IACvB,CAAC,kBAAmB,IACpB,CAAC,6BAA8B,IAC/B,CAAC,oBAAqB,IACtB,CAAC,kBAAmB,IACpB,CAAC,gCAAiC,KAClC,CAAC,oBAAqB,IACtB,CAAC,0BAA2B,IAC5B,CAAC,iCAAkC,IACnC,CAAC,0BAA2B,IAC5B,CAAC,wBAAyB,IAC1B,CAAC,qBAAsB,IACvB,CAAC,qBAAsB,IACvB,CAAC,qBAAsB,IACvB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,GACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,GACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,kBAAmB,IACpB,CAAC,mCAAoC,IACrC,CAAC,mCAAoC,IACrC,CAAC,iCAAkC,IACnC,CAAC,iCAAkC,IAEnC,CAAC,mCAAoC,IACrC,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,IAChC,CAAC,uCAAwC,IACzC,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,GAChC,CAAC,gCAAiC,IAClC,CAAC,8BAA+B,IAChC,CAAC,4BAA6B,IAC9B,CAAC,iCAAkC,IACnC,CAAC,0BAA2B,IAC5B,CAAC,2BAA4B,IAC7B,CAAC,mCAAoC,IACrC,CAAC,8BAA+B,IAChC,CAAC,iCAAkC,IACnC,CAAC,iCAAkC,IACnC,CAAC,8BAA+B,KAChC,CAAC,mCAAoC,IACrC,CAAC,2BAA4B,IAC7B,CAAC,8BAA+B,IAChC,CAAC,0BAA2B,IAC5B,CAAC,4BAA6B,IAC9B,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,GAChC,CAAC,+BAAgC,IACjC,CAAC,+BAAgC,IACjC,CAAC,+BAAgC,GACjC,CAAC,6BAA8B,GAC/B,CAAC,kCAAmC,GACpC,CAAC,8BAA+B,IAChC,CAAC,2BAA4B,IAC7B,CAAC,gCAAiC,IAClC,CAAC,gCAAiC,IAClC,CAAC,gCAAiC,IAClC,CAAC,+BAAgC,IACjC,CAAC,kCAAmC,IACpC,CAAC,8BAA+B,IAChC,CAAC,+BAAgC,IACjC,CAAC,mCAAoC,GACrC,CAAC,wCAAyC,IAC1C,CAAC,uCAAwC,IACzC,CAAC,mCAAoC,IACrC,CAAC,uCAAwC,IACzC,CAAC,2CAA4C,IAC7C,CAAC,4CAA6C,IAC9C,CAAC,2CAA4C,IAC7C,CAAC,kBAAmB,IACpB,CAAC,iCAAkC,IACnC,CAAC,kCAAmC,IAEpC,CAAC,iCAAkC,IACnC,CAAC,iCAAkC,IACnC,CAAC,iCAAkC,IACnC,CAAC,iCAAkC,IACnC,CAAC,+BAAgC,IACjC,CAAC,2BAA4B,IAC7B,CAAC,4BAA6B,IAC9B,CAAC,qCAAsC,IACvC,CAAC,+BAAgC,IACjC,CAAC,2BAA4B,IAC7B,CAAC,mCAAoC,IACrC,CAAC,wCAAyC,IAC1C,CAAC,oCAAqC,IACtC,CAAC,+BAAgC,IACjC,CAAC,kCAAmC,IACpC,CAAC,gCAAiC,IAClC,CAAC,mCAAoC,IACrC,CAAC,mCAAoC,IACrC,CAAC,mBAAoB,IACrB,CAAC,mBAAoB,IACrB,CAAC,mBAAoB,IACrB,CAAC,uBAAwB,IACzB,CAAC,qBAAsB,IACvB,CAAC,4BAA6B,IAC9B,CAAC,4BAA6B,KAC9B,CAAC,4BAA6B,IAC9B,CAAC,2BAA4B,KAC7B,CAAC,mCAAoC,IACrC,CAAC,mCAAoC,IACrC,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,GAChC,CAAC,kBAAmB,IACpB,CAAC,mCAAoC,GACrC,CAAC,4BAA6B,IAC9B,CAAC,4BAA6B,IAC9B,CAAC,6BAA8B,IAC/B,CAAC,6BAA8B,IAC/B,CAAC,4BAA6B,IAC9B,CAAC,4BAA6B,IAC9B,CAAC,gCAAiC,IAClC,CAAC,sCAAuC,IACxC,CAAC,2CAA4C,IAC7C,CAAC,uCAAwC,IACzC,CAAC,0CAA2C,IAC5C,CAAC,4CAA6C,IAC9C,CAAC,yCAA0C,IAC3C,CAAC,+BAAgC,IACjC,CAAC,mBAAoB,IACrB,CAAC,wCAAyC,IAC1C,CAAC,oCAAqC,IACtC,CAAC,sCAAuC,IACxC,CAAC,qCAAsC,IACvC,CAAC,4BAA6B,IAC9B,CAAC,4BAA6B,IAC9B,CAAC,0BAA2B,IAC5B,CAAC,kCAAmC,IACpC,CAAC,2BAA4B,KAC7B,CAAC,2BAA4B,KAC7B,CAAC,2BAA4B,IAC7B,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,GAChC,CAAC,oCAAqC,IACtC,CAAC,kCAAmC,IACpC,CAAC,mCAAoC,IACrC,CAAC,iCAAkC,IAEnC,CAAC,yBAA0B,IAC3B,CAAC,6BAA8B,IAC/B,CAAC,8BAA+B,IAChC,CAAC,8BAA+B,IAChC,CAAC,0BAA2B,GAC5B,CAAC,kCAAmC,IACpC,CAAC,kCAAmC,IAG7BA,QAAAA,cAAAA;;ACmYAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,OAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,GAAAA,OAAAA,YAAAA,OAAAA,GAAAA,OAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,cAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,QAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,IAAAA,MAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,QAAAA,KAAAA,GAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,GAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yDAAAA,GAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAhkBHA,IAAAA,EAAAA,WASyB,SAAA,IAAjBC,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAKjBA,GALuB,EAAA,KAAA,GACtBC,KAAAA,KAAO,IAAIC,IACXC,KAAAA,OAAS,KACTC,KAAAA,MAAQ,KAETJ,EAAU,CAAA,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACeA,IAAAA,IAAU,EAAVA,EAAAA,EAAU,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAzBK,EAAyB,EAAA,GAApBrG,EAAoB,EAAA,GAC9BsG,KAAAA,IAAID,EAAKrG,IAFJ,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAkjBT+F,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QAjeC,MAAA,WACDE,KAAAA,KAAKM,QACLJ,KAAAA,OAAS,KACTC,KAAAA,MAAQ,OA8dRL,CAAAA,IAAAA,MAhdHM,MAAAA,SAAAA,GACK,OAAA,KAAKJ,KAAKO,IAAIH,KA+chBN,CAAAA,IAAAA,MAlcHM,MAAAA,SAAAA,GACK,OAAA,KAAKJ,KAAKQ,IAAIJ,GAAKrG,QAicrB+F,CAAAA,IAAAA,UAxbG,MAAA,WACJ,OAAA,KAAKW,KACA,KAAKA,KAAK1G,MAGZ,OAmbF+F,CAAAA,IAAAA,WA1aI,MAAA,WACL,OAAA,KAAKY,MACA,KAAKA,MAAM3G,MAGb,OAqaF+F,CAAAA,IAAAA,MAzZHM,MAAAA,SAAAA,EAAKrG,GACHgF,IAAAA,EAAO,KAAKiB,KAAKQ,IAAIJ,GAUlBrB,OARHA,EACGhF,EAAAA,MAAQA,GAEN,EAAA,IAAI4G,EAAuBP,EAAKrG,GAElCiG,KAAAA,KAAKK,IAAID,EAAKrB,IAGdA,IA8YFe,CAAAA,IAAAA,MAlYHM,MAAAA,SAAAA,EAAKrG,GACDgF,IAAAA,EAAO,KAAK6B,IAAIR,EAAKrG,GAWpB,OATY,OAAf,KAAK2G,OAAgC,OAAd,KAAKD,MACzBC,KAAAA,MAAQ3B,EACR0B,KAAAA,KAAO1B,IAEP8B,EAAAA,KAAO,KAAKJ,KACZA,KAAAA,KAAKK,KAAO/B,EACZ0B,KAAAA,KAAO1B,GAGP,OAsXFe,CAAAA,IAAAA,WA1WEM,MAAAA,SAAAA,EAAKrG,GACNgF,IAAAA,EAAO,KAAK6B,IAAIR,EAAKrG,GAWpB,OATY,OAAf,KAAK2G,OAAgC,OAAd,KAAKD,MACzBC,KAAAA,MAAQ3B,EACR0B,KAAAA,KAAO1B,IAEP+B,EAAAA,KAAO,KAAKJ,MACZA,KAAAA,MAAMG,KAAO9B,EACb2B,KAAAA,MAAQ3B,GAGR,OA8VFe,CAAAA,IAAAA,SA/UAM,MAAAA,SAAAA,GACD,GAAA,KAAKG,IAAIH,GAAM,CACXrB,IAAAA,EAAO,KAAKiB,KAAKQ,IAAIJ,GAkBpB,OAhBH,KAAKM,QAAU,KAAKD,MACjBC,KAAAA,MAAQ,KACRD,KAAAA,KAAO,MACH,KAAKC,QAAU3B,GACnB+B,EAAAA,KAAKD,KAAO,KACZH,KAAAA,MAAQ3B,EAAK+B,MACT,KAAKL,OAAS1B,GAClB8B,EAAAA,KAAKC,KAAO,KACZL,KAAAA,KAAO1B,EAAK8B,OAEZA,EAAAA,KAAKC,KAAO/B,EAAK+B,KACjBA,EAAAA,KAAKD,KAAO9B,EAAK8B,MAGnBb,KAAAA,KAAKe,OAAOX,IAEV,EAGF,OAAA,IAwTFN,CAAAA,IAAAA,UA1SC1B,MAAAA,SAAAA,GAAU4C,IAAAA,EAAUC,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,QAAAA,EAAW,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACV,IAAA,IAAgB,EAAhB,EAAA,KAAKC,UAAW,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAA/Bd,EAA+B,EAAA,GAChCrG,EADgC,EAAA,GACzBqG,EAAKY,IAFc,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,MA0ShClB,CAAAA,IAAAA,iBA5RQ1B,MAAAA,SAAAA,GAAU4C,IAAAA,EAAUC,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,QAAAA,EAAW,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACjB,IAAA,IAA0B,EAA1B,EAAA,KAAKC,UAAUC,UAAW,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAzCf,EAAyC,EAAA,GAC1CrG,EAD0C,EAAA,GACnCqG,EAAKY,IAFqB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,MA4RvClB,CA7QNsB,IAAAA,OAAOC,SAAY,MAAA,WACX,OAAA,KAAKH,YA4QPpB,CAAAA,IAAAA,UArPG,MAAA,WACD,OAAA,KAAKoB,UAAUC,YAoPjBrB,CAAAA,IAAAA,UAxOG,MAAA,WAKD,OAAA,KAAKwB,iBAJa,SAASvC,GACzB,MAAA,CAACA,EAAKqB,IAAKrB,EAAKhF,WAsOpB+F,CAAAA,IAAAA,OAvNA,MAAA,WAKE,OAAA,KAAKwB,iBAJa,SAASvC,GACzBA,OAAAA,EAAKqB,QAqNTN,CAAAA,IAAAA,SAtME,MAAA,WAKA,OAAA,KAAKwB,iBAJa,SAASvC,GACzBA,OAAAA,EAAKhF,UAoMT+F,CAAAA,IAAAA,cAnLKM,MAAAA,SAAAA,GACNmB,IAAAA,EAAY,KAAKvB,KAAKQ,IAAIJ,GAKvB,OAAA,KAAKkB,iBAJa,SAASvC,GACzB,MAAA,CAACA,EAAKqB,IAAKrB,EAAKhF,QAGsBwH,KA6K1CzB,CAAAA,IAAAA,mBArJU0B,MAAAA,SAAAA,GAAyC,IAAA,EAAvBD,EAAYN,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,QAAAA,EACzCQ,EAAcF,GAAwB,KAAKb,MAGzCD,EAAO,KAAKA,KACdiB,EAAW,OAEf,OAMGN,EANH,EAAA,CAAA,QACY,WAGD,OAFOG,EAAAA,GAAwBd,EAC3B,EAAA,OACJ,OAERW,OAAOC,SAAY,WAEX,OAAA,OAEH,EAAA,EAAA,OAAA,WACAtH,IAAAA,OAAJ,EAKO4H,OAJHF,IACMD,EAAAA,EAAiBC,GACXA,EAAAA,EAAYC,IAErBC,EAAe5H,KAhB1B,IA8IK+F,CAliBFsB,IAAAA,OAAOQ,YAAe,IAAA,WAClB,MAAA,uBAiiBF9B,CAAAA,IAAAA,QAxhBK,IAAA,WACH,OAAA,KAAKI,QASJnB,IAAAA,SAAAA,GACHmB,KAAAA,OAASnB,IA6gBTe,CAAAA,IAAAA,OApgBI,IAAA,WACF,OAAA,KAAKK,OASLpB,IAAAA,SAAAA,GACFoB,KAAAA,MAAQpB,IAyfRe,CAAAA,IAAAA,OA7eI,IAAA,WACF,OAAA,KAAKE,KAAK6B,SA4eZ/B,EAhkBHA,GAwdAa,EAAAA,WAQQP,SAAAA,EAAAA,EAAKrG,GAAO,EAAA,KAAA,GACjB+H,KAAAA,KAAO1B,EACP2B,KAAAA,OAAShI,EACTiI,KAAAA,MAAQ,KACRC,KAAAA,MAAQ,KA4FRnC,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,MAnFG,IAAA,WACD,OAAA,KAAKgC,OAkFPhC,CAAAA,IAAAA,QAzEK,IAAA,WACH,OAAA,KAAKiC,QASJhI,IAAAA,SAAAA,GACHgI,KAAAA,OAAShI,IA8DT+F,CAAAA,IAAAA,OArDI,IAAA,WACF,OAAA,KAAKkC,OASLlB,IAAAA,SAAAA,GACFkB,KAAAA,MAAQlB,IA0CRhB,CAAAA,IAAAA,OAjCI,IAAA,WACF,OAAA,KAAKmC,OASLpB,IAAAA,SAAAA,GACFoB,KAAAA,MAAQpB,MAsBRf,EAxGHa,GAiGN,SAASgB,EAAe5H,GACf,MAAA,CACEA,MAAAA,EACDA,UAAUkH,IAAVlH,GAID+F,QAAAA,mBAAAA;;AClkBAoC,aAJT,SAASA,EAAMnI,EAAO+C,EAAKD,GAClBD,OAAAA,KAAKC,IAAIC,EAAKF,KAAKE,IAAI/C,EAAO8C,IAG9BqF,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,MAAAA;;ACwLAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,mBAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAtMT,EAAA,QAAA,iBACA,EAAA,QAAA,qBAqMSA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAzLHA,IAAAA,EAAAA,WAMQC,SAAAA,EAAAA,EAAUC,GAAK,EAAA,KAAA,GACpBD,KAAAA,SAAWA,EACXE,KAAAA,KAAOD,EACPE,KAAAA,SAAW,EACXC,KAAAA,iBAAmB,EA+KnBL,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,OAtKFM,MAAAA,SAAAA,GACEC,KAAAA,IAAID,KAqKJN,CAAAA,IAAAA,QA5JDM,MAAAA,SAAAA,GACCC,KAAAA,GAAGD,KA2JHN,CAAAA,IAAAA,KAlIJQ,MAAAA,SAAAA,GACKC,IAAAA,EAAqB,KAAKC,4BAA4BF,GAWxD,GAVAC,IAAuB,KAAKE,iBACzBC,KAAAA,sBAAsBH,GAIxBI,OAAOC,UAAU,KAAKC,UACpBC,KAAAA,cAAcvG,KAAKwG,MAAM,KAAKF,UAIhCtD,EAAOyD,OAAAA,gCAAiC,KAAKC,kBAA9C,CAIEC,IAAAA,EAAa,KAAKC,oBAAoBb,GAGxCY,IAAe,KAAKL,SAInBC,KAAAA,cAAcI,MA2GdpB,CAAAA,IAAAA,gBA1EOoB,MAAAA,SAAAA,GACPL,KAAAA,QAAUK,EACVlB,KAAAA,IAAIoB,cAAcC,WAAaH,EAAa,KAAKnB,SAASuB,YAwE1DxB,CAAAA,IAAAA,sBA9DaQ,MAAAA,SAAAA,GACZY,IAAAA,EAAa,KAAKL,QAAUP,EAC5BiB,EAAe,KAAKxB,SAASwB,aAI7BC,EAAuBjE,EAAOyD,OAAAA,8BAAgC,EAAIO,EAAe,EACjFE,EAAS,KAAKzB,IAAI0B,YAAcF,EAE/B,OAAA,EAAMN,EAAAA,OAAAA,EAAY,EAAGO,KAqDvB3B,CAAAA,IAAAA,wBA5BeS,MAAAA,SAAAA,GACfE,KAAAA,gBAAkBF,EAClBP,KAAAA,IAAI2B,WAAW,KAAK3B,IAAI4B,MAAMxM,KAAKmL,MA0BnCT,CAAAA,IAAAA,8BAhBqBQ,MAAAA,SAAAA,GACpBC,IAAAA,EAAqB,KAAKE,gBAAkBH,EAC3C,OAAA,EAAMC,EAAAA,OAAAA,EAAoB,EAAG,KAAKP,IAAI0B,eAcxC5B,CAAAA,IAAAA,kBALW,MAAA,WACT,OAAA,KAAKE,IAAI0B,UAAY,KAAK3B,SAAS8B,uBAIrC/B,CAAAA,IAAAA,MApGG,IAAA,WACD,OAAA,KAAKG,OAmGPH,CAAAA,IAAAA,UA5FO,IAAA,WACL,OAAA,KAAKI,UAOFW,IAAAA,SAAAA,GACLX,KAAAA,SAAWW,IAmFXf,CAAAA,IAAAA,kBA9Ce,IAAA,WACb,OAAA,KAAKK,kBAOMM,IAAAA,SAAAA,GACbN,KAAAA,iBAAmBM,MAqCnBX,EAzLHA,GAyLGA,QAAAA,cAAAA;;ACyCAgC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,sBAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GA/OT,EAAA,QAAA,iBACA,EAAA,QAAA,uBA8OSA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCA5OT,IAAMC,EAAkB,WAClBC,EAAiB,cAKjBF,EAAAA,WAKQ/B,SAAAA,EAAAA,EAAUkC,EAAMC,GAAY,EAAA,KAAA,GACjCnC,KAAAA,SAAWA,EAEXoC,KAAAA,MAAQF,EACRG,KAAAA,YAAcF,EACdG,KAAAA,SAAU,EAEVC,KAAAA,MAAQ,KACRC,KAAAA,eAAiB,KACjBC,KAAAA,OAAS,KACTC,KAAAA,kBAAoB,KACpBC,KAAAA,iBAAmB,KACnBC,KAAAA,eAAiB,KAqNjBb,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,YAnKK,MAAA,WACH,OAAA,KAAKF,MAAM7L,OAAS,IAkKtB+L,CAAAA,IAAAA,aAlJIc,MAAAA,SAAAA,GACL,GAAA,KAAKC,mBAAqBD,EAA1B,CAIEE,IAAAA,EAAgBF,EAASG,cAC3B,KAAKF,kBAAoBC,EAAcE,SAAS,KAAKH,mBAClDA,KAAAA,iBAAiBI,UAAUC,OAAOnB,GAGpCc,KAAAA,iBAAmBD,EACnBC,KAAAA,iBAAiBI,UAAU1E,IAAIwD,GAE9BoB,IAAAA,EAA0B,IAAIC,YAAY,qBAAsB,CAC3D,SAAA,EACD,OAAA,CAAER,SAAF,KAELlG,KAAAA,KAAK2G,cAAcF,GAEpB5O,SAAS+O,yBAAyBC,aAC3BD,SAAAA,cAAcE,UA8HpB1B,CAAAA,IAAAA,YA7GGc,MAAAA,SAAAA,GACJ,GAAA,KAAKa,kBAAoBb,EAAzB,CAICc,KAAAA,cAEAD,KAAAA,gBAAkBb,EAClBa,KAAAA,gBAAgBR,UAAU1E,IAAIyD,GAE7B2B,IAAAA,EAAyB,IAAIP,YAAY,oBAAqB,CACzD,SAAA,EACD,OAAA,CAAER,SAAF,KAELlG,KAAAA,KAAK2G,cAAcM,GAEpBpP,SAAS+O,yBAAyBC,aAC3BD,SAAAA,cAAcE,UA4FpB1B,CAAAA,IAAAA,cArFO,MAAA,WACR,KAAK2B,kBACFA,KAAAA,gBAAgBR,UAAUC,OAAOlB,GACjCyB,KAAAA,gBAAkB,QAkFpB3B,CAAAA,IAAAA,OA1EA,MAAA,WACC8B,IAAAA,EAAS,KAAKC,eACdC,EAAUvP,SAASwP,eAAe,KAAK9B,MAKtC6B,OAJCE,EAAAA,mBAAmB,YAAaJ,GAEnCK,KAAAA,QAAQH,GAENA,IAmEFhC,CAAAA,IAAAA,eAzDQ,MAAA,WAMR,IALCoC,IAAAA,EAAqB3G,EAAO4G,OAAAA,SAASC,UAAU9N,MAAM,GACrD+N,EAAyB9G,EAAO4G,OAAAA,SAASrB,cAAcxM,MAAM,GAC7DgO,EAAgB/G,EAAO4G,OAAAA,SAAS/O,KAAKkB,MAAM,GAE7CsL,EAAQ,GACH9K,EAAI,EAAGA,EAAI,KAAKoL,WAAYpL,IAAK,CAEhBwN,GAAAA,eAAAA,EAA6BxN,iBAAAA,EAAI,GACtCyN,+BAFIhH,EAAOiH,OAAAA,OAAOC,OAAU,IAAA,KAAKxC,KAAQnL,IAAAA,EAA5D,QAE6CA,gBAAAA,EAAI,GADjD,mBAKI4N,IAEAC,EAA2BL,eAAAA,EAAiBA,IAAAA,EAGjCI,mHALSnH,EAAOiH,OAAAA,OAAOI,UAAa,IAAA,KAAK3C,MAKtB,KAAA,KAAKA,KAExB,2CAAA,KAAKC,WALtB,yCASM2C,EACKP,sBAAAA,EADX,yFAMsBJ,MAAAA,eAAAA,EACNG,yBAAAA,EACV9G,gBAAAA,EAAOoH,OAAAA,UAAYA,EAAY,IAC/B/C,aAAAA,EACAiD,aAAAA,EAJN,+BA2BK/C,CAAAA,IAAAA,UAfCpF,MAAAA,SAAAA,GACDA,KAAAA,KAAOA,EACP6F,KAAAA,eAAiB7F,EAAKoI,cAAcvH,EAAO4G,OAAAA,SAASC,WACpD5B,KAAAA,OAAS9F,EAAKqI,iBAAiB,eAC/BpC,KAAAA,eAAiB,IAAI7C,EAAJ,cAAkB,KAAKC,SAAU,MAElD,KAAKA,SAASiF,kBACZjF,KAAAA,SAASkF,eAAe,MAE1BtD,KAAAA,WAAWjF,EAAKoI,cAAcvH,EAAO4G,OAAAA,SAAS/O,OAE9C8P,KAAAA,QAAS,IAITpD,CAAAA,IAAAA,OA/MI,IAAA,WACF,OAAA,KAAKK,QA8MPL,CAAAA,IAAAA,aAxMU,IAAA,WACR,OAAA,KAAKM,cAuMPN,CAAAA,IAAAA,SAjMM,IAAA,WACJ,OAAA,KAAKO,SAMH6C,IAAAA,SAAAA,GACJ7C,KAAAA,QAAU6C,IAyLVpD,CAAAA,IAAAA,OAtLI,IAAA,WACF,OAAA,KAAKQ,OAGL5F,IAAAA,SAAAA,GACF4F,KAAAA,MAAQ5F,IAiLRoF,CAAAA,IAAAA,gBA9Ka,IAAA,WACX,OAAA,KAAKS,iBA6KPT,CAAAA,IAAAA,QA1KK,IAAA,WACH,OAAA,KAAKU,SAyKPV,CAAAA,IAAAA,mBA/JgB,IAAA,WACd,OAAA,KAAKW,mBAGOrN,IAAAA,SAAAA,GACdqN,KAAAA,kBAAoBrN,IA0JpB0M,CAAAA,IAAAA,kBA1He,IAAA,WACb,OAAA,KAAKY,kBAGMtN,IAAAA,SAAAA,GACbsN,KAAAA,iBAAmBtN,IAqHnB0M,CAAAA,IAAAA,eA9EY,IAAA,WACV,OAAA,KAAKa,mBA6EPb,EAtOHA,GAsOGA,QAAAA,iBAAAA;;AClMoBqD,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,qBAAAA,QAAAA,wBAAAA,EA7C7B,IAAA,EAAA,WAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,OAAA,YAAA,OAAA,GAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yDAAA,GAIA,EAAA,QAAA,iBACA,EAAA,QAAA,yBACA,EAAA,QAAA,mCACA,EAAA,QAAA,0BASA,SAASC,EAAmBrF,GACpB6E,IAAAA,EAAY,IAAInH,EAAJ,mBAOXmH,OALOtM,EAAAA,cAAAA,QAAQ,SAAwB,GAAA,IAAA,EAAA,EAAA,EAAA,GAAtB2J,EAAsB,EAAA,GAAhBC,EAAgB,EAAA,GACtClC,EAAM,IAAI8B,EAAJ,iBAAqB/B,EAAUkC,EAAMC,GACvClE,EAAAA,IAAIgC,EAAIiC,KAAMjC,KAGnB4E,EAOT,SAASO,EAAqBpF,GACtB6E,IAAAA,EAAY,IAAInH,EAAJ,mBAUXmH,OARe7E,EAASrD,KAAKqI,iBAAiBxH,EAAO4G,OAAAA,SAASnE,KACvD1H,QAAQ,SAAW,GACzB4J,IAAAA,EAAa4B,EAAQiB,iBAAiB,OAAOhP,OAAS,EACtDiK,EAAM,IAAI8B,EAAJ,iBAAqB/B,EAAU+D,EAAQuB,GAAInD,GACnD+B,EAAAA,QAAQH,GACF9F,EAAAA,IAAIgC,EAAIiC,KAAMjC,KAGnB4E,EAGAQ,QAAAA,mBAAAA,EAAoBD,QAAAA,qBAAAA;;ACwFpBG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,4BAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GArIT,EAAA,QAAA,iBAqISA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCA9HHA,IAAAA,EAAAA,WACQvF,SAAAA,EAAAA,GAAU,EAAA,KAAA,GACfA,KAAAA,SAAWA,EACXwF,KAAAA,UAAY,EACZC,KAAAA,aAAe,KACfC,KAAAA,aAAe,KACfC,KAAAA,SAAW,IAAIjK,qBAAqB,KAAKkK,2BAA2BtJ,KAAK,OAwHzEiJ,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QArHDM,MAAAA,SAAAA,GACCC,KAAAA,mBAAmBD,GAGnBE,KAAAA,UAAU,KAAKL,aAAc,YAAa,KAAKF,WAC/CO,KAAAA,UAAU,KAAKN,aAAc,aAAc,KAAKD,aAgHhDD,CAAAA,IAAAA,uBAxGgB,MAAA,WACjBS,IAAAA,EAAuB,GADN,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAGH,IAAA,IAAkC,EAAlC,EAAA,KAAKhG,SAAS6E,UAAUoB,SAAU,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAzChG,IAAAA,EAAyC,EAAA,MAC5C0E,EAAoBnH,EAAOiH,OAAAA,OAAOI,UAAa5E,IAAAA,EAAIiC,KAE9C1E,GAAAA,wBAAAA,EAAO4G,OAAAA,SAASnE,IAAI1J,MAAM,GAC7B0J,kBAAAA,EAAIiC,KACSyC,+BAAAA,EACD1E,+BAAAA,EAAIkC,YAAc3E,EAAOoH,OAAAA,UAAY,EAAI,IAJ7D,oBALmB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAahB5E,KAAAA,SAASrD,KAAKsH,mBAAmB,YAAa+B,KA2F9CT,CAAAA,IAAAA,qBAjFYM,MAAAA,SAAAA,GAYV,OATFJ,KAAAA,aAAe,KAAKzF,SAAS6E,UAAUqB,YAAYL,EAAU3D,MAAMnD,UACnE2G,KAAAA,aAAe,KAAK1F,SAAS6E,UAAUqB,YAAYL,EAAU3D,MAM7DuD,KAAAA,aAAa/G,OAEX,KAAKyH,aAAa,KAAKT,aAAahH,OAAQ,eAqE9C6G,CAAAA,IAAAA,YA3DGa,MAAAA,SAAAA,EAAkBC,EAAgBb,GACnCA,KAAAA,KACAW,KAAAA,aAAaC,EAAiB1H,OAAQ2H,KAyDxCd,CAAAA,IAAAA,eA7CMhG,MAAAA,SAAAA,EAAgB8G,GACvB9G,IAAAA,EAAe+G,KAAf/G,CAIEU,IAAAA,EAAMV,EAAe5H,MAAM,GAC7BsI,IAAAA,EAAIkF,OAkBDlF,OAbHoG,EAAAA,eAAiBA,EACM,eAAvBpG,EAAIoG,eACFpH,EAAAA,SAAW,KAAKwG,aAEhBxG,EAAAA,SAAW,KAAKyG,aAGda,QAAAA,KAAgBtG,WAAAA,EAAIiC,KAA5B,KAEIsE,EAAAA,OAECb,KAAAA,SAAS3Q,QAAQiL,EAAItD,MAEnBsD,EAjBGwG,QAAAA,KAAKxG,EAAIiC,KAAM,oCAsCpBqD,CAAAA,IAAAA,6BAZoBzG,MAAAA,SAAAA,EAAS6G,GAAU,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACxB7G,IAAAA,IAAS,EAATA,EAAAA,EAAS,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAlBnJ,IAAAA,EAAkB,EAAA,MACvBA,GAAAA,EAAMwD,eAAgB,CAClB8G,IAAAA,EAAM,KAAKD,SAAS6E,UAAUzG,IAAIzI,EAAMV,OAAOqQ,IAChDa,KAAAA,aAAalG,EAAIhB,SAASP,OAAQuB,EAAIoG,gBAElCvQ,EAAAA,UAAUH,EAAMV,UANe,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,QAYvCsQ,EA9HHA,GA8HGA,QAAAA,uBAAAA;;AC/BAmB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,yBAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAtGT,EAAA,QAAA,iBAsGSA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAjGHA,IAAAA,EAAAA,WACQ1G,SAAAA,EAAAA,GAIN,GAJgB,EAAA,KAAA,GACfA,KAAAA,SAAWA,EACX2G,KAAAA,cAAgB,KAEjB,yBAA0BpS,OAAQ,CAC9BqS,IAAAA,EAAuB,CACrB5G,KAAAA,EAASrD,KACH,WAAA,gBAGTgK,KAAAA,cAAgB,IAAIjL,qBAAqBmL,EAAyBD,IAsFpEF,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QAlFC,MAAA,WACF,KAAKC,cACFG,KAAAA,2BAEUnQ,MAAMoQ,KAAK,KAAK/G,SAASrD,KAAKqI,iBAAiB,kBACvDzM,QAAQ,SAAA,GAASyO,OAAAA,EAAUC,OA6E/BP,CAAAA,IAAAA,2BAzEoB,MAAA,WAAA,IAAA,EAAA,KACH/P,MAAMoQ,KAAK,KAAK/G,SAASrD,KAAKqI,iBAAiBxH,EAAO4G,OAAAA,SAASnE,MACvE1H,QAAQ,SAAA,GAAW,OAAA,EAAK2O,mBAAmBnD,OAuEpD2C,CAAAA,IAAAA,qBA/DY3C,MAAAA,SAAAA,GAAS,IAAA,EAAA,KACXpN,MAAMoQ,KAAKhD,EAAQiB,iBAAiB,kBAC5CzM,QAAQ,SAAA,GAAS,OAAA,EAAKoO,cAAc3R,QAAQiS,SA6D9CP,EAjGHA,GA8CN,SAASG,EAAwB/H,EAAS6G,GAAU,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAC9B7G,IAAAA,IAAS,EAATA,EAAAA,EAAS,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAlBnJ,IAAAA,EAAkB,EAAA,MACvBA,EAAMwD,iBACExD,EAAAA,EAAMV,QACPa,EAAAA,UAAUH,EAAMV,UAJqB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,IAcpD,SAAS+R,EAAUC,GACZA,EAAME,QAAQC,KAKbC,EAAAA,aAAa,MAAOJ,EAAME,QAAQC,KAClCE,EAAAA,gBAAgB,YAChBxK,EAAAA,iBAAiB,OAAQ,WAAMyK,OAAAA,EAAsBN,MANjDO,QAAAA,MAAM,yDAA0DP,GAc5E,SAASM,EAAsBN,GACzBzJ,EAAOiK,OAAAA,qBACUR,EAAAA,GAUvB,SAASS,EAAmBT,GACpBlD,IAAAA,EAAUkD,EAAMU,QAAQnK,EAAO4G,OAAAA,SAASnE,KAE1C8D,GAAAA,IAAYA,EAAQ6D,MAAMC,QAAQC,SAAS,uBAAwB,CAC/DC,IAAAA,EAAcd,EAAMe,aAAef,EAAMgB,cACvCL,EAAAA,MAAMM,YAAY,sBAAuBH,EAAYI,aAIxDzB,QAAAA,oBAAAA;;ACrEA0B,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IA5BT,IAAIC,GAAkB,EAEtB,IACQC,IAAAA,EAAOC,OAAO5T,eAAe,GAAI,UAAW,CAC3C,IAAA,WACe,GAAA,KAIfmI,OAAAA,iBAAiB,cAAe,KAAMwL,GACtCrL,OAAAA,oBAAoB,cAAe,KAAMqL,GAChD,MAAOE,IAYT,IAAMJ,EAAW,CACPC,SAAAA,GAAkB,CAAEI,SAAS,GAC5BJ,UAAAA,GAAkB,CAAEI,SAAS,IAG/BL,QAAAA,SAAAA;;ACCAM,aAtBT,SAASA,EAASC,EAAMC,GAAMC,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACpCzM,OAAJ,EAEO,OAAA,WACC0M,IAAAA,EAAU,KAAMC,EAAOC,UAQvBC,EAAUJ,IAAczM,EACjBA,aAAAA,GACHG,EAAAA,WATI,WACF,EAAA,KACLsM,GACEK,EAAAA,MAAMJ,EAASC,IAMIH,GAExBK,GACGC,EAAAA,MAAMJ,EAASC,IAKjBL,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,SAAAA;;AC+MAS,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,8BAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAjPT,EAAA,QAAA,iBACA,EAAA,QAAA,sCACA,EAAA,QAAA,wBA+OSA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCA7OT,IAAMC,EAAY,CACN,SAAA,CACD,MAAA,UAEG,WAAA,CACH,MAAA,WAOLD,EAAAA,WACQnJ,SAAAA,EAAAA,GAAU,EAAA,KAAA,GACfqJ,KAAAA,OAAS9U,OAAO+U,WAAa,EAC7BC,KAAAA,OAAShV,OAAOiV,YAAc,EAC9BxJ,KAAAA,SAAWA,EA6NXmJ,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QA1NC,MAAA,WACDM,KAAAA,yBACAC,KAAAA,4BACAC,KAAAA,wBACAC,KAAAA,kBAsNAT,CAAAA,IAAAA,yBAhNkB,MAAA,WACdrM,SAAAA,iBAAiB,YAAa,KAAK+M,mBAAmBvN,KAAK,MAAO8L,EAASK,SAAAA,WA+M/EU,CAAAA,IAAAA,4BApMqB,MAAA,WACjBrM,SAAAA,iBACP,UACA,EAAS,EAAA,UAAA,KAAKgN,0BAA0BxN,KAAK,MAAO,IACpD8L,EAASK,SAAAA,WAgMNU,CAAAA,IAAAA,wBAzLiB,MAAA,WAAA,IAAA,EAAA,KACJxS,MAAMoQ,KAAK,KAAK/G,SAASrD,KAAKqI,iBAAiBxH,EAAO4G,OAAAA,SAASnE,MACvE1H,QAAQ,SAAW,GACtBwR,EAAAA,qBAAqBhG,GACpBM,IAAAA,EAAYN,EAAQgB,cAAcvH,EAAO4G,OAAAA,SAASC,WACpDA,GACG2F,EAAAA,sBAAsB3F,OAmL1B8E,CAAAA,IAAAA,uBAzKcpF,MAAAA,SAAAA,GACXjH,EAAAA,iBAAiB,QAAS,KAAKmN,uBAAuB3N,KAAK,MAAO8L,EAAS8B,SAAAA,QAC3EpN,EAAAA,iBAAiB,QAAS,KAAKqN,kBAAkB7N,KAAK,MAAO8L,EAASK,SAAAA,SACtE3L,EAAAA,iBAAiB,YAAa,KAAKsN,gBAAgB9N,KAAK,MAAO8L,EAASK,SAAAA,WAsK3EU,CAAAA,IAAAA,wBA9Je9H,MAAAA,SAAAA,GACNvE,EAAAA,iBACZ,UACA,EAAS,EAAA,UAAA,KAAKgN,0BAA0BxN,KAAK,MAAO,IACpD8L,EAASK,SAAAA,WA0JNU,CAAAA,IAAAA,qBAjJYvM,MAAAA,SAAAA,GACZyM,KAAAA,OAASzM,EAAMyN,QACfd,KAAAA,OAAS3M,EAAM0N,UA+IfnB,CAAAA,IAAAA,4BAzIqB,MAAA,WACpBoB,IAAAA,EAAgB/V,SAASgW,iBAAiB,KAAKnB,OAAQ,KAAKE,QAC5DkB,EAAaF,EAAc5C,QAAQnK,EAAO4G,OAAAA,SAASnE,KAErD,GAACwK,EAAD,CAIExK,IAAAA,EAAM,KAAKD,SAAS6E,UAAUzG,IAAIqM,EAAWnF,IAE/C,GAACrF,EAAIkF,OAAL,CAICnF,KAAAA,SAAS0K,cAAczK,GAEtB0K,IAAAA,EAAcJ,EAAc5C,QAAQnK,EAAO4G,OAAAA,SAAS/O,MACtDsV,GACEC,EAAAA,UAAUD,OAuHXxB,CAAAA,IAAAA,yBA9GgBvM,MAAAA,SAAAA,GAEfqD,IAAAA,EAAM,KAAKD,SAAS6E,UAAUzG,IAAIxB,EAAMiO,cAAcvF,IAExD,GAACrF,EAAIkF,OAAL,CAIE2F,IACAC,EADQvQ,KAAKwQ,IAAIpO,EAAMqO,OAASrO,EAAMsO,QACT,EAAI9B,EAAU+B,SAAW/B,EAAUgC,WAGlEL,GAAAA,IAAuB3B,EAAU+B,UAAYvO,EAAMyO,SAAU,CAEzDC,EAAAA,iBAEAC,IAAAA,EAAQ3O,EAAMmO,EAAmBQ,OAEnCC,EAAAA,aAAalL,GAAG9F,KAAKiR,KAAKF,QA4F3BpC,CAAAA,IAAAA,oBAnFWvM,MAAAA,SAAAA,GACVqD,IAAAA,EAAM,KAAKD,SAAS6E,UAAUzG,IAAIxB,EAAMiO,cAAcvF,IAExD,GAACrF,EAAIkF,SAIJnF,KAAAA,SAASkF,eAAejF,IAEzBzC,EAAOyD,OAAAA,+BAAPzD,CAIEnI,IAAAA,EAAOuH,EAAM3H,OAAO0S,QAAQnK,EAAO4G,OAAAA,SAAS/O,MAC9CA,GACEuM,EAAAA,WAAWvM,MAoEZ8T,CAAAA,IAAAA,kBA3DSvM,MAAAA,SAAAA,GACRqD,IAAAA,EAAM,KAAKD,SAAS6E,UAAUzG,IAAIxB,EAAMiO,cAAcvF,IAExD,GAACrF,EAAIkF,OAAL,CAICnF,KAAAA,SAAS0K,cAAczK,GAEtB5K,IAAAA,EAAOuH,EAAM3H,OAAO0S,QAAQnK,EAAO4G,OAAAA,SAAS/O,MAC9CA,GACEuV,EAAAA,UAAUvV,MAgDX8T,CAAAA,IAAAA,gBAzCS,MAAA,WACLrM,SAAAA,iBAAiB,UAAW,KAAK4O,eAAepP,KAAK,MAAO8L,EAASK,SAAAA,SACrE3L,SAAAA,iBAAiB,QAAS,KAAK6O,aAAarP,KAAK,MAAO8L,EAASK,SAAAA,SACnE3L,OAAAA,iBAAiB,OAAQ,KAAK8O,eAAetP,KAAK,MAAO8L,EAASK,SAAAA,WAsCpEU,CAAAA,IAAAA,iBA9BQvM,MAAAA,SAAAA,GACPqD,IAAAA,EAAM,KAAKD,SAAS6L,gBACtB5L,GAAyB,KAAlBrD,EAAMkP,SACXnP,EAAAA,KAAKiL,MAAMM,YAAY,SAAU,eA2BlCiB,CAAAA,IAAAA,eAlBMvM,MAAAA,SAAAA,GACLqD,IAAAA,EAAM,KAAKD,SAAS6L,gBACtB5L,GAAyB,KAAlBrD,EAAMkP,SACXnP,EAAAA,KAAKiL,MAAMM,YAAY,SAAU,UAelCiB,CAAAA,IAAAA,iBARU,MAAA,WACTlJ,IAAAA,EAAM,KAAKD,SAAS6L,gBACtB5L,GACEtD,EAAAA,KAAKiL,MAAMM,YAAY,SAAU,YAKlCiB,EAjOHA,GAiOGA,QAAAA,yBAAAA;;AC3JA4C,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,iCAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAtFT,EAAA,QAAA,sCAsFSA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCApFT,IAAMC,EAAkB,CAClB,GAAA,SACA,GAAA,WACA,GAAA,SACA,GAAA,UACA,GAAA,YACA,GAAA,UACA,GAAA,aACA,GAAA,aAMAD,EAAAA,WACQ/L,SAAAA,EAAAA,GAAU,IAAA,EAAA,KAAA,EAAA,KAAA,GACfA,KAAAA,SAAWA,EAEXiM,KAAAA,WAAa,CACP,QAAA,CACE,QAAA,WACFjM,EAAAA,SAASiF,iBAAiBuG,aAAa7R,KAC1C,EAAKqG,SAASiF,iBAAiBtD,eAI7B,OAAA,CACG,QAAA,WACF3B,EAAAA,SAASiF,iBAAiBuG,aAAa5R,MAC1C,EAAKoG,SAASiF,iBAAiBtD,eAI1B,UAAA,CACA,QAAA,SAAS,GACX3B,EAAAA,SAASiF,iBAAiBuG,aAAa7R,KAAKiD,EAAMyO,SAAW,EAAI,KAG9D,WAAA,CACD,QAAA,SAAS,GACXrL,EAAAA,SAASiF,iBAAiBuG,aAAa5R,MAAMgD,EAAMyO,SAAW,EAAI,KAGlE,QAAA,CACE,QAAA,SAAS,GACXrL,EAAAA,SAASkM,iBAAiBC,GAAGvP,EAAMyO,SAAW,EAAI,KAGhD,UAAA,CACA,QAAA,SAAS,GACXrL,EAAAA,SAASkM,iBAAiBE,KAAKxP,EAAMyO,SAAW,EAAI,KAGrD,OAAA,CACG,QAAA,WACFrL,EAAAA,SAASkM,iBAAiBC,GAAG,KAG5B,SAAA,CACC,QAAA,WACFnM,EAAAA,SAASkM,iBAAiBE,KAAK,MAwBrCL,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,QAlBC,MAAA,WACGjP,SAAAA,iBAAiB,UAAW,KAAKuP,oBAAoB/P,KAAK,MAAO8L,EAAS8B,SAAAA,UAiB9E6B,CAAAA,IAAAA,sBATanP,MAAAA,SAAAA,GACdA,GAAAA,EAAMkP,WAAWE,EAAiB,CAC9BV,EAAAA,iBACAgB,IAAAA,EAAUN,EAAgBpP,EAAMkP,SACjCG,KAAAA,WAAWK,GAASC,QAAQ3P,QAK9BmP,EAtEHA,GAsEGA,QAAAA,4BAAAA;;ACWAS,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAtFHA,IAAAA,EAAAA,WAKQxM,SAAAA,EAAAA,GAAU,EAAA,KAAA,GACfA,KAAAA,SAAWA,EACXf,KAAAA,SAAW,KA+EXuN,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,KAtEJnM,MAAAA,SAAAA,GACKoM,IAAAA,EAAuB,KAAKzM,SAASiF,iBAAiB/C,KACvDjD,KAAAA,SAAW,KAAKe,SAAS6E,UAAUqB,YAAYuG,GAAsB1N,UACrEuB,KAAAA,GAAGD,KAmEHmM,CAAAA,IAAAA,OA1DFnM,MAAAA,SAAAA,GACGoM,IAAAA,EAAuB,KAAKzM,SAASiF,iBAAiB/C,KACvDjD,KAAAA,SAAW,KAAKe,SAAS6E,UAAUqB,YAAYuG,GAC/CnM,KAAAA,GAAGD,KAuDHmM,CAAAA,IAAAA,KA7CJnM,MAAAA,SAAAA,GACIpB,KAAAA,SAASP,OAGT,IADDa,IAAAA,OAAJ,EACSxI,EAAI,EAAGA,EAAIsJ,EAAUtJ,IAExBwI,IADa,EAAA,KAAKN,SAASP,QACZ4H,KACjB,OAIET,IAAAA,EAAYtG,EAAe5H,MAAM,GAClCqI,KAAAA,SAASkF,eAAeW,GACxB6G,KAAAA,uBAAuB7G,KAgCvB2G,CAAAA,IAAAA,yBA1BgBvM,MAAAA,SAAAA,GACf0M,IAAAA,EAAS,KAAKC,mBAAmB3M,EAAItD,MACrCkQ,EAAY5M,EAAItD,KAAK7B,aAAe,EACtC6R,EAAOlT,IAAM,EACRqT,OAAAA,SAAS,IAAKtS,KAAKwQ,IAAI2B,EAAOlT,KAAOoT,IACnCF,EAAOjT,OAAS,GAClBoT,OAAAA,SAAS,EAAGtS,KAAKwQ,IAAI2B,EAAOjT,QAAUmT,KAoB1CL,CAAAA,IAAAA,qBATYlX,MAAAA,SAAAA,GACXyX,IAAAA,EAAQvY,SAAS8F,gBAChB,MAAA,CACAhF,IAAAA,EAAQ0X,UAAYzY,OAAO0Y,QACxB1Y,OAAAA,OAAO0Y,QAAUF,EAAMjS,cAAgBxF,EAAQ0X,UAAY1X,EAAQ4X,mBAKxEV,EAtFHA,GAsFGA,QAAAA,kBAAAA;;ACwEAW,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,kBAAAA,EAzKT,IAAA,EAAA,QAAA,sCASIC,OAAJ,EAEA,SAASD,IACDE,IAAAA,EAAa7Y,SAASuQ,cAAc,iCAEtC,GAACsI,EAAD,CAIEC,IAAAA,EAAqBC,EAAiB,QACjCtJ,EAAAA,mBAAmB,YAAaqJ,GAElB3W,MAAMoQ,KAAKvS,SAASwQ,iBAAiB,8BAC7CzM,QAAQ,SAAU,GAC1BuE,EAAAA,iBAAiB,QAAS,SAAS,GAClC0Q,IAAAA,EAAc5Q,EAAMiO,cAAc1D,QAAQqG,YAEtCC,EADIjZ,SAASuQ,cAA6ByI,eAAAA,EAApD,UAKsB7W,MAAMoQ,KAAKvS,SAASwQ,iBAAiB,6BAC7CzM,QAAQ,SAAU,GAC3BuE,EAAAA,iBAAiB,QAAS,SAAS,GAE7B2Q,EADG7Q,EAAMiO,cAAclD,QAAQ,gBAMhD,SAAS4F,EAAiBG,GAC2CA,MAAAA,4DAAAA,EAAMC,cACrED,WAAAA,EADJ,gBAUF,SAASE,EAAUH,GACH,OAAVA,IAKiBjZ,EAAAA,SAAS+O,cAErBlJ,SAAAA,KAAKgN,aAAa,cAAe,QACpCA,EAAAA,aAAa,cAAe,SAEjBoG,EAAAA,GAGR3Q,SAAAA,iBAAiB,UAAW+Q,EAAezF,EAASK,SAAAA,SACvD3L,EAAAA,iBAAiB,UAAWgR,EAAY1F,EAAS8B,SAAAA,QACjDpN,EAAAA,iBAAiB,QAASiR,EAAmB3F,EAASK,SAAAA,UAQ9D,SAASuF,EAAiBP,GACNQ,EAAqBR,GAC7B,GAAGS,QAQf,SAASC,EAAWV,GACJ,OAAVA,IAIKpT,SAAAA,KAAKgN,aAAa,cAAe,SACpCA,EAAAA,aAAa,cAAe,QAGzBpK,SAAAA,oBAAoB,UAAW4Q,EAAezF,EAASK,SAAAA,SAC1DxL,EAAAA,oBAAoB,UAAW6Q,EAAY1F,EAAS8B,SAAAA,QACpDjN,EAAAA,oBAAoB,QAAS8Q,EAAmB3F,EAASK,SAAAA,SAG5CyF,EAAAA,SAQrB,SAASH,EAAkBnR,GACnB6Q,IAAAA,EAAQjZ,SAASuQ,cAAc,+BACjC0I,IAAU7Q,EAAM3H,QACPwY,EAAAA,GASf,SAASI,EAAcjR,GACC,KAAlBA,EAAMkP,SACGtX,EAAAA,SAASuQ,cAAc,gCAStC,SAAS+I,EAAWlR,GACdA,GAAkB,IAAlBA,EAAMkP,QAANlP,CAIE2G,IAAAA,EAAgB/O,SAAS+O,cAEzB6K,EADYH,EAAqBrR,EAAMiO,eACnB9U,OAAO,SAAA,GAAWT,OAAAA,EAAQ+Y,UAAY,IAE5DD,EAAQpY,OAAS,EACbsV,EAAAA,iBAIJ1O,EAAMyO,SACJ9H,IAAkB6K,EAAQ,KACpBA,EAAAA,EAAQpY,OAAS,GAAGkY,QACtB5C,EAAAA,kBAGJ/H,IAAkB6K,EAAQA,EAAQpY,OAAS,KACrC,EAAA,GAAGkY,QACL5C,EAAAA,mBAWZ,SAAS2C,IAAqBK,IAAAA,EAAW9Z,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAAA,SAChCmC,OAAAA,MAAMoQ,KAAKuH,EAAStJ,iBAAiBuJ,IAG9C,IAAMA,EACJ,4FAEOpB,QAAAA,aAAAA;;ACVAqB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAjIHA,IAAAA,EAAAA,WACQxO,SAAAA,EAAAA,EAAUkC,EAAMuM,GAOtBC,GAPmC,EAAA,KAAA,GAClC1O,KAAAA,SAAWA,EACXkC,KAAAA,KAAOA,EACPuM,KAAAA,YAAcA,EACdE,KAAAA,SAAU,EACVC,KAAAA,aAAe,kBAEDJ,EACX,MAAA,IAAIK,UAAU,sDAGlB,GAAA,KAAKC,SAAWN,EAAe9Z,UAAUoa,OACrC,MAAA,IAAID,UAAU,4DAGlB,GAAA,KAAKE,UAAYP,EAAe9Z,UAAUqa,QACtC,MAAA,IAAIF,UAAU,6DAgHjBL,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SA5GE,MAAA,WACFG,KAAAA,SAAU,EAEV,KAAKC,eACHA,KAAAA,aAAe,KAAKI,qBACrB,KAAKJ,cACFA,KAAAA,aAAa9R,iBAAiB,QAAS,KAAKmS,mBAAmB3S,KAAK,UAsGxEkS,CAAAA,IAAAA,UAjGG,MAAA,WACHG,KAAAA,SAAU,IAgGVH,CAAAA,IAAAA,qBAxFc,MAAA,WACbU,IAAAA,EAAW1a,SAASuQ,cAAc,sBAEpC,IAACmK,EACI,OAAA,KAGHC,IAAAA,EAE6B,6FAAA,KAAKjN,KAAe,WAAA,KAAKuM,YAInC,iHAAA,KAAKvM,KACR,oCAAA,KAAKA,KAP3B,8LAeS+B,EAAAA,mBAAmB,YAAakL,GAEnCC,IAAAA,EAASF,EAASnK,cAAgC,kBAAA,KAAK7C,KAA7D,MAGOkN,OAFA/H,EAAAA,aAAa,eAAgB,KAAKsH,QAAQxG,YAE1CiH,IA6DFZ,CAAAA,IAAAA,qBArDY5R,MAAAA,SAAAA,GACXwS,IAAAA,EAASxS,EAAMiO,cAEjBuE,GAAAA,aAAkB5L,YAAa,CAC3B6L,IAAAA,EAAoD,SAAxCD,EAAOE,aAAa,gBAC/BjI,EAAAA,aAAa,eAAgBkI,QAAQF,IAEvCG,KAAAA,oBAAoBJ,EAAQ,mBA8C9BZ,CAAAA,IAAAA,sBApCaY,MAAAA,SAAAA,EAAQK,GAClB,QAAA,GACDL,KAAAA,EAAOM,aAAa,gBACgB,SAAnCN,EAAOE,aAAaG,GACjBX,KAAAA,SAEAC,KAAAA,UAEP,MAEF,QACUtI,QAAAA,KAAK,2CAA4C2I,QAyBxDZ,EAjIHA,GAiIGA,QAAAA,eAAAA;;ACrBAmB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,0BAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,SAAAA,WAAAA,IAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,OAAAA,eAAAA,GAAAA,OAAAA,OAAAA,OAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,UAAAA,EAAAA,OAAAA,EAAAA,MAAAA,IAAAA,EAAAA,EAAAA,IAAAA,YAAAA,IAAAA,EAAAA,EAAAA,KAAAA,QAAAA,GA1IT,EAAA,QAAA,8BACA,EAAA,QAAA,sCACA,EAAA,QAAA,iBAwISA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GAhIHA,IAAAA,EAAAA,SAAAA,GACQ3P,SAAAA,EAAAA,GAAU,EAAA,KAAA,GACdyO,IACAzO,EAAAA,EAAAA,MAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,KAAAA,EAAU,uBADI,6CADA,OAIf4P,EAAAA,kBAAoB,EAAKC,aAAavT,KAA3C,GACKwT,EAAAA,wBAA0B,EAAKC,mBAAmBzT,KAAvD,GALoB,EA+HfqT,OAAAA,EAAAA,EAhI0BnB,EAAAA,gBAgI1BmB,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAvHE,MAAA,WACE7S,SAAAA,iBAAiB,UAAW,KAAK8S,kBAAmBxH,EAASK,SAAAA,SAC7D3L,SAAAA,iBAAiB,WAAY,KAAKgT,wBAAyB1H,EAASK,SAAAA,SAC7E,EAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,SAAA,MAAA,KAAA,QAoHKkH,CAAAA,IAAAA,UAjHG,MAAA,WACC1S,SAAAA,oBAAoB,UAAW,KAAK2S,mBACpC3S,SAAAA,oBAAoB,WAAY,KAAK6S,yBAC9C,EAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,UAAA,MAAA,KAAA,QA8GKH,CAAAA,IAAAA,eAxGM/S,MAAAA,SAAAA,GACPA,GAAkB,KAAlBA,EAAMkP,QAANlP,CAIEoT,IAAAA,EAAepT,EAAMqT,QACrBhQ,EAAM,KAAKD,SAASiF,iBACLiL,EAAAA,iBAAiBjQ,EAAItD,KAAMsD,EAAI6C,iBAAkBkN,MAiGjEL,CAAAA,IAAAA,qBA3FY/S,MAAAA,SAAAA,GACbA,GAAiB,IAAjBA,EAAMwS,OAANxS,CAIEiG,IAAAA,EAAWjG,EAAM3H,OAAO0S,QAAQnK,EAAO4G,OAAAA,SAAS/O,MAChD0O,EAAUlB,EAAS8E,QAAQnK,EAAO4G,OAAAA,SAASnE,KAC7C8D,GAAAA,EAAS,CAEUmM,EAAAA,iBAAiBnM,EAASlB,GAD1B,QAmFlB8M,CAAAA,CAAAA,IAAAA,mBAxEiB5L,MAAAA,SAAAA,EAAS1O,EAAM2a,GAGjCG,EAAc9a,IAIG+a,EAAAA,mBAAmBrM,EAAS1O,EAAM2a,KAiElDL,CAAAA,IAAAA,qBAvDmB5L,MAAAA,SAAAA,EAAS1O,EAAM2a,GACjCK,IAAAA,EAAYhb,EAAK8R,QAAQmJ,KACzBC,EAAyB,MAAdF,EAA6BA,SAAAA,EAAc,GACtDG,EAAazM,EAAQoD,QAAQsJ,UAAYF,EAE3CP,EACKU,OAAAA,KAAKF,GAELG,OAAAA,SAASC,KAAOJ,MA+CpBb,EAhIHA,GA4FN,SAASQ,EAAc7a,GACfub,IAAAA,EAAMvb,EAAQwb,QAAQnD,cACxBoD,GAAyB,EAErB,QAAA,GACD,IAAA,CAAC,IAAK,QAAQjJ,SAAS+I,GACtB,IAACvb,EAAQoa,aAAa,QACjB,OAAA,EAGgB,GAAA,EACzB,MACG,IAAA,CAAC,QAAS,SAAU,WAAY,UAAU5H,SAAS+I,GAClDvb,GAAAA,EAAQ0b,SACH,OAAA,EAGgB,GAAA,EACzB,MACG,IAAA,CAAC,SAAU,SAAU,SAASlJ,SAAS+I,GACjB,GAAA,EACzB,MACF,QACMvb,EAAQoa,aAAa,qBACE,GAAA,GAK3BqB,SAAAA,GAAmD,OAAzBzb,EAAQ2b,cAO/BtB,QAAAA,qBAAAA;;AC3EAuB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,sBAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,SAAAA,WAAAA,IAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,CAAAA,IAAAA,EAAAA,OAAAA,eAAAA,GAAAA,OAAAA,OAAAA,OAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,UAAAA,EAAAA,OAAAA,EAAAA,MAAAA,IAAAA,EAAAA,EAAAA,IAAAA,YAAAA,IAAAA,EAAAA,EAAAA,KAAAA,QAAAA,GA/DT,EAAA,QAAA,8BACA,EAAA,QAAA,sCA8DSA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GA5DHA,IAAAA,EAAAA,SAAAA,GACQlR,SAAAA,EAAAA,GAAU,EAAA,KAAA,GACdyO,IACAzO,EAAAA,EAAAA,MAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,KAAAA,EAAU,mBADI,8BADA,OAIfmR,EAAAA,qBAAuB,EAAKC,gBAAgB9U,KAAjD,GACK+U,EAAAA,uBAAyB,EAAKC,kBAAkBhV,KAArD,GACKiV,EAAAA,eAAiB/c,SAASuQ,cAAc,+BACxCyM,EAAAA,gBAAkB,KAClBC,EAAAA,eAAiB,KARF,EA2DfP,OAAAA,EAAAA,EA5DsB1C,EAAAA,gBA4DtB0C,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAhDE,MAAA,WACFQ,KAAAA,qBACA1R,KAAAA,SAASrD,KAAKG,iBAAiB,wBAAyB,KAAKqU,qBAAsB/I,EAASK,SAAAA,SAC5FzI,KAAAA,SAASrD,KAAKG,iBAAiB,oBAAqB,KAAKuU,uBAAwBjJ,EAASK,SAAAA,SAC/F,EAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,SAAA,MAAA,KAAA,QA4CKyI,CAAAA,IAAAA,UAzCG,MAAA,WACHS,KAAAA,qBACA3R,KAAAA,SAASrD,KAAKM,oBAAoB,wBAAyB,KAAKkU,sBAChEnR,KAAAA,SAASrD,KAAKM,oBAAoB,oBAAqB,KAAKoU,wBACjE,EAAA,EAAA,UAAA,WAAA,OAAA,eAAA,EAAA,WAAA,UAAA,MAAA,KAAA,QAqCKH,CAAAA,IAAAA,qBAlCc,MAAA,WAMdK,KAAAA,eAAetN,mBAAmB,YALvC,2MAOM2N,IAAAA,EAAa,KAAKL,eAAeM,kBAClCL,KAAAA,gBAAkBI,EAAWC,kBAC7BJ,KAAAA,eAAiBG,EAAWE,iBAE5BL,KAAAA,eAAeM,YAAc,KAAK/R,SAASiF,iBAAiBtD,YAC5D6P,KAAAA,gBAAgBO,YAAc,KAAK/R,SAASiF,iBAAiBnC,iBAAiBqE,QAAQmJ,OAqBtFY,CAAAA,IAAAA,qBAlBc,MAAA,WACZ,KAAA,KAAKK,eAAeS,WACpBT,KAAAA,eAAeU,YAAY,KAAKV,eAAeS,WAGjDP,KAAAA,eAAiB,KACjBD,KAAAA,gBAAkB,OAYlBN,CAAAA,IAAAA,kBATStU,MAAAA,SAAAA,GACT6U,KAAAA,eAAeM,YAAcnV,EAAMsV,OAAOjS,IAAI0B,cAQ9CuP,CAAAA,IAAAA,oBALWtU,MAAAA,SAAAA,GACX4U,KAAAA,gBAAgBO,YAAcnV,EAAMsV,OAAOrP,SAASsE,QAAQmJ,SAI5DY,EA5DHA,GA4DGA,QAAAA,iBAAAA;;AC5CT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,QAAA,0BADA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,GAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,QACA,IAAA,EAAA,QAAA,sBAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,GAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA;;ACHSiB,aART,SAASA,EAAc7c,GACfsS,IAAAA,EAAQrT,OAAO8E,iBAAiB/D,GAChC8c,EAAaC,SAASzK,EAAMwK,YAC5BE,EAAcD,SAASzK,EAAM0K,aAE5BF,OAAAA,EAAa9c,EAAQid,YAAcD,EAGnCH,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,cAAAA;;ACAAK,aATT,SAASA,EAAsBC,GACvBC,IAAAA,EAAeD,EAAIlX,QAAQ,KAC7BmX,OAAAA,EAAe,EACVD,EAAIE,UAAUD,EAAe,GAG/B,KAGAF,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,sBAAAA;;ACubAI,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,cAAAA,EAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAvcT,EAAA,QAAA,iBACA,EAAA,QAAA,wBACA,EAAA,QAAA,gCACA,EAAA,QAAA,6BACA,EAAA,QAAA,kCACA,EAAA,QAAA,qCACA,EAAA,QAAA,2BACA,EAAA,QAAA,eAEA,EAAA,QAAA,4BAAYC,EAAAA,EAAAA,GAEZ,EAAA,QAAA,wBACA,EAAA,QAAA,6BACA,EAAA,QAAA,qCA0bSD,SAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,WAAAA,OAAAA,EAAAA,IAAAA,EAAAA,GAAAA,GAAAA,MAAAA,EAAAA,IAAAA,IAAAA,KAAAA,EAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,IAAAA,OAAAA,EAAAA,QAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAxbT,IAAM5Q,EAAkB,WAClBC,EAAiB,cAKjB2Q,EAAAA,WAIU,SAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GACPrQ,KAAAA,MAAQ,KACRuQ,KAAAA,WAAa,KACbC,KAAAA,kBAAoB,KACpBC,KAAAA,iBAAmB,KACnBC,KAAAA,mBAAqB,KAErBC,KAAAA,WAAa,KACbC,KAAAA,cAAgB,KAChBC,KAAAA,gBAAkB,KAEdtW,SAAAA,iBAAiB,mBAAoB,WACvCyF,EAAAA,MAAQ,EAAK8Q,UACbP,EAAAA,WAAa,EAAKQ,eAEnBC,IAAAA,OAAJ,EAEK/V,EAAOgW,OAAAA,gBACO,EAAA,IAAIjO,EAAJ,uBAA2B,IAC7BkO,uBAGX5N,IAAAA,EAAY,EAAK6N,0BAElBlW,EAAOgW,OAAAA,eACKG,EAAAA,MAAM9N,GAGlBX,EAAAA,eAAeW,GACf+N,EAAAA,qBAAqB/N,GAErB8N,EAAAA,QACAE,EAAAA,gBA8YFjB,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UApYG,MAAA,WACFkB,IAAAA,EAAetf,SAASuQ,cAAcvH,EAAO4G,OAAAA,SAASpE,UACtD+T,EAAeD,GAA8B,KAAKE,aAYjDD,OARHvW,EAAOyW,OAAAA,aAAsC,KAAvBzW,EAAOyW,OAAAA,aAClBrM,EAAAA,MAAMM,YAAY,eAAgB1K,EAAOyW,OAAAA,aAGpDzW,EAAO0W,OAAAA,gBAA4C,KAA1B1W,EAAO0W,OAAAA,gBACrBtM,EAAAA,MAAMM,YAAY,kBAAmB1K,EAAO0W,OAAAA,gBAGpDH,IAsXFnB,CAAAA,IAAAA,aAzWM,MAAA,WACLmB,IAAAA,EAAevf,SAAS2f,cAAc,OAKrCJ,OAJM7Q,EAAAA,UAAU1E,IAAIhB,EAAO4G,OAAAA,SAASpE,SAASzJ,MAAM,IAEjDwO,SAAAA,cAAc,mBAAmBqP,YAAYL,GAE/CA,IAmWFnB,CAAAA,IAAAA,eA7VQ,MAAA,WACNpV,OAAAA,EAAOgW,OAAAA,eAAgB,EAAqB,EAAA,sBAAA,OAAQ,EAAmB,EAAA,oBAAA,QA4VzEZ,CAAAA,IAAAA,0BAtVmB,MAAA,WAClByB,IAAAA,GAAqB,EAAsB9f,EAAAA,uBAAAA,OAAOoc,SAASxI,YAE7DtC,OAAJ,EAEI,GAAA,KAAKhB,UAAU1G,IAAIkW,GACT,EAAA,KAAKxP,UAAUzG,IAAIiW,QAC1B,GAA2C,IAAvC7f,SAAS8F,gBAAgBga,UAEtB,EAAA,KAAKzP,UAAUoB,SAASvH,OAAO/G,UACtC,CAGC4c,IAAAA,EAAgB,KAAK5X,KAAK9B,YAE1B2Z,EADgBhgB,SAASgW,iBAAiB+J,EAAgB,EAAGhgB,OAAOiV,YAAc,GACnD7B,QAAQnK,EAAO4G,OAAAA,SAASnE,KACjD,EAAA,KAAK4E,UAAUzG,IAAIoW,EAAelP,IAGzCO,OAAAA,IAmUF+M,CAAAA,IAAAA,uBAhUc/M,MAAAA,SAAAA,GACbwO,IAAAA,GAAqB,EAAsB9f,EAAAA,uBAAAA,OAAOoc,SAASxI,YAC7D3T,GAAuC,IAAvCA,SAAS8F,gBAAgBga,WAAmBD,EAAoB,CAC5DI,IAAAA,GAAgBlgB,OAAOiV,YAAc3D,EAAUlJ,KAAK7B,cAAgB,EAG/D,WAAA,WAAMvG,OAAAA,OAAOuY,SAAS,GAAI2H,IAAe,QA0TjD7B,CAAAA,IAAAA,QAjTC,MAAA,WACD1G,KAAAA,iBAAmB,IAAIM,EAAJ,kBAAsB,MAEzCkI,KAAAA,qBAEAC,KAAAA,YAAc,IAAIjO,EAAJ,oBAAwB,MACtCiO,KAAAA,YAAYhB,QAEZiB,KAAAA,iBAAmB,IAAIzL,EAAJ,yBAA6B,MAChDyL,KAAAA,iBAAiBjB,QAEM,IAAI5H,EAAJ,4BAAgC,MACxC4H,QAEfkB,KAAAA,yBACL,EAAA,EAAA,kBAkSKjC,CAAAA,IAAAA,wBA5RiB,MAAA,WAChBkC,IAAAA,EAAyB,IAAI5c,iBAAiB,KAAK6c,gBAAgBzY,KAAK,OAExD3F,MAAMoQ,KAAK,KAAKpK,KAAKqI,iBAAiBxH,EAAO4G,OAAAA,SAASnE,MAC9D1H,QAAQ,SAAW,GACRvD,EAAAA,QAAQ+O,EAAS,CAAEiR,WAAW,QAuRlDpC,CAAAA,IAAAA,kBA/QSqC,MAAAA,SAAAA,GAAe,IAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IACNA,IAAAA,IAAe,EAAfA,EAAAA,EAAe,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAA3BC,IAAAA,EAA2B,EAAA,MAChCA,GAA+B,IAA/BA,EAASC,WAAWnf,OAAc,CAC9B+N,IAAAA,EAAUmR,EAASjgB,OACpB0f,KAAAA,YAAYzN,mBAAmBnD,GAC9BM,IAAAA,EAAYN,EAAQgB,cAAcvH,EAAO4G,OAAAA,SAASC,WACpDA,GACGuQ,KAAAA,iBAAiB5K,sBAAsB3F,KAPrB,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,MA+QxBuO,CAAAA,IAAAA,cA7PO,MAAA,WACiB,IAAIC,EAAOlD,qBAAqB,MACxCb,SAEI,IAAI+D,EAAO3B,iBAAiB,MACpCpC,WAwPZ8D,CAAAA,IAAAA,iBA/MQ3S,MAAAA,SAAAA,GACT,GAAA,KAAKgF,mBAAqBhF,EAA1B,CAKA,KAAKgF,kBACFA,KAAAA,iBAAiBtI,KAAKuG,UAAUC,OAAOnB,GAIzCiD,KAAAA,iBAAmBhF,EACnBgF,KAAAA,iBAAiBtI,KAAKuG,UAAU1E,IAAIwD,GAEnCoT,IAAAA,EAA8B,IAAI/R,YAAY,yBAA0B,CACpE,OAAA,CAAEpD,IAAF,KAELtD,KAAAA,KAAK2G,cAAc8R,GAEpB5gB,SAAS+O,yBAAyBC,aAC3BD,SAAAA,cAAcE,UA2LpBmP,CAAAA,IAAAA,gBAjKO3S,MAAAA,SAAAA,GACR,GAAA,KAAK4L,kBAAoB5L,EAAzB,CAICoV,KAAAA,kBAGAxJ,KAAAA,gBAAkB5L,EAClB4L,KAAAA,gBAAgBlP,KAAKuG,UAAU1E,IAAIyD,GAElCqT,IAAAA,EAA6B,IAAIjS,YAAY,wBAAyB,CAClE,OAAA,CAAEpD,IAAF,KAELtD,KAAAA,KAAK2G,cAAcgS,GAEpB9gB,SAAS+O,yBAAyBC,aAC3BD,SAAAA,cAAcE,UAgJpBmP,CAAAA,IAAAA,kBApIW,MAAA,WAEZ,KAAK/G,kBACFA,KAAAA,gBAAgBlI,cAChBkI,KAAAA,gBAAgBlP,KAAKuG,UAAUC,OAAOlB,GACtC4J,KAAAA,gBAAkB,QA+HpB+G,CAAAA,IAAAA,qBAtDc,MAAA,WAAA,IAAA,EAAA,KACd2C,KAAAA,kBACAC,KAAAA,uBACAC,KAAAA,6BAGE3Y,OAAAA,iBAAiB,UAAU,EAAS,EAAA,UAAA,WACpCyY,EAAAA,kBACAC,EAAAA,uBACAC,EAAAA,8BACJ,QA4CE7C,CAAAA,IAAAA,kBApCW,MAAA,WACVvd,IAAAA,EAAO,KAAK4P,iBAAiBtI,KAAKoI,cAAcvH,EAAO4G,OAAAA,SAAS/O,MAChEqgB,GAAiB,EAAcrgB,EAAAA,eAAAA,GAEjC,KAAKkM,YAAcmU,IAChBnU,KAAAA,UAAYmU,EAEZ/Y,KAAAA,KAAKiL,MAAMM,YAAY,qBAAsB,KAAK3G,UAAY,SA6BhEqR,CAAAA,IAAAA,uBApBgB,MAAA,WACfvR,IAAAA,EAAgB,KAAK4D,iBAAiBtI,KAAKoI,cAAcvH,EAAO4G,OAAAA,SAASC,WAE3E,KAAKsR,iBAAmBtU,EAAcxG,cACnC8a,KAAAA,eAAiBtU,EAAcxG,YAE/B8B,KAAAA,KAAKiL,MAAMM,YAAY,oBAAqB,KAAKyN,eAAiB,SAcpE/C,CAAAA,IAAAA,6BALsB,MAAA,WACtBpR,KAAAA,aAAehH,KAAKob,MAAM,KAAKD,eAAiB,KAAKpU,aAIrDqR,CAAAA,IAAAA,OAjPI,IAAA,WACF,OAAA,KAAKrQ,QAgPPqQ,CAAAA,IAAAA,YAzOS,IAAA,WACP,OAAA,KAAKE,aAwOPF,CAAAA,IAAAA,mBAjOgB,IAAA,WACd,OAAA,KAAKG,mBAOO9S,IAAAA,SAAAA,GACd8S,KAAAA,kBAAoB9S,IAwNpB2S,CAAAA,IAAAA,kBAnLe,IAAA,WACb,OAAA,KAAKI,kBAOM/S,IAAAA,SAAAA,GACb+S,KAAAA,iBAAmB/S,IA0KnB2S,CAAAA,IAAAA,mBAvHgB,IAAA,WACd,OAAA,KAAKK,oBAOO4C,IAAAA,SAAAA,GACd5C,KAAAA,mBAAqB4C,IA8GrBjD,CAAAA,IAAAA,YAvGS,IAAA,WACP,OAAA,KAAKM,YAOA3R,IAAAA,SAAAA,GACP2R,KAAAA,WAAa3R,IA8FbqR,CAAAA,IAAAA,eAvFY,IAAA,WACV,OAAA,KAAKO,eAOG3R,IAAAA,SAAAA,GACV2R,KAAAA,cAAgB3R,IA8EhBoR,CAAAA,IAAAA,iBAvEc,IAAA,WACZ,OAAA,KAAKQ,iBAOKuC,IAAAA,SAAAA,GACZvC,KAAAA,gBAAkBuC,MA8DlB/C,EAlbHA,GAkbGA,QAAAA,SAAAA;;ACxbT,aAXA,IAAA,EAAA,QAAA,mCACA,EAAA,QAAA,wBAEA,EAA6Bre,EAAAA,8BAAAA,OAAQC,UAS/Boe,IAAAA,EAAJ","file":"app.125bdc76.map","sourceRoot":"src","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\nexport function polyfillIntersectionObserver(window, document) {\n  'use strict';\n\n  // Exits early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n  if (\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  ) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function () {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n    return;\n  }\n\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observering a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n  var registry = [];\n\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect;\n\n    // Calculates the intersection ratio.\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n    // Sets intersection ratio.\n    if (targetArea) {\n      this.intersectionRatio = intersectionArea / targetArea;\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    }\n\n    // Binds and throttles `this._checkForIntersections`.\n    this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this),\n      this.THROTTLE_TIMEOUT\n    );\n\n    // Private properties.\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n    // Public properties.\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues\n      .map(function (margin) {\n        return margin.value + margin.unit;\n      })\n      .join(' ');\n  }\n\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.observe = function (target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function (item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n    this._observationTargets.push({ element: target, entry: null });\n    this._monitorIntersections();\n    this._checkForIntersections();\n  };\n\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.unobserve = function (target) {\n    this._observationTargets = this._observationTargets.filter(function (item) {\n      return item.element != target;\n    });\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n      this._unregisterInstance();\n    }\n  };\n\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n  IntersectionObserver.prototype.disconnect = function () {\n    this._observationTargets = [];\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  };\n\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n  IntersectionObserver.prototype.takeRecords = function () {\n    var records = this._queuedEntries.slice();\n    this._queuedEntries = [];\n    return records;\n  };\n\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n  IntersectionObserver.prototype._initThresholds = function (opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n\n    return threshold.sort().filter(function (t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n      return t !== a[i - 1];\n    });\n  };\n\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n  IntersectionObserver.prototype._parseRootMargin = function (opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function (margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n      return { value: parseFloat(parts[1]), unit: parts[2] };\n    });\n\n    // Handles shorthand.\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n\n    return margins;\n  };\n\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibilty state is visible.\n   * @private\n   */\n  IntersectionObserver.prototype._monitorIntersections = function () {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true;\n\n      // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if ('MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n  IntersectionObserver.prototype._unmonitorIntersections = function () {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n        this._domObserver = null;\n      }\n    }\n  };\n\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n  IntersectionObserver.prototype._checkForIntersections = function () {\n    var rootIsInDom = this._rootIsInDom();\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function (item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n      var rootContainsTarget = this._rootContainsTarget(target);\n      var oldEntry = item.entry;\n      var intersectionRect =\n        rootIsInDom &&\n        rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = (item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      }));\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function (target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\n\n      // If the parent isn't displayed, an intersection can't happen.\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (\n          parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible'\n        ) {\n          parentRect = getBoundingClientRect(parent);\n        }\n      }\n\n      // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n        if (!intersectionRect) break;\n      }\n      parent = getParentNode(parent);\n    }\n    return intersectionRect;\n  };\n\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n  IntersectionObserver.prototype._getRootRect = function () {\n    var rootRect;\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n    return this._expandRectByRootMargin(rootRect);\n  };\n\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n  IntersectionObserver.prototype._expandRectByRootMargin = function (rect) {\n    var margins = this._rootMarginValues.map(function (margin, i) {\n      return margin.unit == 'px'\n        ? margin.value\n        : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n\n    return newRect;\n  };\n\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n  IntersectionObserver.prototype._hasCrossedThreshold = function (oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\n\n    // Ignore unchanged ratios\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i];\n\n      // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n      if (\n        threshold == oldRatio ||\n        threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio\n      ) {\n        return true;\n      }\n    }\n  };\n\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n  IntersectionObserver.prototype._rootIsInDom = function () {\n    return !this.root || containsDeep(document, this.root);\n  };\n\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n  IntersectionObserver.prototype._rootContainsTarget = function (target) {\n    return containsDeep(this.root || document, target);\n  };\n\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n  IntersectionObserver.prototype._registerInstance = function () {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n  IntersectionObserver.prototype._unregisterInstance = function () {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n\n  /**\n   * Throttles a function and delays its executiong, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function () {\n      if (!timer) {\n        timer = setTimeout(function () {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n\n    return (\n      width >= 0 &&\n      height >= 0 && {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        width: width,\n        height: height\n      }\n    );\n  }\n\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {\n      // Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect();\n\n    // Older IE\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n    return rect;\n  }\n\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  /**\n   * Checks to see if a parent element contains a child elemnt (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n  function containsDeep(parent, child) {\n    var node = child;\n    while (node) {\n      if (node == parent) return true;\n\n      node = getParentNode(node);\n    }\n    return false;\n  }\n\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n    return parent;\n  }\n\n  // Exposes the constructors globally.\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n};\n","/**\n * @typedef {object} Config\n * @property {ConfigPropertyAssets} assets\n * @property {boolean} staticContent\n * @property {boolean} metaSlide\n * @property {boolean} keepSelectedPageInFirstColumn\n * @property {boolean} preserveAspectRatio\n * @property {string|null} selectColor\n * @property {string|null} highlightColor\n * @property {ConfigPropertySelector} selector\n *\n * @typedef {object} ConfigPropertyAssets\n * @property {string} documents\n * @property {string} images\n *\n * @typedef {object} ConfigPropertySelector\n * @property {string} slidehub\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Global configuration object.\n *\n * @type {Config}\n */\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assets: {\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\n  },\n\n  // If set to true, it is assumed that the document markup is already present.\n  staticContent: false,\n\n  // Create a meta slide for each document?\n  metaSlide: true,\n\n  // Allows navigating pages so that the last page can be placed in the first\n  // column of a document container.\n  keepSelectedPageInFirstColumn: true,\n\n  // Preserve aspect ratio of document items?\n  preserveAspectRatio: false,\n\n  // Overrides the default select color.\n  // Takes string values that represent a valid CSS color value; for example:\n  // 'transparent', 'Highlight', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\n  // Setting `null` uses the default color.\n  selectColor: null,\n\n  // Overrides the default highlight color.\n  highlightColor: null,\n\n  // Selectors for UI components\n  selector: {\n    slidehub: '.slidehub-container',\n    doc: '.doc',\n    scrollbox: '.doc-scrollbox',\n    itemContainer: '.page-container',\n    item: '.page'\n  }\n};\n\nexport { config };\n","/** @type {Array<[string, number]>} */\nconst documentsData = [\n  ['acrostic-talk.pdf', 100],\n  ['argumentation-cross-domain-talk.pdf', 9],\n  ['cicling14-talk.pdf', 14],\n  ['cikm13-talk.pdf', 19],\n  ['eurovis15-plagvis-talk.pdf', 63],\n  ['ijcnlp13-talk.pdf', 13],\n  ['jufo13-talk.pdf', 22],\n  ['leipzig-colloquium15-talk.pdf', 118],\n  ['netspeak-talk.pdf', 45],\n  ['ral15-picapica-talk.pdf', 82],\n  ['republica17-clickbait-talk.pdf', 14],\n  ['ukj16-picapica-talk.pdf', 46],\n  ['webquality12-talk.pdf', 41],\n  ['potthast_2011b.pdf', 61],\n  ['potthast_2012a.pdf', 28],\n  ['potthast_2016c.pdf', 88],\n  ['stein_2005b.pdf', 24],\n  ['stein_2006j.pdf', 33],\n  ['stein_2006l.pdf', 20],\n  ['stein_2007b.pdf', 43],\n  ['stein_2007d.pdf', 21],\n  ['stein_2007m.pdf', 24],\n  ['stein_2008b.pdf', 7],\n  ['stein_2008d.pdf', 20],\n  ['stein_2008j.pdf', 64],\n  ['stein_2009e.pdf', 31],\n  ['stein_2010h.pdf', 55],\n  ['stein_2010r.pdf', 10],\n  ['stein_2010t.pdf', 27],\n  ['stein_2010u.pdf', 25],\n  ['stein_2011e.pdf', 39],\n  ['stein_2011f.pdf', 20],\n  ['stein_2011h.pdf', 36],\n  ['stein_2011j.pdf', 51],\n  ['stein_2011k.pdf', 76],\n  ['stein_2011l.pdf', 64],\n  ['stein_2011q.pdf', 30],\n  ['stein_2011t.pdf', 24],\n  ['stein_2011u.pdf', 16],\n  ['stein_2012c.pdf', 34],\n  ['stein_2012m.pdf', 13],\n  ['stein_2012o.pdf', 34],\n  ['stein_2012q.pdf', 46],\n  ['stein_2012t.pdf', 26],\n  ['stein_2012u.pdf', 24],\n  ['stein_2012w.pdf', 20],\n  ['stein_2013a.pdf', 15],\n  ['stein_2013b.pdf', 47],\n  ['stein_2013f.pdf', 52],\n  ['stein_2013g.pdf', 17],\n  ['stein_2013h.pdf', 29],\n  ['stein_2014b.pdf', 14],\n  ['stein_2014f.pdf', 24],\n  ['stein_2014j.pdf', 31],\n  ['stein_2014k.pdf', 27],\n  ['stein_2015b.pdf', 35],\n  ['stein_2015c.pdf', 47],\n  ['stein_2015n.pdf', 13],\n  ['stein_2015o.pdf', 48],\n  ['stein_2016a.pdf', 36],\n  ['stein_2016b.pdf', 2],\n  ['stein_2016c.pdf', 34],\n  ['stein_2016d.pdf', 49],\n  ['stein_2016i.pdf', 11],\n  ['stein_2016j.pdf', 26],\n  ['stein_2016k.pdf', 44],\n  ['stein_2016l.pdf', 31],\n  ['stein_2016m.pdf', 67],\n  ['stein_2016o.pdf', 63],\n  ['stein_2017a.pdf', 17],\n  ['stein_2017b.pdf', 10],\n  ['stein_2017c.pdf', 11],\n  ['unit-de-client-technologies1.pdf', 87],\n  ['unit-de-client-technologies2.pdf', 45],\n  ['unit-de-conceptual-design1.pdf', 31],\n  ['unit-de-conceptual-design2.pdf', 52],\n  // [\"unit-de-conceptual-design3.pdf\", 1],\n  ['unit-de-configuration-basics.pdf', 34],\n  ['unit-de-constraints-fd1.pdf', 43],\n  ['unit-de-constraints-fd2.pdf', 50],\n  ['unit-de-constraints-ifd.pdf', 18],\n  ['unit-de-constraints-introduction.pdf', 34],\n  ['unit-de-db-introduction.pdf', 50],\n  ['unit-de-db-organization.pdf', 9],\n  ['unit-de-design-and-models.pdf', 28],\n  ['unit-de-diagnosis-bayes.pdf', 28],\n  ['unit-de-diagnosis-cbr.pdf', 35],\n  ['unit-de-diagnosis-dempster.pdf', 34],\n  ['unit-de-doclang-css.pdf', 35],\n  ['unit-de-doclang-html.pdf', 53],\n  ['unit-de-doclang-introduction.pdf', 30],\n  ['unit-de-doclang-xml-api.pdf', 77],\n  ['unit-de-doclang-xml-basics.pdf', 74],\n  ['unit-de-doclang-xml-schema.pdf', 92],\n  ['unit-de-doclang-xml-xsl.pdf', 115],\n  ['unit-de-ensemble-classifiers.pdf', 32],\n  ['unit-de-fuzzy-basics.pdf', 44],\n  ['unit-de-fuzzy-inference.pdf', 29],\n  ['unit-de-index-terms.pdf', 20],\n  ['unit-de-ir-evaluation.pdf', 19],\n  ['unit-de-ir-introduction.pdf', 25],\n  ['unit-de-ir-organization.pdf', 6],\n  ['unit-de-kbs-applications.pdf', 31],\n  ['unit-de-kbs-introduction.pdf', 28],\n  ['unit-de-kbs-organization.pdf', 7],\n  ['unit-de-logics-algebra.pdf', 3],\n  ['unit-de-logics-organization.pdf', 5],\n  ['unit-de-model-formation.pdf', 14],\n  ['unit-de-model-system.pdf', 18],\n  ['unit-de-network-protocol1.pdf', 44],\n  ['unit-de-network-protocol2.pdf', 38],\n  ['unit-de-network-protocol3.pdf', 53],\n  ['unit-de-non-monotonicity.pdf', 21],\n  ['unit-de-planning-algorithms.pdf', 56],\n  ['unit-de-planning-basics.pdf', 40],\n  ['unit-de-predicate-basics.pdf', 36],\n  ['unit-de-predicate-complexity.pdf', 6],\n  ['unit-de-predicate-sat-syntactical.pdf', 27],\n  ['unit-de-predicate-transformation.pdf', 23],\n  ['unit-de-propositional-basics.pdf', 58],\n  ['unit-de-propositional-complexity.pdf', 18],\n  ['unit-de-propositional-sat-semantical.pdf', 22],\n  ['unit-de-propositional-sat-syntactical.pdf', 56],\n  ['unit-de-propositional-transformation.pdf', 33],\n  ['unit-de-psk.pdf', 12],\n  ['unit-de-relational-algebra.pdf', 67],\n  ['unit-de-relational-calculus.pdf', 85],\n  // [\"unit-de-relational-design0.pdf\", 1],\n  ['unit-de-relational-design1.pdf', 43],\n  ['unit-de-relational-design2.pdf', 62],\n  ['unit-de-relational-theory1.pdf', 71],\n  ['unit-de-relational-theory2.pdf', 50],\n  ['unit-de-retrieval-models.pdf', 18],\n  ['unit-de-rm-algebraic.pdf', 45],\n  ['unit-de-rm-term-based.pdf', 24],\n  ['unit-de-rule-systems-inference.pdf', 39],\n  ['unit-de-rule-systems-not.pdf', 20],\n  ['unit-de-rule-systems.pdf', 58],\n  ['unit-de-self-organizing-maps.pdf', 30],\n  ['unit-de-semantic-web-introduction.pdf', 30],\n  ['unit-de-semantic-web-ontology.pdf', 72],\n  ['unit-de-semantic-web-rdf.pdf', 79],\n  ['unit-de-semantic-web-rdfsem.pdf', 27],\n  ['unit-de-semantic-web-rdfs.pdf', 32],\n  ['unit-de-server-technologies1.pdf', 63],\n  ['unit-de-server-technologies2.pdf', 84],\n  ['unit-de-sql1.pdf', 96],\n  ['unit-de-sql2.pdf', 38],\n  ['unit-de-sql3.pdf', 16],\n  ['unit-de-stemming.pdf', 12],\n  ['unit-de-symbol.pdf', 32],\n  ['unit-de-verification1.pdf', 46],\n  ['unit-de-verification2.pdf', 132],\n  ['unit-de-verification3.pdf', 32],\n  ['unit-de-verification.pdf', 210],\n  ['unit-de-webis-architectures1.pdf', 35],\n  ['unit-de-webis-architectures2.pdf', 17],\n  ['unit-de-wt-introduction.pdf', 57],\n  ['unit-de-wt-organization.pdf', 7],\n  ['unit-de-xps.pdf', 26],\n  ['unit-en-association-analysis.pdf', 2],\n  ['unit-en-astar-formal1.pdf', 63],\n  ['unit-en-astar-formal2.pdf', 65],\n  ['unit-en-astar-relaxed1.pdf', 42],\n  ['unit-en-astar-relaxed2.pdf', 32],\n  ['unit-en-basic-search1.pdf', 68],\n  ['unit-en-basic-search2.pdf', 38],\n  ['unit-en-bayesian-learning.pdf', 23],\n  ['unit-en-cluster-analysis-basics.pdf', 21],\n  ['unit-en-cluster-analysis-constrained.pdf', 38],\n  ['unit-en-cluster-analysis-density.pdf', 59],\n  ['unit-en-cluster-analysis-evaluation.pdf', 72],\n  ['unit-en-cluster-analysis-hierarchical.pdf', 85],\n  ['unit-en-cluster-analysis-iterative.pdf', 26],\n  ['unit-en-concept-learning.pdf', 53],\n  ['unit-en-data.pdf', 27],\n  ['unit-en-decision-trees-algorithms.pdf', 26],\n  ['unit-en-decision-trees-basics.pdf', 32],\n  ['unit-en-decision-trees-impurity.pdf', 33],\n  ['unit-en-decision-trees-pruning.pdf', 20],\n  ['unit-en-diagnosis-gde.pdf', 56],\n  ['unit-en-diagnosis-tms.pdf', 38],\n  ['unit-en-dm-overview.pdf', 10],\n  ['unit-en-game-playing-basics.pdf', 41],\n  ['unit-en-informed-bf1.pdf', 102],\n  ['unit-en-informed-bf2.pdf', 117],\n  ['unit-en-informed-bf3.pdf', 21],\n  ['unit-en-ml-introduction.pdf', 33],\n  ['unit-en-ml-organization.pdf', 8],\n  ['unit-en-multilayer-perceptron.pdf', 22],\n  ['unit-en-perceptron-learning.pdf', 59],\n  ['unit-en-performance-measures.pdf', 21],\n  ['unit-en-probability-basics.pdf', 20],\n  // [\"unit-en-radial-basis-functions.pdf\", 1],\n  ['unit-en-regression.pdf', 44],\n  ['unit-en-relaxed-models.pdf', 24],\n  ['unit-en-representation1.pdf', 34],\n  ['unit-en-representation2.pdf', 52],\n  ['unit-en-rule-mining.pdf', 2],\n  ['unit-en-search-introduction.pdf', 36],\n  ['unit-en-search-organization.pdf', 4]\n];\n\nexport { documentsData };\n","/**\n * A reverse-iterable map implementation based on the built-in [`Map`][Map] object.\n *\n * It exposes its order via iterable iterators which can be used for both forwards and backwards\n * iteration. As per `Map`, the order of a `ReverseIterableMap` is the insertion order.\n *\n * [Map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n *\n * @typedef {class} ReverseIterableMapType\n * @template K, V\n * @property {Map<K, V>} _map\n * @property {ReverseIterableMapNode} _first\n * @property {ReverseIterableMapNode} _last\n *\n * @type {ReverseIterableMapType}\n */\nclass ReverseIterableMap {\n  /**\n   * An [iterable][iterable] object whose elements are key-value pairs.\n   *\n   * [iterable]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\n   *\n   * @param {Iterable?} iterable\n   * @public\n   */\n  constructor(iterable = null) {\n    this._map = new Map();\n    this._first = null;\n    this._last = null;\n\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * The [`@@toStringTag`][toStr] property is used is used when `toString()` is called on a\n   * `ReverseIterableMap` object.\n   *\n   * [toStr]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\n   *\n   * @returns {string} The string tag of the `ReverseIterableMap` class.\n   * @public\n   */\n  get [Symbol.toStringTag]() {\n    return 'ReverseIterableMap';\n  }\n\n  /**\n   * Returns the first `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get first() {\n    return this._first;\n  }\n\n  /**\n   * Sets the first `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set first(node) {\n    this._first = node;\n  }\n\n  /**\n   * Returns the last `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get last() {\n    return this._last;\n  }\n\n  /**\n   * Sets the last `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set last(node) {\n    this._last = node;\n  }\n\n  /**\n   * The `size` accessor property returns the number of elements in a `ReverseIterableMap` object.\n   * Calls [`Map.prototype.size`][size].\n   *\n   * [size]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n   *\n   * @returns {number} The size of the ReverseIterableMap.\n   * @public\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * The `clear()` method removes all elements from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.clear`][clear].\n   *\n   * [clear]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   *\n   * @public\n   */\n  clear() {\n    this._map.clear();\n    this._first = null;\n    this._last = null;\n  }\n\n  /**\n   * The `has()` method returns a boolean indicating whether an element with the specified key\n   * exists or not. Calls [`Map.prototype.has`][has].\n   *\n   * [has]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   *\n   * @param {*} key\n   * @returns {boolean} `true` if an element with the specified key exists in a\n   * `ReverseIterableMap` object; otherwise `false`.\n   * @public\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * The `get()` method returns a specified element from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.get`][get].\n   *\n   * [get]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   *\n   * @param {*} key\n   * @returns {*|undefined}\n   * @public\n   */\n  get(key) {\n    return this._map.get(key).value;\n  }\n\n  /**\n   * The `getLast()` method returns the last element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The last element or `null` if the map is empty.\n   * @public\n   */\n  getLast() {\n    if (this.last) {\n      return this.last.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `getFirst()` method returns the first element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The first element or `null` if the map is empty.\n   * @public\n   */\n  getFirst() {\n    if (this.first) {\n      return this.first.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `add()` method adds a new element to the internal `Map` object. It does not link itself\n   * with its neighboring elements which is why this method must never be called directly.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  add(key, value) {\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n    } else {\n      node = new ReverseIterableMapNode(key, value);\n\n      this._map.set(key, node);\n    }\n\n    return node;\n  }\n\n  /**\n   * The `set()` method adds a new element to a `ReverseIterableMap` object in insertion order or\n   * updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  set(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.prev = this.last;\n      this.last.next = node;\n      this.last = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `setFront()` method adds a new element to a `ReverseIterableMap` object in\n   * reverse insertion order or updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  setFirst(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first.prev = node;\n      this.first = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `delete()` method removes the specified element from a\n   * `ReverseIterableMap` object. Calls [`Map.prototype.delete`][del].\n   *\n   * [del]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   *\n   * @param {*} key The key of the element to remove from the\n   * `ReverseIterableMap` object.\n   * @returns {boolean} `true` if an element in the `ReverseIterableMap` object\n   * existed and has been removed, or `false` if the element does not exist.\n   * @public\n   */\n  delete(key) {\n    if (this.has(key)) {\n      const node = this._map.get(key);\n\n      if (this.first === this.last) {\n        this.first = null;\n        this.last = null;\n      } else if (this.first === node) {\n        node.next.prev = null;\n        this.first = node.next;\n      } else if (this.last === node) {\n        node.prev.next = null;\n        this.last = node.prev;\n      } else {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n      }\n\n      this._map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * The `forEach()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in insertion order. For reference, see\n   * [`Map.prototype.forEach`][fe].\n   *\n   * [fe]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEach(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The `forEachReverse()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in reverse insertion order.\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEachReverse(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries().reverse()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The initial value of the @@iterator property is the same function object as the initial value\n   * of the entries property.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Allows usage of the [iteration protocols][ip] for reverse iteration.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Examples:\n   *\n   * ```js\n   * const map = new ReverseIterableMap();\n   *\n   * [...map.reverse()];\n   *\n   * for (const [key, value] of map.reverse()) {\n   *   console.log(key, value);\n   * }\n   * ```\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  reverse() {\n    return this.entries().reverse();\n  }\n\n  /**\n   * The `entries()` method returns a new [Iterator][it] object that contains the `[key, value]`\n   * pairs for each element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  entries() {\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `keys()` method returns a new [Iterator][it] object that contains the keys for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  keys() {\n    const getIteratorValue = function(node) {\n      return node.key;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `values()` method returns a new [Iterator][it] object that contains the values for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  values() {\n    const getIteratorValue = function(node) {\n      return node.value;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `iteratorFor()` method returns a new [Iterator][it] object that contains the\n   * `[key, value]` pairs for each element in a `ReverseIterableMap` object in insertion order\n   *  **starting with the pair specified by the `key` parameter**.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @param {*} key The key of the element to start iterating from.\n   * @returns {IterableIterator}\n   * @public\n   */\n  iteratorFor(key) {\n    let startNode = this._map.get(key);\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue, startNode);\n  }\n\n  /**\n   * Returns an object which is both an iterable and an iterator. It fulfills the requirements of\n   * the [iteration protocols][ip] plus allowing reverse-iteration.\n   *\n   * - **Iterator requirements**: An object that implements a function `next`. This function\n   *   returns an object with two properties: `value` and `done`.\n   *\n   * - **Iterable requirements**: An object that implements a function `[Symbol.iterator]()`. This\n   *   function returns an iterator.\n   *\n   * - **Reverse-iterable requirements**: An object that implements a function `reverse()`. This\n   *   function returns an iterator with the special behavior of iterating in reverse insertion\n   *   order. This is non-standard behavior.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * @param {function} getIteratorValue\n   * @param {ReverseIterableMapNode?} startNode\n   * @returns {IterableIterator}\n   * @private\n   */\n  iterableIterator(getIteratorValue, startNode = undefined) {\n    let currentNode = startNode ? startNode : this.first;\n    // Store the this.last node as inside the reverse() method, `this` will be\n    // bound to iterableIterator, not ReverseIterableMap. That’s on purpose.\n    const last = this.last;\n    let nextProp = 'next';\n\n    return {\n      reverse() {\n        currentNode = startNode ? startNode : last;\n        nextProp = 'prev';\n        return this;\n      },\n      [Symbol.iterator]() {\n        // Return the iterable itself.\n        return this;\n      },\n      next: function() {\n        let value;\n        if (currentNode) {\n          value = getIteratorValue(currentNode);\n          currentNode = currentNode[nextProp];\n        }\n        return iteratorResult(value);\n      }\n    };\n  }\n}\n\n/**\n * The `ReverseIterableMapNode` object represents an element in a `ReverseIterableMap` object.\n * Its main purpose is storing a `[key, value]` pair. Additionally, it keeps references to the\n * `ReverseIterableMapNode` objects appearing before and after itself in a `ReverseIterableMap`\n * object.\n *\n * @typedef {class} ReverseIterableMapNodeType\n * @template K, V\n * @property {K} _key\n * @property {V} _value\n * @property {ReverseIterableMapNode} _prev\n * @property {ReverseIterableMapNode} _next\n *\n * @type {ReverseIterableMapNodeType}\n * @protected\n */\nclass ReverseIterableMapNode {\n  /**\n   * A `[key, value]` pair that is part of a `ReverseIterableMap` object.\n   *\n   * @template K, V\n   * @param {K} key\n   * @param {V} value\n   */\n  constructor(key, value) {\n    this._key = key;\n    this._value = value;\n    this._next = null;\n    this._prev = null;\n  }\n\n  /**\n   * Returns the key from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The key.\n   * @protected\n   */\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * Returns the value from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The value.\n   * @protected\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * Sets the value of a `ReverseIterableMapNode` object.\n   *\n   * @param {*} value The value.\n   * @protected\n   */\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * Returns the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * Sets the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} next The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set next(next) {\n    this._next = next;\n  }\n\n  /**\n   * Returns the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get prev() {\n    return this._prev;\n  }\n\n  /**\n   * Sets the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} prev The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set prev(prev) {\n    this._prev = prev;\n  }\n}\n\n/**\n * Returns an `IteratorResult` object as per the following rules:\n * - If `value` is not `undefined`, `done` is `false`.\n * - If `value` is `undefined`, `done` is `true`. In this case, `value` may be omitted.\n *\n * This function does not belong to `ReverseIterableMap` as it doesn’t need access to any\n * of its properties.\n *\n * @param {*|undefined} value\n * @returns {IteratorResult}\n */\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: value === undefined\n  };\n}\n\nexport { ReverseIterableMap };\n","/**\n * Clamps the given value between the min and max boundaries.\n *\n * @param {Number} value\n * @param {Number} min\n * @param {Number} max\n * @returns {Number} - `value` if `min <= value <= max`\n *                   - `min` if `value < min`\n *                   - `max` if `value > max`\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\nexport { clamp };\n","import { config } from '../config.mjs';\nimport { clamp } from '../util/clamp.mjs';\n\n/**\n * Item Navigator\n *\n * **Usage**:\n *\n * ```\n * const navigateItem = new ItemNavigator(slidehub, doc);\n * navigateItem.by(3);\n * ```\n */\nclass ItemNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  constructor(slidehub, doc) {\n    this.slidehub = slidehub;\n    this._doc = doc;\n    this._itemPos = 0;\n    this._selectedItemPos = 0;\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  left(distance) {\n    this.by(-distance);\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  right(distance) {\n    this.by(distance);\n  }\n\n  /**\n   * Main interface for item navigation. The algorithm works like this:\n   *\n   * 1. Determine the new position of the selected item.\n   *\n   *    1.1. If the new position is different than the current position, update it.\n   *\n   * 2. If the current item position is not aligned properly (i.e. is not an integer),\n   *    its position will be rounded to the next closest integer position.\n   *\n   * 3. If the `keepSelectedPageInFirstColumn` option is turned on\n   *    and all items are visible within their document, return.\n   *\n   * 4. Determine the new position of the item.\n   *\n   *    4.1. If the new position is the same as the current position, return.\n   *\n   *    4.2. Update the item position with the new value.\n   *\n   * @param {Number} vector\n   * @private\n   */\n  by(vector) {\n    const newSelectedItemPos = this.determineNewSelectedItemPos(vector);\n    if (newSelectedItemPos !== this.selectedItemPos) {\n      this.updateSelectedItemPos(newSelectedItemPos);\n    }\n\n    // If the current item position is not properly aligned …\n    if (!Number.isInteger(this.itemPos)) {\n      this.updateItemPos(Math.round(this.itemPos));\n    }\n\n    // If all items are already visible, we’re done here.\n    if (!config.keepSelectedPageInFirstColumn && this.allItemsVisible()) {\n      return;\n    }\n\n    const newItemPos = this.determineNewItemPos(vector);\n\n    // Nothing to do, current position is already the destination.\n    if (newItemPos === this.itemPos) {\n      return;\n    }\n\n    this.updateItemPos(newItemPos);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   * @public\n   */\n  get doc() {\n    return this._doc;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemPos() {\n    return this._itemPos;\n  }\n\n  /**\n   * @param {Number} itemPos\n   * @private\n   */\n  set itemPos(itemPos) {\n    this._itemPos = itemPos;\n  }\n\n  /**\n   * Updates the position of the item.\n   *\n   * @param {Number} newItemPos\n   * @private\n   */\n  updateItemPos(newItemPos) {\n    this.itemPos = newItemPos;\n    this.doc.scrollboxNode.scrollLeft = newItemPos * this.slidehub.itemWidth;\n  }\n\n  /**\n   * Determines the new position of the item based on a direction vector.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewItemPos(vector) {\n    const newItemPos = this.itemPos + vector;\n    const visibleItems = this.slidehub.visibleItems;\n\n    // For certain settings, some item positions don’t need to accessible because they are already\n    // visible\n    const invalidItemPositions = config.keepSelectedPageInFirstColumn ? 0 : visibleItems - 1;\n    const maxPos = this.doc.itemCount() - invalidItemPositions;\n\n    return clamp(newItemPos, 0, maxPos);\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get selectedItemPos() {\n    return this._selectedItemPos;\n  }\n\n  /**\n   * @param {Number} selectedItemPos\n   * @private\n   */\n  set selectedItemPos(selectedItemPos) {\n    this._selectedItemPos = selectedItemPos;\n  }\n\n  /**\n   * Updates the position of the selected item.\n   *\n   * @param {Number} newSelectedItemPos\n   * @private\n   */\n  updateSelectedItemPos(newSelectedItemPos) {\n    this.selectedItemPos = newSelectedItemPos;\n    this.doc.selectItem(this.doc.items.item(newSelectedItemPos));\n  }\n\n  /**\n   * Determines the new position of the selected item based on `distance`.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewSelectedItemPos(vector) {\n    const newSelectedItemPos = this.selectedItemPos + vector;\n    return clamp(newSelectedItemPos, 0, this.doc.itemCount());\n  }\n\n  /**\n   * Tests whether a document’s items are all visible.\n   *\n   * @returns {boolean}\n   * @private\n   */\n  allItemsVisible() {\n    return this.doc.itemCount < this.slidehub.numberOfVisibleItems;\n  }\n};\n\nexport { ItemNavigator };\n","import { config } from '../config.mjs';\nimport { ItemNavigator } from './ItemNavigator.mjs';\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Slidehub Document\n */\nclass SlidehubDocument {\n  /**\n   * @param {String} name\n   * @param {Number} imageCount\n   */\n  constructor(slidehub, name, imageCount) {\n    this.slidehub = slidehub;\n\n    this._name = name;\n    this._imageCount = imageCount;\n    this._loaded = false;\n\n    this._node = null;\n    this._scrollboxNode = null;\n    this._items = null;\n    this._selectedItemNode = null;\n    this._hoveredItemNode = null;\n    this._itemNavigator = null;\n  }\n\n  /**\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  get imageCount() {\n    return this._imageCount;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  get loaded() {\n    return this._loaded;\n  }\n\n  /**\n   * @param {Boolean} loaded\n   */\n  set loaded(loaded) {\n    this._loaded = loaded;\n  }\n\n  get node() {\n    return this._node;\n  }\n\n  set node(node) {\n    this._node = node;\n  }\n\n  get scrollboxNode() {\n    return this._scrollboxNode;\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  itemCount() {\n    return this.items.length - 1;\n  }\n\n  get selectedItemNode() {\n    return this._selectedItemNode;\n  }\n\n  set selectedItemNode(item) {\n    this._selectedItemNode = item;\n  }\n\n  /**\n   * Sets a new selected item.\n   *\n   * @param {Element} itemNode\n   */\n  selectItem(itemNode) {\n    if (this.selectedItemNode === itemNode) {\n      return;\n    }\n\n    const itemContainer = itemNode.parentElement;\n    if (this.selectedItemNode && itemContainer.contains(this.selectedItemNode)) {\n      this.selectedItemNode.classList.remove(selectClassName);\n    }\n\n    this.selectedItemNode = itemNode;\n    this.selectedItemNode.classList.add(selectClassName);\n\n    const slidehubSelectItemEvent = new CustomEvent('SlidehubSelectItem', {\n      bubbles: true,\n      detail: { itemNode }\n    });\n    this.node.dispatchEvent(slidehubSelectItemEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  get hoveredItemNode() {\n    return this._hoveredItemNode;\n  }\n\n  set hoveredItemNode(item) {\n    this._hoveredItemNode = item;\n  }\n\n  /**\n   * Sets a new hovered item.\n   *\n   * @param {Element} itemNode\n   */\n  hoverItem(itemNode) {\n    if (this.hoveredItemNode === itemNode) {\n      return;\n    }\n\n    this.unhoverItem();\n\n    this.hoveredItemNode = itemNode;\n    this.hoveredItemNode.classList.add(hoverClassName);\n\n    const slidehubHoverItemEvent = new CustomEvent('SlidehubHoverItem', {\n      bubbles: true,\n      detail: { itemNode }\n    });\n    this.node.dispatchEvent(slidehubHoverItemEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered item.\n   */\n  unhoverItem() {\n    if (this.hoveredItemNode) {\n      this.hoveredItemNode.classList.remove(hoverClassName);\n      this.hoveredItemNode = null;\n    }\n  }\n\n  get navigateItem() {\n    return this._itemNavigator;\n  }\n\n  load() {\n    const markup = this.createMarkup();\n    const docNode = document.getElementById(this.name);\n    docNode.insertAdjacentHTML('beforeend', markup);\n\n    this.setNode(docNode);\n\n    return docNode;\n  }\n\n  /**\n   * Creates the complete markup for a document under the following assumptions:\n   * - A file named `this.name` exists on the document assets path\n   * - The document’s item images are on the image assets path\n   *\n   * @returns {String}\n   */\n  createMarkup() {\n    const scrollboxClassName = config.selector.scrollbox.slice(1);\n    const itemContainerClassName = config.selector.itemContainer.slice(1);\n    const itemClassName = config.selector.item.slice(1);\n\n    let items = '';\n    for (var i = 0; i < this.imageCount; i++) {\n      const imageSource = `${config.assets.images}/${this.name}-${i}.png`;\n      items += `<div class=\"${itemClassName}\" data-page=\"${i + 1}\">\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\n      </div>`;\n    }\n\n    const documentSource = `${config.assets.documents}/${this.name}`;\n\n    const metaSlide = `<div class=\"${itemClassName} ${itemClassName}--text\" data-page=\"0\">\n      <div class=\"doc-meta\">\n        <h2 class=\"doc-meta__title\">\n          <a href=\"${documentSource}\">${this.name}</a>\n        </h2>\n        by author, ${this.imageCount} pages, 2018\n      </div>\n    </div>`;\n\n    const dummyPage = `<div\n      class=\"${itemClassName} dummy-page\"\n      aria-hidden=\"true\"\n      style=\"visibility: hidden;\"\n    ></div>`;\n\n    return `<div class=\"${scrollboxClassName}\">\n      <div class=\"${itemContainerClassName}\">\n        ${config.metaSlide ? metaSlide : ''}\n        ${items}\n        ${dummyPage}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * @param {HTMLElement} node\n   */\n  setNode(node) {\n    this.node = node;\n    this._scrollboxNode = node.querySelector(config.selector.scrollbox);\n    this._items = node.querySelectorAll('[data-page]');\n    this._itemNavigator = new ItemNavigator(this.slidehub, this);\n\n    if (!this.slidehub.selectedDocument) {\n      this.slidehub.selectDocument(this);\n    }\n    this.selectItem(node.querySelector(config.selector.item));\n\n    this.loaded = true;\n  }\n};\n\nexport { SlidehubDocument };\n","/**\n * Parses the document data.\n */\n\nimport { config } from '../config.mjs';\nimport { documentsData } from '../documents-data.mjs';\nimport { ReverseIterableMap } from '../lib/reverse-iterable-map.mjs';\nimport { SlidehubDocument } from './SlidehubDocument.mjs';\n\n/**\n * Parses the initial document data into a more managable data structure.\n * The resulting structure keeps track of a documents’ loaded state.\n *\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsData(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  documentsData.forEach(([name, imageCount]) => {\n    const doc = new SlidehubDocument(slidehub, name, imageCount);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n\n/**\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsMarkup(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  const documentNodes = slidehub.node.querySelectorAll(config.selector.doc);\n  documentNodes.forEach(docNode => {\n    const imageCount = docNode.querySelectorAll('img').length - 1;\n    const doc = new SlidehubDocument(slidehub, docNode.id, imageCount);\n    doc.setNode(docNode);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n\nexport { parseDocumentsData, parseDocumentsMarkup };\n","import { config } from '../config.mjs';\n\n/**\n * Document Loader.\n *\n * Loads documents dynamically when needed.\n */\nclass SlidehubDocumentLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.batchSize = 5;\n    this.prevIterator = null;\n    this.nextIterator = null;\n    this.observer = new IntersectionObserver(this.documentObservationHandler.bind(this));\n  }\n\n  start(targetDoc) {\n    this.loadTargetDocument(targetDoc);\n\n    // Load one batch in both directions\n    this.loadBatch(this.nextIterator, 'beforeend', this.batchSize);\n    this.loadBatch(this.prevIterator, 'afterbegin', this.batchSize);\n  }\n\n  /**\n   * Prepares the DOM with empty frames for all documents.\n   *\n   * @public\n   */\n  insertDocumentFrames() {\n    let documentFramesMarkup = '';\n\n    for (const doc of this.slidehub.documents.values()) {\n      const documentSource = `${config.assets.documents}/${doc.name}`;\n      documentFramesMarkup += `<div\n        class=\"${config.selector.doc.slice(1)}\"\n        id=\"${doc.name}\"\n        data-doc-source=\"${documentSource}\"\n        style=\"--pages: ${doc.imageCount + (config.metaSlide ? 1 : 0)}\"\n      ></div>`;\n    }\n\n    this.slidehub.node.insertAdjacentHTML('beforeend', documentFramesMarkup);\n  }\n\n  /**\n   * Starts off the document loading process. Determines which document should be\n   * loaded and sets up two iterators. They will be used to load new documents\n   * when needed.\n   *\n   * @returns {SlidehubDocument}\n   */\n  loadTargetDocument(targetDoc) {\n    // Obtain two iterators as pointers for which documents need to be\n    // loaded next.\n    this.prevIterator = this.slidehub.documents.iteratorFor(targetDoc.name).reverse();\n    this.nextIterator = this.slidehub.documents.iteratorFor(targetDoc.name);\n\n    // The target document will be loaded next by retrieving the iterator result\n    // from nextIterator. Since prevIterator points to the same document, it\n    // needs to be advanced manually, so it can’t be used to load that document\n    // again.\n    this.prevIterator.next();\n\n    return this.loadDocument(this.nextIterator.next(), 'beforeend');\n  }\n\n  /**\n   * A wrapper for calling loadDocument multiple times.\n   *\n   * @param {IterableIterator} documentIterable\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @param {number} batchSize\n   */\n  loadBatch(documentIterable, insertPosition, batchSize) {\n    while (batchSize--) {\n      this.loadDocument(documentIterable.next(), insertPosition);\n    }\n  }\n\n  /**\n   * Loads a new document by creating and injecting the markup into the DOM.\n   * Once this is done, the document is marked as loaded.\n   *\n   * @param {IteratorResult} iteratorResult\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @returns {SlidehubDocument}\n   */\n  loadDocument(iteratorResult, insertPosition) {\n    if (iteratorResult.done) {\n      return;\n    }\n\n    const doc = iteratorResult.value[1];\n    if (doc.loaded) {\n      console.warn(doc.name, 'was already loaded. Skipping.');\n      return;\n    }\n\n    doc.insertPosition = insertPosition;\n    if (doc.insertPosition === 'afterbegin') {\n      doc.iterator = this.prevIterator;\n    } else {\n      doc.iterator = this.nextIterator;\n    }\n\n    console.info(`Loading ${doc.name}.`);\n\n    doc.load();\n\n    this.observer.observe(doc.node);\n\n    return doc;\n  }\n\n  /**\n   * Handles lazy-loading documents.\n   *\n   * @param {Array<IntersectionObserverEntry>} entries\n   * @param {IntersectionObserver} observer\n   */\n  documentObservationHandler(entries, observer) {\n    for (const entry of entries) {\n      if (entry.isIntersecting) {\n        const doc = this.slidehub.documents.get(entry.target.id);\n        this.loadDocument(doc.iterator.next(), doc.insertPosition);\n\n        observer.unobserve(entry.target);\n      }\n    }\n  }\n};\n\nexport { SlidehubDocumentLoader };\n","import { config } from '../config.mjs';\n\n/**\n * Loads document images when needed (i.e. lazy-loading).\n */\nclass SlidehubImageLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.imageObserver = null;\n\n    if ('IntersectionObserver' in window) {\n      const imageObserverOptions = {\n        root: slidehub.node,\n        rootMargin: '500px 1000px'\n      };\n\n      this.imageObserver = new IntersectionObserver(imageObservationHandler, imageObserverOptions);\n    }\n  }\n\n  start() {\n    if (this.imageObserver) {\n      this.observeExistingDocuments();\n    } else {\n      const images = Array.from(this.slidehub.node.querySelectorAll('img[data-src]'));\n      images.forEach(image => loadImage(image));\n    }\n  }\n\n  observeExistingDocuments() {\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => this.startImageObserver(docNode));\n  }\n\n  /**\n   * Starts the image observer on all lazy-loading images.\n   *\n   * @param {HTMLElement} docNode\n   */\n  startImageObserver(docNode) {\n    const images = Array.from(docNode.querySelectorAll('img[data-src]'));\n    images.forEach(image => this.imageObserver.observe(image));\n  }\n};\n\n/**\n * Handles lazy-loading document images.\n *\n * @param {*} entries\n * @param {IntersectionObserver} observer\n */\nfunction imageObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      loadImage(entry.target);\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\n/**\n * Replaces the data-src attribute with the src attribute, causing the browser to load the image.\n *\n * @param {HTMLImageElement} image\n */\nfunction loadImage(image) {\n  if (!image.dataset.src) {\n    console.error('Couldn’t load image due to missing data-src attribute.', image);\n    return;\n  }\n\n  image.setAttribute('src', image.dataset.src);\n  image.removeAttribute('data-src');\n  image.addEventListener('load', () => handleItemImageLoaded(image));\n}\n\n/**\n * Plain wrapper for triggering certain actions once an image has loaded.\n *\n * @param {HTMLImageElement} image\n */\nfunction handleItemImageLoaded(image) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(image);\n  }\n}\n\n/**\n * Calculates the aspect ratio of an image and stores it in the DOM as a\n * custom CSS property.\n *\n * @param {HTMLImageElement} image\n */\nfunction setItemAspectRatio(image) {\n  const docNode = image.closest(config.selector.doc);\n\n  if (docNode && !docNode.style.cssText.includes('--page-aspect-ratio')) {\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\n    docNode.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\n  }\n}\n\nexport { SlidehubImageLoader };\n","/**\n * Feature detection for passive event listeners as per:\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\n/**\n * @typedef {Object} AddEventListenerOptionsObject\n * @property {Boolean|AddEventListenerOptions} active\n * @property {Boolean|AddEventListenerOptions} passive\n */\n\n/**\n * Stores the third argument for `addEventListener` for both cases\n * @type {AddEventListenerOptionsObject}\n */\nconst listener = {\n  active: supportsPassive ? { passive: false } : false,\n  passive: supportsPassive ? { passive: true } : false\n};\n\nexport { listener };\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @see https://davidwalsh.name/javascript-debounce-function\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean?} immediate\n * @returns {Function}\n */\nfunction debounce(func, wait, immediate = false) {\n  let timeout;\n\n  return function () {\n    const context = this, args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\nexport { debounce };\n","import { config } from '../config.mjs';\nimport { listener } from '../util/passive-event-listener.mjs';\nimport { debounce } from '../util/debounce.mjs';\n\nconst scrolling = {\n  vertical: {\n    delta: 'deltaY'\n  },\n  horizontal: {\n    delta: 'deltaX'\n  }\n};\n\n/**\n * Mouse Interaction.\n */\nclass SlidehubMouseInteraction {\n  constructor(slidehub) {\n    this.mouseX = window.innerWidth / 2;\n    this.mouseY = window.innerHeight / 2;\n    this.slidehub = slidehub;\n  }\n\n  start() {\n    this.initStoreMousePosition();\n    this.initHoverDocumentOnScroll();\n    this.initExistingDocuments();\n    this.initModifiers();\n  }\n\n  /**\n   * Whenever the mouse moves, store its position.\n   */\n  initStoreMousePosition() {\n    document.addEventListener('mousemove', this.storeMousePosition.bind(this), listener.passive);\n  }\n\n  /**\n   * The firing rate of the listener needs to be slowed down because the\n   * `scroll` event is rapidly firing. Not doing so will decrease the\n   * performance significantly.\n   *\n   * It’s sufficient to debounce the listener. This means the listener will\n   * be triggered **once** after the event has stopped firing.\n   */\n  initHoverDocumentOnScroll() {\n    document.addEventListener(\n      'scroll',\n      debounce(this.handleScrollDocumentHover.bind(this), 25),\n      listener.passive\n    );\n  }\n\n  /**\n   * Initialize mouse and scroll interactions for existing documents.\n   */\n  initExistingDocuments() {\n    const documents = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documents.forEach(docNode => {\n      this.initMouseInteraction(docNode);\n      const scrollbox = docNode.querySelector(config.selector.scrollbox);\n      if (scrollbox) {\n        this.initScrollInteraction(scrollbox);\n      }\n    });\n  }\n\n  /**\n   * Wrapper for initializing all event listeners related to mouse interaction.\n   *\n   * @param {HTMLElement} docNode\n   */\n  initMouseInteraction(docNode) {\n    docNode.addEventListener('wheel', this.handleWheelInteraction.bind(this), listener.active);\n    docNode.addEventListener('click', this.handleClickSelect.bind(this), listener.passive);\n    docNode.addEventListener('mousemove', this.handleMoveHover.bind(this), listener.passive);\n  }\n\n  /**\n   * Wrapper for initializing all event listeners related to scroll interaction.\n   *\n   * @param {HTMLElement} scrollboxNode\n   */\n  initScrollInteraction(scrollboxNode) {\n    scrollboxNode.addEventListener(\n      'scroll',\n      debounce(this.handleScrollDocumentHover.bind(this), 25),\n      listener.passive\n    );\n  }\n\n  /**\n   * Stores the position of the mouse cursor.\n   *\n   * @param {MouseEvent} event\n   */\n  storeMousePosition(event) {\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n  }\n\n  /**\n   * Finds and hovers the item/document under the current mouse cursor position.\n   */\n  handleScrollDocumentHover() {\n    const targetElement = document.elementFromPoint(this.mouseX, this.mouseY);\n    const docElement = targetElement.closest(config.selector.doc);\n\n    if (!docElement) {\n      return;\n    }\n\n    const doc = this.slidehub.documents.get(docElement.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    const itemElement = targetElement.closest(config.selector.item);\n    if (itemElement) {\n      doc.hoverItem(itemElement);\n    }\n  }\n\n  /**\n   * Handles wheel navigation.\n   *\n   * @param {WheelEvent} event\n   */\n  handleWheelInteraction(event) {\n    // Don’t handle scrolling on elements that are not inside a document\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    const ratio = Math.abs(event.deltaX / event.deltaY);\n    const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\n\n    // When scrolling vertically, only trigger navigation when modifier is pressed\n    if (scrollingDirection === scrolling.vertical && event.shiftKey) {\n      // Prevent vertical scrolling\n      event.preventDefault();\n\n      const delta = event[scrollingDirection.delta];\n\n      doc.navigateItem.by(Math.sign(delta));\n    }\n  }\n\n  /**\n   * Selects documents/items on click.\n   *\n   * @param {MouseEvent} event\n   */\n  handleClickSelect(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.selectDocument(doc);\n\n    if (config.keepSelectedPageInFirstColumn) {\n      return;\n    }\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.selectItem(item);\n    }\n  }\n\n  /**\n   * Highlights documents/items on hover.\n   *\n   * @param {MouseEvent} event\n   */\n  handleMoveHover(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.hoverItem(item);\n    }\n  }\n\n  /**\n   * Wrapper for enabling all event listeners related to modifier handling.\n   */\n  initModifiers() {\n    document.addEventListener('keydown', this.onModifierDown.bind(this), listener.passive);\n    document.addEventListener('keyup', this.onModifierUp.bind(this), listener.passive);\n    window.addEventListener('blur', this.onModifierBlur.bind(this), listener.passive);\n  }\n\n  /**\n   * Displays a special cursor when the modifier is pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierDown(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'ew-resize');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the modifier is no longer pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierUp(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the user somehow leaves the page.\n   */\n  onModifierBlur() {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n};\n\nexport { SlidehubMouseInteraction };\n","import { listener } from '../util/passive-event-listener.mjs';\n\nconst controlKeyNames = {\n  33: 'pageUp',\n  34: 'pageDown',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n};\n\n/**\n * Keyboard Interaction.\n */\nclass SlidehubKeyboardInteraction {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n\n    this.controlKey = {\n      homeKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.left(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      endKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.right(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      arrowLeft: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.left(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowRight: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.right(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowUp: {\n        trigger: event => {\n          this.slidehub.navigateDocument.up(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowDown: {\n        trigger: event => {\n          this.slidehub.navigateDocument.down(event.shiftKey ? 3 : 1);\n        }\n      },\n      pageUp: {\n        trigger: () => {\n          this.slidehub.navigateDocument.up(3);\n        }\n      },\n      pageDown: {\n        trigger: () => {\n          this.slidehub.navigateDocument.down(3);\n        }\n      }\n    };\n  }\n\n  start() {\n    document.addEventListener('keydown', this.handleKeyboardInput.bind(this), listener.active);\n  }\n\n  /**\n   * Handles keyboard interactions with documents and items.\n   *\n   * @param {KeyboardEvent} event\n   */\n  handleKeyboardInput(event) {\n    if (event.keyCode in controlKeyNames) {\n      event.preventDefault();\n      const keyName = controlKeyNames[event.keyCode];\n      this.controlKey[keyName].trigger(event);\n    }\n  }\n};\n\nexport { SlidehubKeyboardInteraction };\n","/**\n * Document Navigator.\n *\n * **Usage**:\n *\n * ```\n * const navigateDocument = new DocumentNavigator(slidehub);\n * navigateDocument.up(3);\n * navigateDocument.down(1);\n * ```\n */\nclass DocumentNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @public\n   */\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.iterator = null;\n  }\n\n  /**\n   * Navigate document up (in reverse document loading order, if that makes sense).\n   *\n   * @param {Number} distance\n   * @public\n   */\n  up(distance) {\n    const selectedDocumentName = this.slidehub.selectedDocument.name;\n    this.iterator = this.slidehub.documents.iteratorFor(selectedDocumentName).reverse();\n    this.by(distance);\n  }\n\n  /**\n   * Navigate document down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  down(distance) {\n    const selectedDocumentName = this.slidehub.selectedDocument.name;\n    this.iterator = this.slidehub.documents.iteratorFor(selectedDocumentName);\n    this.by(distance);\n  }\n\n  /**\n   * Navigates through documents by a certain distance. With `distance = 3`,\n   * two documents would be skipped, arriving at the third document.\n   *\n   * @param {number} distance\n   * @private\n   */\n  by(distance) {\n    this.iterator.next();\n\n    let iteratorResult;\n    for (let i = 0; i < distance; i++) {\n      iteratorResult = this.iterator.next();\n      if (iteratorResult.done) {\n        return;\n      }\n    }\n\n    const targetDoc = iteratorResult.value[1];\n    this.slidehub.selectDocument(targetDoc);\n    this.scrollDocumentIntoView(targetDoc);\n  }\n\n  /**\n   * @param {SlidehubDocument} doc\n   */\n  scrollDocumentIntoView(doc) {\n    const offset = this.getVerticalOffsets(doc.node);\n    const extraPart = doc.node.clientHeight / 2;\n    if (offset.top < 0) {\n      window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\n    } else if (offset.bottom < 0) {\n      window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\n    }\n  }\n\n  /**\n   * Returns an object containing vertical offsets for an element with the\n   * viewport.\n   *\n   * @param {HTMLElement} element\n   * @returns {object}\n   */\n  getVerticalOffsets(element) {\n    const docEl = document.documentElement;\n    return {\n      top: element.offsetTop - window.scrollY,\n      bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\n    };\n  }\n};\n\nexport { DocumentNavigator };\n","import { listener } from '../util/passive-event-listener.mjs';\n\n/**\n * Modal window.\n *\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\n * https://github.com/gdkraus/accessible-modal-dialog\n */\n\nlet lastFocusedElement;\n\nfunction enableModals() {\n  const buttonArea = document.querySelector('[data-slidehub-modal-buttons]');\n\n  if (!buttonArea) {\n    return;\n  }\n\n  const controlsOpenButton = createOpenButton('Help');\n  buttonArea.insertAdjacentHTML('beforeend', controlsOpenButton);\n\n  const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\n  modalOpenButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const targetModal = event.currentTarget.dataset.targetModal;\n      const modal = document.querySelector(`[data-modal-${targetModal}]`);\n      openModal(modal);\n    });\n  });\n\n  const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\n  modalCloseButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const modal = event.currentTarget.closest('.modal');\n      closeModal(modal);\n    });\n  });\n}\n\nfunction createOpenButton(title) {\n  return `<button class=\"button button--subtle\" data-target-modal=\"${title.toLowerCase()}\">\n    ${title}\n  </button>`;\n}\n\n/**\n * Opens the modal.\n *\n * @param {Element} modal\n */\nfunction openModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  // Store last focused element\n  lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  moveFocusToModal(modal);\n\n  // Setup event listeners\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\n  modal.addEventListener('keydown', trapTabKey, listener.active);\n  modal.addEventListener('click', closeOnBackground, listener.passive);\n}\n\n/**\n * Move focus to the first focusable element inside the modal.\n *\n * @param {Element} modal\n */\nfunction moveFocusToModal(modal) {\n  const focusable = getFocusableElements(modal);\n  focusable[0].focus();\n}\n\n/**\n * Closes the modal.\n *\n * @param {Element} modal\n */\nfunction closeModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  // Clean up event listeners\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\n\n  // Restore previously focused element\n  lastFocusedElement.focus();\n}\n\n/**\n * Closes the modal when clicking on the background.\n *\n * @param {MouseEvent} event\n */\nfunction closeOnBackground(event) {\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\n  if (modal === event.target) {\n    closeModal(modal);\n  }\n}\n\n/**\n * Closes the modal when pressing the <kbd>Esc</kbd>.\n *\n * @param {KeyboardEvent} event\n */\nfunction closeOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\n  }\n}\n\n/**\n * Make it impossible to focus an element outside the modal\n *\n * @param {KeyboardEvent} event\n */\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabable[0]) {\n      tabable[tabable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabable[tabable.length - 1]) {\n      tabable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * Selects all focusable elements currently present in the DOM/\n *\n * @param {Element|document} ancestor\n * @returns {Array}\n */\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nconst focusableElementsSelector =\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\n\nexport { enableModals };\n","/**\n * Abstract base class for Slidehub plugins.\n *\n * Ensures that classes extending `SlidehubPlugin` implement an `enable()` and\n * `disable()` method.\n *\n * **Usage**:\n *\n * ```\n * import { SlidehubPlugin } from '../core/SlidehubPlugin';\n *\n * class MyPlugin extends SlidehubPlugin {\n *    constructor(slidehub) {\n *      super(\n *        slidehub,\n *        'MyPlugin',\n *        'Description of your plugin'\n *      );\n *    }\n *\n *    enable() {\n *      // Implement an enable routine\n *    }\n *\n *    disable() {\n *      // Implement an disable routine\n *    }\n * };\n * ```\n */\nclass SlidehubPlugin {\n  constructor(slidehub, name, description) {\n    this.slidehub = slidehub;\n    this.name = name;\n    this.description = description;\n    this.enabled = false;\n    this.toggleButton = null;\n\n    if (new.target === SlidehubPlugin) {\n      throw new TypeError('Cannot construct SlidehubPlugin instances directly');\n    }\n\n    if (this.enable === SlidehubPlugin.prototype.enable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own enable method.');\n    }\n\n    if (this.disable === SlidehubPlugin.prototype.disable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own disable method.');\n    }\n  }\n\n  enable() {\n    this.enabled = true;\n\n    if (!this.toggleButton) {\n      this.toggleButton = this.createToggleButton();\n      if (this.toggleButton) {\n        this.toggleButton.addEventListener('click', this.handleToggleButton.bind(this));\n      }\n    }\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  /**\n   * Creates a feature toggle button in the user interface.\n   *\n   * @returns {Element|null}\n   */\n  createToggleButton() {\n    const fieldset = document.querySelector('.features-fieldset');\n\n    if (!fieldset) {\n      return null;\n    }\n\n    const toggleButtonMarkup = `\n      <div class=\"form-group form-group--switch\">\n        <span class=\"form-label\" id=\"${this.name}-label\">${this.description}</span>\n        <button\n          role=\"switch\"\n          aria-checked=\"false\"\n          aria-labelledby=\"${this.name}-label\"\n          data-feature=\"${this.name}\"\n        >\n          <span class=\"state state--true\" aria-label=\"on\"></span>\n          <span class=\"state state--false\" aria-label=\"off\"></span>\n        </button>\n      </div>\n    `;\n\n    fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\n\n    const button = fieldset.querySelector(`[data-feature=\"${this.name}\"]`);\n    button.setAttribute('aria-checked', this.enabled.toString());\n\n    return button;\n  }\n\n  /**\n   * Toggles a toggle button and triggers its associated action.\n   *\n   * @param {MouseEvent} event\n   */\n  handleToggleButton(event) {\n    const button = event.currentTarget;\n\n    if (button instanceof HTMLElement) {\n      const isPressed = button.getAttribute('aria-checked') === 'true';\n      button.setAttribute('aria-checked', String(!isPressed));\n\n      this.triggerButtonAction(button, 'aria-checked');\n    }\n  }\n\n  /**\n   * Triggers the associated action of a toggle button.\n   *\n   * @param {HTMLElement} button\n   * @param {'aria-checked'|'aria-pressed'} stateAttr\n   */\n  triggerButtonAction(button, stateAttr) {\n    switch (true) {\n      case button.hasAttribute('data-feature'):\n        if (button.getAttribute(stateAttr) === 'true') {\n          this.enable();\n        } else {\n          this.disable();\n        }\n        break;\n\n      default:\n        console.warn('No action is associated with the control', button);\n        break;\n    }\n  }\n};\n\n/* class MyPlugin extends SlidehubPlugin {\n  constructor() {\n    super();\n  }\n\n  enable() {\n    console.log('MyPlugin.enable');\n    super.enable();\n  }\n\n  disable() {\n    console.log('MyPlugin.disable');\n    super.disable();\n  }\n};\n\nconst x = new MyPlugin();\nx.enable(); */\n\nexport { SlidehubPlugin };\n","import { SlidehubPlugin } from '../core/SlidehubPlugin.mjs';\nimport { listener } from '../util/passive-event-listener.mjs';\nimport { config } from '../config.mjs';\n\n/**\n * Item Linking.\n *\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\n * or double-clicking with a pointer device.\n */\nclass DocumentSourceLinker extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Links documents to their source document';\n    super(slidehub, 'DocumentSourceLinker', description);\n\n    this.boundEnterHandler = this.enterHandler.bind(this);\n    this.boundDoubleClickHandler = this.doubleClickHandler.bind(this);\n  }\n\n  enable() {\n    document.addEventListener('keydown', this.boundEnterHandler, listener.passive);\n    document.addEventListener('dblclick', this.boundDoubleClickHandler, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    document.removeEventListener('keydown', this.boundEnterHandler);\n    document.removeEventListener('dblclick', this.boundDoubleClickHandler);\n    super.disable();\n  }\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  enterHandler(event) {\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    const openInNewTab = event.ctrlKey;\n    const doc = this.slidehub.selectedDocument;\n    DocumentSourceLinker.handleOpenIntent(doc.node, doc.selectedItemNode, openInNewTab);\n  }\n\n  /**\n   * @param {MouseEvent} event\n   */\n  doubleClickHandler(event) {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const itemNode = event.target.closest(config.selector.item);\n    const docNode = itemNode.closest(config.selector.doc);\n    if (docNode) {\n      const openInNewTab = true;\n      DocumentSourceLinker.handleOpenIntent(docNode, itemNode, openInNewTab);\n    }\n  }\n\n  /**\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static handleOpenIntent(docNode, item, openInNewTab) {\n    // Focusable elements have a default behavior (e.g. activating a link)\n    // That behavior shall not be altered/extended.\n    if (isInteractive(item)) {\n      return;\n    }\n\n    DocumentSourceLinker.openDocumentSource(docNode, item, openInNewTab);\n  }\n\n  /**\n   * Opens the document source for the current selected document in the browser.\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static openDocumentSource(docNode, item, openInNewTab) {\n    const itemIndex = item.dataset.page;\n    const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n    const itemSource = docNode.dataset.docSource + fragment;\n\n    if (openInNewTab) {\n      window.open(itemSource);\n    } else {\n      window.location.href = itemSource;\n    }\n  }\n};\n\n/**\n * Returns true if element is interactive, false otherwise.\n *\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (!element.hasAttribute('href')) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.hasAttribute('contenteditable')) {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n\nexport { DocumentSourceLinker };\n","import { SlidehubPlugin } from '../core/SlidehubPlugin.mjs';\nimport { listener } from '../util/passive-event-listener.mjs';\n\nclass PageWidgetPlugin extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Displays the page numbers';\n    super(slidehub, 'PageWidgetPlugin', description);\n\n    this.boundExposeItemCount = this.exposeItemCount.bind(this);\n    this.boundExposeCurrentItem = this.exposeCurrentItem.bind(this);\n    this.widgetHookNode = document.querySelector('[data-slidehub-page-widget]');\n    this.currentPageNode = null;\n    this.totalPagesNode = null;\n  }\n\n  enable() {\n    this.insertWidgetMarkup();\n    this.slidehub.node.addEventListener('SlidehubHoverDocument', this.boundExposeItemCount, listener.passive);\n    this.slidehub.node.addEventListener('SlidehubHoverItem', this.boundExposeCurrentItem, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    this.removeWidgetMarkup();\n    this.slidehub.node.removeEventListener('SlidehubHoverDocument', this.boundExposeItemCount);\n    this.slidehub.node.removeEventListener('SlidehubHoverItem', this.boundExposeCurrentItem);\n    super.disable();\n  }\n\n  insertWidgetMarkup() {\n    const widgetMarkup = `<div class=\"sh-page-widget\" aria-hidden=\"hidden\">\n      Page\n      <span class=\"sh-page-widget__current-page\" data-slidehub-current-page>0</span><span data-slidehub-total-pages>0</span>\n    </div>`;\n\n    this.widgetHookNode.insertAdjacentHTML('beforeend', widgetMarkup);\n\n    const widgetNode = this.widgetHookNode.firstElementChild;\n    this.currentPageNode = widgetNode.firstElementChild;\n    this.totalPagesNode = widgetNode.lastElementChild;\n\n    this.totalPagesNode.textContent = this.slidehub.selectedDocument.itemCount();\n    this.currentPageNode.textContent = this.slidehub.selectedDocument.selectedItemNode.dataset.page;\n  }\n\n  removeWidgetMarkup() {\n    while (this.widgetHookNode.lastChild) {\n      this.widgetHookNode.removeChild(this.widgetHookNode.lastChild);\n    }\n\n    this.totalPagesNode = null;\n    this.currentPageNode = null;\n  }\n\n  exposeItemCount(event) {\n    this.totalPagesNode.textContent = event.detail.doc.itemCount();\n  }\n\n  exposeCurrentItem(event) {\n    this.currentPageNode.textContent = event.detail.itemNode.dataset.page;\n  }\n}\n\nexport { PageWidgetPlugin };\n","/**\n * This is a hack for importing multiple modules into the same namespace.\n *\n * By exporting all exports from specific modules as defaults in a proxy\n * namespace module, one is able to import the into the same namespace:\n *\n * ```\n * import * as plugin from '../plugins/namespace';\n * ```\n *\n * which gives access to\n *\n * ```\n * plugin.DocumentSourceLinker\n * plugin.MyPlugin\n * ```\n */\n\nexport * from './DocumentSourceLinker';\nexport * from './PageWidgetPlugin';\n","/**\n * Calculates the outer width of an element. In the context of this\n * application, the outer width of an element is its `offsetWidth` plus\n * left and right margins.\n *\n * @param {HTMLElement} element\n * @returns {Number} the outer width of `element`.\n */\nfunction getOuterWidth(element) {\n  const style = window.getComputedStyle(element);\n  const marginLeft = parseInt(style.marginLeft);\n  const marginRight = parseInt(style.marginRight);\n\n  return marginLeft + element.offsetWidth + marginRight;\n}\n\nexport { getOuterWidth };\n","/**\n * Returns the fragment identifier of a URL if it is present.\n *\n * @param {String} url\n * @returns {String|null} the fragment identifier of a URL if it is present,\n *                        `null` otherwise.\n */\nfunction getFragmentIdentifier(url) {\n  const hashPosition = url.indexOf('#');\n  if (hashPosition > 0) {\n    return url.substring(hashPosition + 1);\n  }\n\n  return null;\n}\n\nexport { getFragmentIdentifier };\n","import { config } from '../config.mjs';\nimport { parseDocumentsData, parseDocumentsMarkup } from './SlidehubParser.mjs';\nimport { SlidehubDocumentLoader } from './SlidehubDocumentLoader.mjs';\nimport { SlidehubImageLoader } from './SlidehubImageLoader.mjs';\nimport { SlidehubMouseInteraction } from './SlidehubMouseInteraction.mjs';\nimport { SlidehubKeyboardInteraction } from './SlidehubKeyboardInteraction.mjs';\nimport { DocumentNavigator } from './DocumentNavigator.mjs';\nimport { enableModals } from './Modal.mjs';\n\nimport * as plugin from '../plugins/namespace.mjs';\n\nimport { debounce } from '../util/debounce.mjs';\nimport { getOuterWidth } from '../util/getOuterWidth.mjs';\nimport { getFragmentIdentifier } from '../util/getFragmentIdentifier.mjs';\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Main Slidehub prototype.\n */\nclass Slidehub {\n  /**\n   * @public\n   */\n  constructor() {\n    this._node = null;\n    this._documents = null;\n    this._selectedDocument = null;\n    this._hoveredDocument = null;\n    this._documentNavigator = null;\n\n    this._itemWidth = null;\n    this._visibleItems = null;\n    this._scrollboxWidth = null;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this._node = this.getNode();\n      this._documents = this.getDocuments();\n\n      let documentLoader;\n\n      if (!config.staticContent) {\n        documentLoader = new SlidehubDocumentLoader(this);\n        documentLoader.insertDocumentFrames();\n      }\n\n      const targetDoc = this.determineTargetDocument();\n\n      if (!config.staticContent) {\n        documentLoader.start(targetDoc);\n      }\n\n      this.selectDocument(targetDoc);\n      this.jumpToTargetDocument(targetDoc);\n\n      this.start();\n      this.loadPlugins();\n    });\n  }\n\n  /**\n   * Sets up the main Slidehub HTML element.\n   *\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @private\n   */\n  getNode() {\n    const existingNode = document.querySelector(config.selector.slidehub);\n    const slidehubNode = existingNode ? existingNode : this.createNode();\n\n    // Expose select/highlight color overrides to the DOM.\n    // This allows CSS to use inside of a rule declaration.\n    if (config.selectColor && config.selectColor !== '') {\n      slidehubNode.style.setProperty('--c-selected', config.selectColor);\n    }\n\n    if (config.highlightColor && config.highlightColor !== '') {\n      slidehubNode.style.setProperty('--c-highlighted', config.highlightColor);\n    }\n\n    return slidehubNode;\n  }\n\n  /**\n   * Hooks the Slidehub container element into the DOM.\n   *\n   * Requires an element with a custom attribute `data-slidehub` to be present\n   * in the DOM. A new <div> element will be created inside of it. No existing\n   * markup will be changed or removed.\n   *\n   * @returns {HTMLDivElement} the empty Slidehub DOM node.\n   * @private\n   */\n  createNode() {\n    const slidehubNode = document.createElement('div');\n    slidehubNode.classList.add(config.selector.slidehub.slice(1));\n\n    document.querySelector('[data-slidehub]').appendChild(slidehubNode);\n\n    return slidehubNode;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the internal documents data structure.\n   */\n  getDocuments() {\n    return config.staticContent ? parseDocumentsMarkup(this) : parseDocumentsData(this);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   */\n  determineTargetDocument() {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n\n    let targetDoc;\n\n    if (this.documents.has(fragmentIdentifier)) {\n      targetDoc = this.documents.get(fragmentIdentifier);\n    } else if (document.documentElement.scrollTop === 0) {\n      // If the viewport was not scrolled already, just start from the top\n      targetDoc = this.documents.values().next().value;\n    } else {\n      // The page was scrolled (e.g. the page was reloaded with a non-zero scroll position)\n      // In this case, Slidehub attempts to load the document in the center of the view.\n      const slidehubWidth = this.node.clientWidth;\n      const centerElement = document.elementFromPoint(slidehubWidth / 2, window.innerHeight / 2);\n      const centerDocument = centerElement.closest(config.selector.doc);\n      targetDoc = this.documents.get(centerDocument.id);\n    }\n\n    return targetDoc;\n  }\n\n  jumpToTargetDocument(targetDoc) {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n    if (document.documentElement.scrollTop !== 0 || fragmentIdentifier) {\n      const centerOffset = (window.innerHeight - targetDoc.node.clientHeight) / 2;\n      // After a short while, scroll the viewport to center the document\n      // In the future, `Element.scrollIntoView({ block: 'center' })` should work\n      setTimeout(() => window.scrollBy(0, -centerOffset), 200);\n    }\n  }\n\n  /**\n   * Initializes all core functionality.\n   *\n   * @private\n   */\n  start() {\n    this.navigateDocument = new DocumentNavigator(this);\n\n    this.exposeDocumentInfo();\n\n    this.imageLoader = new SlidehubImageLoader(this);\n    this.imageLoader.start();\n\n    this.mouseInteraction = new SlidehubMouseInteraction(this);\n    this.mouseInteraction.start();\n\n    const keyboardInteraction = new SlidehubKeyboardInteraction(this);\n    keyboardInteraction.start();\n\n    this.observeDocumentLoaded();\n    enableModals();\n  }\n\n  /**\n   * Observes documents being loaded\n   */\n  observeDocumentLoaded() {\n    const documentLoadedObserver = new MutationObserver(this.mutationHandler.bind(this));\n\n    const documentNodes = Array.from(this.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => {\n      documentLoadedObserver.observe(docNode, { childList: true });\n    });\n  }\n\n  /**\n   *\n   * @param {Array<MutationRecord>} mutationsList\n   */\n  mutationHandler(mutationsList) {\n    for (const mutation of mutationsList) {\n      if (mutation.addedNodes.length !== 0) {\n        const docNode = mutation.target;\n        this.imageLoader.startImageObserver(docNode);\n        const scrollbox = docNode.querySelector(config.selector.scrollbox);\n        if (scrollbox) {\n          this.mouseInteraction.initScrollInteraction(scrollbox);\n        }\n      }\n    }\n  }\n\n  /**\n   * Loads optional plugins.\n   *\n   * @private\n   */\n  loadPlugins() {\n    const documentSourceLinker = new plugin.DocumentSourceLinker(this);\n    documentSourceLinker.enable();\n\n    const pageWidgetPlugin = new plugin.PageWidgetPlugin(this);\n    pageWidgetPlugin.enable();\n  }\n\n  /**\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @public\n   */\n  get node() {\n    return this._node;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the Slidehub documents data structure.\n   * @public\n   */\n  get documents() {\n    return this._documents;\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently selected document.\n   * @public\n   */\n  get selectedDocument() {\n    return this._selectedDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new selected document.\n   * @private\n   */\n  set selectedDocument(doc) {\n    this._selectedDocument = doc;\n  }\n\n  /**\n   * Sets a new selected document.\n   *\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  selectDocument(doc) {\n    if (this.selectedDocument === doc) {\n      return;\n    }\n\n    // Remove selected class from currently selected document\n    if (this.selectedDocument) {\n      this.selectedDocument.node.classList.remove(selectClassName);\n    }\n\n    // Set new selected document\n    this.selectedDocument = doc;\n    this.selectedDocument.node.classList.add(selectClassName);\n\n    const slidehubSelectDocumentEvent = new CustomEvent('SlidehubSelectDocument', {\n      detail: { doc }\n    });\n    this.node.dispatchEvent(slidehubSelectDocumentEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently hovered document.\n   * @public\n   */\n  get hoveredDocument() {\n    return this._hoveredDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @private\n   */\n  set hoveredDocument(doc) {\n    this._hoveredDocument = doc;\n  }\n\n  /**\n   * Sets a new hovered document after unsetting the old one.\n   *\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @public\n   */\n  hoverDocument(doc) {\n    if (this.hoveredDocument === doc) {\n      return;\n    }\n\n    this.unhoverDocument();\n\n    // Set new hovered document\n    this.hoveredDocument = doc;\n    this.hoveredDocument.node.classList.add(hoverClassName);\n\n    const slidehubHoverDocumentEvent = new CustomEvent('SlidehubHoverDocument', {\n      detail: { doc }\n    });\n    this.node.dispatchEvent(slidehubHoverDocumentEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered document.\n   *\n   * **Side effect**: Also removes the hover from the currently hovered item\n   * within that document.\n   *\n   * @public\n   */\n  unhoverDocument() {\n    // Remove hovered class from currently hovered document\n    if (this.hoveredDocument) {\n      this.hoveredDocument.unhoverItem();\n      this.hoveredDocument.node.classList.remove(hoverClassName);\n      this.hoveredDocument = null;\n    }\n  }\n\n  /**\n   * @returns {DocumentNavigator} the document navigator object.\n   * @public\n   */\n  get navigateDocument() {\n    return this._documentNavigator;\n  }\n\n  /**\n   * @param {DocumentNavigator} documentNavigator\n   * @private\n   */\n  set navigateDocument(documentNavigator) {\n    this._documentNavigator = documentNavigator;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemWidth() {\n    return this._itemWidth;\n  }\n\n  /**\n   * @param {Number} itemWidth\n   * @private\n   */\n  set itemWidth(itemWidth) {\n    this._itemWidth = itemWidth;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get visibleItems() {\n    return this._visibleItems;\n  }\n\n  /**\n   * @param {Number} visibleItems\n   * @private\n   */\n  set visibleItems(visibleItems) {\n    this._visibleItems = visibleItems;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get scrollboxWidth() {\n    return this._scrollboxWidth;\n  }\n\n  /**\n   * @param {Number} scrollboxWidth\n   * @private\n   */\n  set scrollboxWidth(scrollboxWidth) {\n    this._scrollboxWidth = scrollboxWidth;\n  }\n\n  /**\n   * Wrapper method for all expose methods.\n   *\n   * @private\n   */\n  exposeDocumentInfo() {\n    this.exposeItemWidth();\n    this.exposeScrollboxWidth();\n    this.exposeNumberOfVisibleItems();\n\n    // Recalculate the scrollbox width on resize.\n    window.addEventListener('resize', debounce(() => {\n      this.exposeItemWidth();\n      this.exposeScrollboxWidth();\n      this.exposeNumberOfVisibleItems();\n    }, 200));\n  }\n\n  /**\n   * Exposes the current outer width of an item to the DOM.\n   *\n   * @private\n   */\n  exposeItemWidth() {\n    const item = this.selectedDocument.node.querySelector(config.selector.item);\n    const itemOuterWidth = getOuterWidth(item);\n\n    if (this.itemWidth !== itemOuterWidth) {\n      this.itemWidth = itemOuterWidth;\n\n      this.node.style.setProperty('--page-outer-width', this.itemWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current `clientWidth` of the selected scrollbox to the DOM.\n   *\n   * @private\n   */\n  exposeScrollboxWidth() {\n    const scrollboxNode = this.selectedDocument.node.querySelector(config.selector.scrollbox);\n\n    if (this.scrollboxWidth !== scrollboxNode.clientWidth) {\n      this.scrollboxWidth = scrollboxNode.clientWidth;\n\n      this.node.style.setProperty('--scrollbox-width', this.scrollboxWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current number of visible items in a document to the DOM.\n   *\n   * @private\n   */\n  exposeNumberOfVisibleItems() {\n    this.visibleItems = Math.floor(this.scrollboxWidth / this.itemWidth);\n  }\n};\n\nexport { Slidehub };\n","/**\n * Application entry point.\n */\n\nimport { polyfillIntersectionObserver } from './lib/intersection-observer.mjs';\nimport { Slidehub } from './core/Slidehub.mjs';\n\npolyfillIntersectionObserver(window, document);\n\n/**\n * An Immediately Invoked Function Expression, called like that because it’s\n * immediately executed when a JavaScript file like this is sourced.\n *\n * Starts the engines for Slidehub.\n */\n(function () {\n  new Slidehub();\n})();\n"]}