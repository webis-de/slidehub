{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/lib/intersection-observer.js","webpack:///./src/js/config.js","webpack:///./src/js/documents-data.js","webpack:///./src/js/lib/reverse-iterable-map.js","webpack:///./src/js/util/clamp.js","webpack:///./src/js/core/ItemNavigator.js","webpack:///./src/js/core/SlidehubDocument.js","webpack:///./src/js/core/SlidehubImageLoader.js","webpack:///./src/js/util/passive-event-listener.js","webpack:///./src/js/util/debounce.js","webpack:///./src/js/core/SlidehubMouseInteraction.js","webpack:///./src/js/core/SlidehubKeyboardInteraction.js","webpack:///./src/js/core/Modal.js","webpack:///./src/js/core/SlidehubPlugin.js","webpack:///./src/js/plugins/DocumentSourceLinker.js","webpack:///./src/js/util/getFragmentIdentifier.js","webpack:///./src/js/core/Slidehub.js","webpack:///./src/js/app.js","webpack:///./src/js/core/SlidehubDocumentLoader.js","webpack:///./src/js/core/SlidehubParser.js","webpack:///./src/js/core/DocumentNavigator.js","webpack:///./src/js/plugins/PageWidgetPlugin.js","webpack:///./src/js/util/getOuterWidth.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","window","document","IntersectionObserverEntry","this","intersectionRatio","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","computeRectIntersection","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","targetArea","intersectionArea","callback","opt_options","options","fn","timeout","timer","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","err","child","parentNode","host","config","assets","documents","images","staticContent","metaSlide","keepSelectedPageInFirstColumn","preserveAspectRatio","selectColor","highlightColor","selector","slidehub","doc","scrollbox","itemContainer","documentsData","ReverseIterableMap","[object Object]","iterable","_map","Map","_first","_last","set","first","last","size","clear","has","ReverseIterableMapNode","add","prev","next","delete","thisArg","entries","reverse","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","done","_key","_value","_next","_prev","clamp","ItemNavigator_ItemNavigator","_doc","_itemPos","_selectedItemPos","distance","by","vector","newSelectedItemPos","determineNewSelectedItemPos","selectedItemPos","updateSelectedItemPos","Number","isInteger","itemPos","updateItemPos","round","allItemsVisible","newItemPos","determineNewItemPos","scrollboxNode","scrollLeft","itemWidth","visibleItems","invalidItemPositions","itemCount","selectItem","items","numberOfVisibleItems","selectClassName","hoverClassName","SlidehubDocument_SlidehubDocument","imageCount","_name","_imageCount","_loaded","_node","_scrollboxNode","_items","_selectedItemNode","_hoveredItemNode","_itemNavigator","loaded","selectedItemNode","itemNode","parentElement","contains","classList","remove","slidehubSelectItemEvent","CustomEvent","bubbles","detail","dispatchEvent","activeElement","HTMLElement","blur","hoveredItemNode","unhoverItem","slidehubHoverItemEvent","navigateItem","markup","createMarkup","docNode","getElementById","insertAdjacentHTML","setNode","scrollboxClassName","itemContainerClassName","itemClassName","dummyPage","querySelector","querySelectorAll","selectedDocument","selectDocument","imageObservationHandler","observer","loadImage","image","dataset","src","setAttribute","removeAttribute","closest","style","cssText","includes","aspectRatio","naturalWidth","naturalHeight","setProperty","toString","console","error","supportsPassive","opts","listener","active","passive","debounce","func","wait","immediate","context","args","arguments","callNow","clearTimeout","apply","scrolling","vertical","delta","horizontal","controlKeyNames","33","34","35","36","37","38","39","40","lastFocusedElement","closeModal","modal","closeOnEscape","trapTabKey","closeOnBackground","focus","keyCode","tabable","getFocusableElements","currentTarget","tabIndex","preventDefault","shiftKey","ancestor","from","focusableElementsSelector","SlidehubPlugin","description","enabled","toggleButton","TypeError","enable","disable","createToggleButton","handleToggleButton","fieldset","toggleButtonMarkup","button","isPressed","getAttribute","String","triggerButtonAction","stateAttr","hasAttribute","warn","DocumentSourceLinker_DocumentSourceLinker","super","boundEnterHandler","enterHandler","boundDoubleClickHandler","doubleClickHandler","openInNewTab","ctrlKey","handleOpenIntent","tag","tagName","toLowerCase","potentiallyInteractive","disabled","offsetParent","openDocumentSource","itemIndex","page","fragment","itemSource","docSource","open","location","href","getFragmentIdentifier","url","hashPosition","substring","Slidehub_selectClassName","Slidehub_hoverClassName","_documents","_selectedDocument","_hoveredDocument","_documentNavigator","_itemWidth","_visibleItems","_scrollboxWidth","documentLoader","getNode","getDocuments","batchSize","prevIterator","nextIterator","documentObservationHandler","targetDoc","loadTargetDocument","loadBatch","documentFramesMarkup","values","documentSource","iteratorFor","loadDocument","documentIterable","insertPosition","iteratorResult","info","load","id","insertDocumentFrames","determineTargetDocument","start","jumpToTargetDocument","loadPlugins","slidehubNode","createNode","createElement","appendChild","fragmentIdentifier","scrollTop","slidehubWidth","centerDocument","elementFromPoint","innerHeight","centerOffset","scrollBy","navigateDocument","scrollDocumentIntoView","offset","getVerticalOffsets","extraPart","abs","documentNodes","getDocumentNodes","targetDocumentPos","selectedDocPos","targetDocumentNode","docEl","offsetTop","scrollY","offsetHeight","children","exposeDocumentInfo","imageLoader","imageObserver","imageObserverOptions","observeExistingDocuments","startImageObserver","mouseInteraction","mouseX","innerWidth","mouseY","initStoreMousePosition","initHoverDocumentOnScroll","initExistingDocuments","initModifiers","storeMousePosition","handleScrollDocumentHover","initMouseInteraction","initScrollInteraction","handleWheelInteraction","handleClickSelect","handleMoveHover","clientX","clientY","targetElement","docElement","hoverDocument","itemElement","hoverItem","scrollingDirection","deltaX","deltaY","sign","onModifierDown","onModifierUp","onModifierBlur","hoveredDocument","controlKey","homeKey","trigger","endKey","arrowLeft","arrowRight","arrowUp","up","arrowDown","down","pageUp","pageDown","handleKeyboardInput","keyName","observeDocumentLoaded","buttonArea","controlsOpenButton","title","targetModal","enableModals","documentLoadedObserver","mutationHandler","mutationsList","mutation","addedNodes","boundExposeItemCount","exposeItemCount","boundExposeCurrentItem","exposeCurrentItem","widgetHookNode","currentPageNode","totalPagesNode","insertWidgetMarkup","removeWidgetMarkup","widgetNode","firstElementChild","lastElementChild","textContent","lastChild","removeChild","slidehubSelectDocumentEvent","unhoverDocument","slidehubHoverDocumentEvent","documentNavigator","scrollboxWidth","exposeItemWidth","exposeScrollboxWidth","exposeNumberOfVisibleItems","itemOuterWidth","marginLeft","parseInt","marginRight","offsetWidth","floor"],"mappings":"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,CACA,GAAAA,GAAAnC,EAAA,SAEAmC,EAAAlC,EAAAkC,GAEA,SASA,SAAAlC,EAAAkC,GACA,IAAAnC,EAAAmC,EAAAe,WAEA,OAAAlD,GAAA,IAAAA,EAAA5E,UAAA4E,EAAAmD,KAEAnD,EAAAmD,KAEAnD,GA9pBA,CAoqBC3F,OAAAC,yDC/oBD,MAAA8I,GAEAC,QACAC,UAAA,yDACAC,OAAA,0DAIAC,iBAGAC,aAIAC,iCAGAC,uBAMAC,YAAA,KAGAC,eAAA,KAGAC,UACAC,SAAA,sBACAC,IAAA,OACAC,UAAA,iBACAC,cAAA,kBACAhJ,KAAA,UC9DAiJ,IACA,0BACA,0CACA,0BACA,uBACA,kCACA,yBACA,uBACA,sCACA,yBACA,+BACA,sCACA,+BACA,6BACA,0BACA,0BACA,0BACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,wCACA,wCACA,sCACA,sCAEA,wCACA,mCACA,mCACA,mCACA,4CACA,mCACA,kCACA,qCACA,mCACA,iCACA,sCACA,+BACA,gCACA,wCACA,mCACA,sCACA,sCACA,oCACA,wCACA,gCACA,mCACA,+BACA,iCACA,mCACA,kCACA,oCACA,oCACA,mCACA,iCACA,sCACA,mCACA,gCACA,qCACA,qCACA,qCACA,oCACA,uCACA,mCACA,oCACA,uCACA,6CACA,4CACA,wCACA,4CACA,gDACA,iDACA,gDACA,uBACA,sCACA,uCAEA,sCACA,sCACA,sCACA,sCACA,oCACA,gCACA,iCACA,0CACA,oCACA,gCACA,wCACA,6CACA,yCACA,oCACA,uCACA,q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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n  'use strict';\n\n  // Exits early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n  if (\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  ) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n    return;\n  }\n\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observering a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n  var registry = [];\n\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect;\n\n    // Calculates the intersection ratio.\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n    // Sets intersection ratio.\n    if (targetArea) {\n      this.intersectionRatio = intersectionArea / targetArea;\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    }\n\n    // Binds and throttles `this._checkForIntersections`.\n    this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this),\n      this.THROTTLE_TIMEOUT\n    );\n\n    // Private properties.\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n    // Public properties.\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues\n      .map(function(margin) {\n        return margin.value + margin.unit;\n      })\n      .join(' ');\n  }\n\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.observe = function(target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n    this._observationTargets.push({ element: target, entry: null });\n    this._monitorIntersections();\n    this._checkForIntersections();\n  };\n\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.unobserve = function(target) {\n    this._observationTargets = this._observationTargets.filter(function(item) {\n      return item.element != target;\n    });\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n      this._unregisterInstance();\n    }\n  };\n\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n  IntersectionObserver.prototype.disconnect = function() {\n    this._observationTargets = [];\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  };\n\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n  IntersectionObserver.prototype.takeRecords = function() {\n    var records = this._queuedEntries.slice();\n    this._queuedEntries = [];\n    return records;\n  };\n\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n  IntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n\n    return threshold.sort().filter(function(t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n      return t !== a[i - 1];\n    });\n  };\n\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n  IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function(margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n      return { value: parseFloat(parts[1]), unit: parts[2] };\n    });\n\n    // Handles shorthand.\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n\n    return margins;\n  };\n\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibilty state is visible.\n   * @private\n   */\n  IntersectionObserver.prototype._monitorIntersections = function() {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true;\n\n      // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if ('MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n  IntersectionObserver.prototype._unmonitorIntersections = function() {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n        this._domObserver = null;\n      }\n    }\n  };\n\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n  IntersectionObserver.prototype._checkForIntersections = function() {\n    var rootIsInDom = this._rootIsInDom();\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function(item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n      var rootContainsTarget = this._rootContainsTarget(target);\n      var oldEntry = item.entry;\n      var intersectionRect =\n        rootIsInDom &&\n        rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = (item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      }));\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function(target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\n\n      // If the parent isn't displayed, an intersection can't happen.\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (\n          parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible'\n        ) {\n          parentRect = getBoundingClientRect(parent);\n        }\n      }\n\n      // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n        if (!intersectionRect) break;\n      }\n      parent = getParentNode(parent);\n    }\n    return intersectionRect;\n  };\n\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n  IntersectionObserver.prototype._getRootRect = function() {\n    var rootRect;\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n    return this._expandRectByRootMargin(rootRect);\n  };\n\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n  IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n    var margins = this._rootMarginValues.map(function(margin, i) {\n      return margin.unit == 'px'\n        ? margin.value\n        : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n\n    return newRect;\n  };\n\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n  IntersectionObserver.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\n\n    // Ignore unchanged ratios\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i];\n\n      // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n      if (\n        threshold == oldRatio ||\n        threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio\n      ) {\n        return true;\n      }\n    }\n  };\n\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n  IntersectionObserver.prototype._rootIsInDom = function() {\n    return !this.root || containsDeep(document, this.root);\n  };\n\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n  IntersectionObserver.prototype._rootContainsTarget = function(target) {\n    return containsDeep(this.root || document, target);\n  };\n\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n  IntersectionObserver.prototype._registerInstance = function() {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n  IntersectionObserver.prototype._unregisterInstance = function() {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n\n  /**\n   * Throttles a function and delays its executiong, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function() {\n      if (!timer) {\n        timer = setTimeout(function() {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n\n    return (\n      width >= 0 &&\n      height >= 0 && {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        width: width,\n        height: height\n      }\n    );\n  }\n\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {\n      // Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect();\n\n    // Older IE\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n    return rect;\n  }\n\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  /**\n   * Checks to see if a parent element contains a child elemnt (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n  function containsDeep(parent, child) {\n    var node = child;\n    while (node) {\n      if (node == parent) return true;\n\n      node = getParentNode(node);\n    }\n    return false;\n  }\n\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n    return parent;\n  }\n\n  // Exposes the constructors globally.\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})(window, document);\n","export { config };\n\n/**\n * @typedef {object} Config\n * @property {ConfigPropertyAssets} assets\n * @property {boolean} staticContent\n * @property {boolean} metaSlide\n * @property {boolean} keepSelectedPageInFirstColumn\n * @property {boolean} preserveAspectRatio\n * @property {string|null} selectColor\n * @property {string|null} highlightColor\n * @property {ConfigPropertySelector} selector\n *\n * @typedef {object} ConfigPropertyAssets\n * @property {string} documents\n * @property {string} images\n *\n * @typedef {object} ConfigPropertySelector\n * @property {string} slidehub\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Global configuration object.\n *\n * @type {Config}\n */\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assets: {\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\n  },\n\n  // If set to true, it is assumed that the document markup is already present.\n  staticContent: false,\n\n  // Create a meta slide for each document?\n  metaSlide: true,\n\n  // Allows navigating pages so that the last page can be placed in the first\n  // column of a document container.\n  keepSelectedPageInFirstColumn: true,\n\n  // Preserve aspect ratio of document items?\n  preserveAspectRatio: false,\n\n  // Overrides the default select color.\n  // Takes string values that represent a valid CSS color value; for example:\n  // 'transparent', 'Highlight', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\n  // Setting `null` uses the default color.\n  selectColor: null,\n\n  // Overrides the default highlight color.\n  highlightColor: null,\n\n  // Selectors for UI components\n  selector: {\n    slidehub: '.slidehub-container',\n    doc: '.doc',\n    scrollbox: '.doc-scrollbox',\n    itemContainer: '.page-container',\n    item: '.page'\n  }\n};\n","export { documentsData };\n\n/** @type {Array<[string, number]>} */\nconst documentsData = [\n  ['acrostic-talk.pdf', 100],\n  ['argumentation-cross-domain-talk.pdf', 9],\n  ['cicling14-talk.pdf', 14],\n  ['cikm13-talk.pdf', 19],\n  ['eurovis15-plagvis-talk.pdf', 63],\n  ['ijcnlp13-talk.pdf', 13],\n  ['jufo13-talk.pdf', 22],\n  ['leipzig-colloquium15-talk.pdf', 118],\n  ['netspeak-talk.pdf', 45],\n  ['ral15-picapica-talk.pdf', 82],\n  ['republica17-clickbait-talk.pdf', 14],\n  ['ukj16-picapica-talk.pdf', 46],\n  ['webquality12-talk.pdf', 41],\n  ['potthast_2011b.pdf', 61],\n  ['potthast_2012a.pdf', 28],\n  ['potthast_2016c.pdf', 88],\n  ['stein_2005b.pdf', 24],\n  ['stein_2006j.pdf', 33],\n  ['stein_2006l.pdf', 20],\n  ['stein_2007b.pdf', 43],\n  ['stein_2007d.pdf', 21],\n  ['stein_2007m.pdf', 24],\n  ['stein_2008b.pdf', 7],\n  ['stein_2008d.pdf', 20],\n  ['stein_2008j.pdf', 64],\n  ['stein_2009e.pdf', 31],\n  ['stein_2010h.pdf', 55],\n  ['stein_2010r.pdf', 10],\n  ['stein_2010t.pdf', 27],\n  ['stein_2010u.pdf', 25],\n  ['stein_2011e.pdf', 39],\n  ['stein_2011f.pdf', 20],\n  ['stein_2011h.pdf', 36],\n  ['stein_2011j.pdf', 51],\n  ['stein_2011k.pdf', 76],\n  ['stein_2011l.pdf', 64],\n  ['stein_2011q.pdf', 30],\n  ['stein_2011t.pdf', 24],\n  ['stein_2011u.pdf', 16],\n  ['stein_2012c.pdf', 34],\n  ['stein_2012m.pdf', 13],\n  ['stein_2012o.pdf', 34],\n  ['stein_2012q.pdf', 46],\n  ['stein_2012t.pdf', 26],\n  ['stein_2012u.pdf', 24],\n  ['stein_2012w.pdf', 20],\n  ['stein_2013a.pdf', 15],\n  ['stein_2013b.pdf', 47],\n  ['stein_2013f.pdf', 52],\n  ['stein_2013g.pdf', 17],\n  ['stein_2013h.pdf', 29],\n  ['stein_2014b.pdf', 14],\n  ['stein_2014f.pdf', 24],\n  ['stein_2014j.pdf', 31],\n  ['stein_2014k.pdf', 27],\n  ['stein_2015b.pdf', 35],\n  ['stein_2015c.pdf', 47],\n  ['stein_2015n.pdf', 13],\n  ['stein_2015o.pdf', 48],\n  ['stein_2016a.pdf', 36],\n  ['stein_2016b.pdf', 2],\n  ['stein_2016c.pdf', 34],\n  ['stein_2016d.pdf', 49],\n  ['stein_2016i.pdf', 11],\n  ['stein_2016j.pdf', 26],\n  ['stein_2016k.pdf', 44],\n  ['stein_2016l.pdf', 31],\n  ['stein_2016m.pdf', 67],\n  ['stein_2016o.pdf', 63],\n  ['stein_2017a.pdf', 17],\n  ['stein_2017b.pdf', 10],\n  ['stein_2017c.pdf', 11],\n  ['unit-de-client-technologies1.pdf', 87],\n  ['unit-de-client-technologies2.pdf', 45],\n  ['unit-de-conceptual-design1.pdf', 31],\n  ['unit-de-conceptual-design2.pdf', 52],\n  // [\"unit-de-conceptual-design3.pdf\", 1],\n  ['unit-de-configuration-basics.pdf', 34],\n  ['unit-de-constraints-fd1.pdf', 43],\n  ['unit-de-constraints-fd2.pdf', 50],\n  ['unit-de-constraints-ifd.pdf', 18],\n  ['unit-de-constraints-introduction.pdf', 34],\n  ['unit-de-db-introduction.pdf', 50],\n  ['unit-de-db-organization.pdf', 9],\n  ['unit-de-design-and-models.pdf', 28],\n  ['unit-de-diagnosis-bayes.pdf', 28],\n  ['unit-de-diagnosis-cbr.pdf', 35],\n  ['unit-de-diagnosis-dempster.pdf', 34],\n  ['unit-de-doclang-css.pdf', 35],\n  ['unit-de-doclang-html.pdf', 53],\n  ['unit-de-doclang-introduction.pdf', 30],\n  ['unit-de-doclang-xml-api.pdf', 77],\n  ['unit-de-doclang-xml-basics.pdf', 74],\n  ['unit-de-doclang-xml-schema.pdf', 92],\n  ['unit-de-doclang-xml-xsl.pdf', 115],\n  ['unit-de-ensemble-classifiers.pdf', 32],\n  ['unit-de-fuzzy-basics.pdf', 44],\n  ['unit-de-fuzzy-inference.pdf', 29],\n  ['unit-de-index-terms.pdf', 20],\n  ['unit-de-ir-evaluation.pdf', 19],\n  ['unit-de-ir-introduction.pdf', 25],\n  ['unit-de-ir-organization.pdf', 6],\n  ['unit-de-kbs-applications.pdf', 31],\n  ['unit-de-kbs-introduction.pdf', 28],\n  ['unit-de-kbs-organization.pdf', 7],\n  ['unit-de-logics-algebra.pdf', 3],\n  ['unit-de-logics-organization.pdf', 5],\n  ['unit-de-model-formation.pdf', 14],\n  ['unit-de-model-system.pdf', 18],\n  ['unit-de-network-protocol1.pdf', 44],\n  ['unit-de-network-protocol2.pdf', 38],\n  ['unit-de-network-protocol3.pdf', 53],\n  ['unit-de-non-monotonicity.pdf', 21],\n  ['unit-de-planning-algorithms.pdf', 56],\n  ['unit-de-planning-basics.pdf', 40],\n  ['unit-de-predicate-basics.pdf', 36],\n  ['unit-de-predicate-complexity.pdf', 6],\n  ['unit-de-predicate-sat-syntactical.pdf', 27],\n  ['unit-de-predicate-transformation.pdf', 23],\n  ['unit-de-propositional-basics.pdf', 58],\n  ['unit-de-propositional-complexity.pdf', 18],\n  ['unit-de-propositional-sat-semantical.pdf', 22],\n  ['unit-de-propositional-sat-syntactical.pdf', 56],\n  ['unit-de-propositional-transformation.pdf', 33],\n  ['unit-de-psk.pdf', 12],\n  ['unit-de-relational-algebra.pdf', 67],\n  ['unit-de-relational-calculus.pdf', 85],\n  // [\"unit-de-relational-design0.pdf\", 1],\n  ['unit-de-relational-design1.pdf', 43],\n  ['unit-de-relational-design2.pdf', 62],\n  ['unit-de-relational-theory1.pdf', 71],\n  ['unit-de-relational-theory2.pdf', 50],\n  ['unit-de-retrieval-models.pdf', 18],\n  ['unit-de-rm-algebraic.pdf', 45],\n  ['unit-de-rm-term-based.pdf', 24],\n  ['unit-de-rule-systems-inference.pdf', 39],\n  ['unit-de-rule-systems-not.pdf', 20],\n  ['unit-de-rule-systems.pdf', 58],\n  ['unit-de-self-organizing-maps.pdf', 30],\n  ['unit-de-semantic-web-introduction.pdf', 30],\n  ['unit-de-semantic-web-ontology.pdf', 72],\n  ['unit-de-semantic-web-rdf.pdf', 79],\n  ['unit-de-semantic-web-rdfsem.pdf', 27],\n  ['unit-de-semantic-web-rdfs.pdf', 32],\n  ['unit-de-server-technologies1.pdf', 63],\n  ['unit-de-server-technologies2.pdf', 84],\n  ['unit-de-sql1.pdf', 96],\n  ['unit-de-sql2.pdf', 38],\n  ['unit-de-sql3.pdf', 16],\n  ['unit-de-stemming.pdf', 12],\n  ['unit-de-symbol.pdf', 32],\n  ['unit-de-verification1.pdf', 46],\n  ['unit-de-verification2.pdf', 132],\n  ['unit-de-verification3.pdf', 32],\n  ['unit-de-verification.pdf', 210],\n  ['unit-de-webis-architectures1.pdf', 35],\n  ['unit-de-webis-architectures2.pdf', 17],\n  ['unit-de-wt-introduction.pdf', 57],\n  ['unit-de-wt-organization.pdf', 7],\n  ['unit-de-xps.pdf', 26],\n  ['unit-en-association-analysis.pdf', 2],\n  ['unit-en-astar-formal1.pdf', 63],\n  ['unit-en-astar-formal2.pdf', 65],\n  ['unit-en-astar-relaxed1.pdf', 42],\n  ['unit-en-astar-relaxed2.pdf', 32],\n  ['unit-en-basic-search1.pdf', 68],\n  ['unit-en-basic-search2.pdf', 38],\n  ['unit-en-bayesian-learning.pdf', 23],\n  ['unit-en-cluster-analysis-basics.pdf', 21],\n  ['unit-en-cluster-analysis-constrained.pdf', 38],\n  ['unit-en-cluster-analysis-density.pdf', 59],\n  ['unit-en-cluster-analysis-evaluation.pdf', 72],\n  ['unit-en-cluster-analysis-hierarchical.pdf', 85],\n  ['unit-en-cluster-analysis-iterative.pdf', 26],\n  ['unit-en-concept-learning.pdf', 53],\n  ['unit-en-data.pdf', 27],\n  ['unit-en-decision-trees-algorithms.pdf', 26],\n  ['unit-en-decision-trees-basics.pdf', 32],\n  ['unit-en-decision-trees-impurity.pdf', 33],\n  ['unit-en-decision-trees-pruning.pdf', 20],\n  ['unit-en-diagnosis-gde.pdf', 56],\n  ['unit-en-diagnosis-tms.pdf', 38],\n  ['unit-en-dm-overview.pdf', 10],\n  ['unit-en-game-playing-basics.pdf', 41],\n  ['unit-en-informed-bf1.pdf', 102],\n  ['unit-en-informed-bf2.pdf', 117],\n  ['unit-en-informed-bf3.pdf', 21],\n  ['unit-en-ml-introduction.pdf', 33],\n  ['unit-en-ml-organization.pdf', 8],\n  ['unit-en-multilayer-perceptron.pdf', 22],\n  ['unit-en-perceptron-learning.pdf', 59],\n  ['unit-en-performance-measures.pdf', 21],\n  ['unit-en-probability-basics.pdf', 20],\n  // [\"unit-en-radial-basis-functions.pdf\", 1],\n  ['unit-en-regression.pdf', 44],\n  ['unit-en-relaxed-models.pdf', 24],\n  ['unit-en-representation1.pdf', 34],\n  ['unit-en-representation2.pdf', 52],\n  ['unit-en-rule-mining.pdf', 2],\n  ['unit-en-search-introduction.pdf', 36],\n  ['unit-en-search-organization.pdf', 4]\n];\n","export { ReverseIterableMap };\n\n/**\n * A reverse-iterable map implementation based on the built-in [`Map`][Map] object.\n *\n * It exposes its order via iterable iterators which can be used for both forwards and backwards\n * iteration. As per `Map`, the order of a `ReverseIterableMap` is the insertion order.\n *\n * [Map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n *\n * @typedef {class} ReverseIterableMapType\n * @template K, V\n * @property {Map<K, V>} _map\n * @property {ReverseIterableMapNode} _first\n * @property {ReverseIterableMapNode} _last\n *\n * @type {ReverseIterableMapType}\n */\nclass ReverseIterableMap {\n  /**\n   * An [iterable][iterable] object whose elements are key-value pairs.\n   *\n   * [iterable]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\n   *\n   * @param {Iterable?} iterable\n   * @public\n   */\n  constructor(iterable = null) {\n    this._map = new Map();\n    this._first = null;\n    this._last = null;\n\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * The [`@@toStringTag`][toStr] property is used is used when `toString()` is called on a\n   * `ReverseIterableMap` object.\n   *\n   * [toStr]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\n   *\n   * @returns {string} The string tag of the `ReverseIterableMap` class.\n   * @public\n   */\n  get [Symbol.toStringTag]() {\n    return 'ReverseIterableMap';\n  }\n\n  /**\n   * Returns the first `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get first() {\n    return this._first;\n  }\n\n  /**\n   * Sets the first `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set first(node) {\n    this._first = node;\n  }\n\n  /**\n   * Returns the last `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get last() {\n    return this._last;\n  }\n\n  /**\n   * Sets the last `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set last(node) {\n    this._last = node;\n  }\n\n  /**\n   * The `size` accessor property returns the number of elements in a `ReverseIterableMap` object.\n   * Calls [`Map.prototype.size`][size].\n   *\n   * [size]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n   *\n   * @returns {number} The size of the ReverseIterableMap.\n   * @public\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * The `clear()` method removes all elements from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.clear`][clear].\n   *\n   * [clear]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   *\n   * @public\n   */\n  clear() {\n    this._map.clear();\n    this._first = null;\n    this._last = null;\n  }\n\n  /**\n   * The `has()` method returns a boolean indicating whether an element with the specified key\n   * exists or not. Calls [`Map.prototype.has`][has].\n   *\n   * [has]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   *\n   * @param {*} key\n   * @returns {boolean} `true` if an element with the specified key exists in a\n   * `ReverseIterableMap` object; otherwise `false`.\n   * @public\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * The `get()` method returns a specified element from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.get`][get].\n   *\n   * [get]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   *\n   * @param {*} key\n   * @returns {*|undefined}\n   * @public\n   */\n  get(key) {\n    return this._map.get(key).value;\n  }\n\n  /**\n   * The `getLast()` method returns the last element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The last element or `null` if the map is empty.\n   * @public\n   */\n  getLast() {\n    if (this.last) {\n      return this.last.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `getFirst()` method returns the first element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The first element or `null` if the map is empty.\n   * @public\n   */\n  getFirst() {\n    if (this.first) {\n      return this.first.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `add()` method adds a new element to the internal `Map` object. It does not link itself\n   * with its neighboring elements which is why this method must never be called directly.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  add(key, value) {\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n    } else {\n      node = new ReverseIterableMapNode(key, value);\n\n      this._map.set(key, node);\n    }\n\n    return node;\n  }\n\n  /**\n   * The `set()` method adds a new element to a `ReverseIterableMap` object in insertion order or\n   * updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  set(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.prev = this.last;\n      this.last.next = node;\n      this.last = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `setFront()` method adds a new element to a `ReverseIterableMap` object in\n   * reverse insertion order or updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  setFirst(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first.prev = node;\n      this.first = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `delete()` method removes the specified element from a\n   * `ReverseIterableMap` object. Calls [`Map.prototype.delete`][del].\n   *\n   * [del]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   *\n   * @param {*} key The key of the element to remove from the\n   * `ReverseIterableMap` object.\n   * @returns {boolean} `true` if an element in the `ReverseIterableMap` object\n   * existed and has been removed, or `false` if the element does not exist.\n   * @public\n   */\n  delete(key) {\n    if (this.has(key)) {\n      const node = this._map.get(key);\n\n      if (this.first === this.last) {\n        this.first = null;\n        this.last = null;\n      } else if (this.first === node) {\n        node.next.prev = null;\n        this.first = node.next;\n      } else if (this.last === node) {\n        node.prev.next = null;\n        this.last = node.prev;\n      } else {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n      }\n\n      this._map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * The `forEach()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in insertion order. For reference, see\n   * [`Map.prototype.forEach`][fe].\n   *\n   * [fe]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEach(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The `forEachReverse()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in reverse insertion order.\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEachReverse(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries().reverse()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The initial value of the @@iterator property is the same function object as the initial value\n   * of the entries property.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Allows usage of the [iteration protocols][ip] for reverse iteration.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Examples:\n   *\n   * ```js\n   * const map = new ReverseIterableMap();\n   *\n   * [...map.reverse()];\n   *\n   * for (const [key, value] of map.reverse()) {\n   *   console.log(key, value);\n   * }\n   * ```\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  reverse() {\n    return this.entries().reverse();\n  }\n\n  /**\n   * The `entries()` method returns a new [Iterator][it] object that contains the `[key, value]`\n   * pairs for each element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  entries() {\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `keys()` method returns a new [Iterator][it] object that contains the keys for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  keys() {\n    const getIteratorValue = function(node) {\n      return node.key;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `values()` method returns a new [Iterator][it] object that contains the values for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  values() {\n    const getIteratorValue = function(node) {\n      return node.value;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `iteratorFor()` method returns a new [Iterator][it] object that contains the\n   * `[key, value]` pairs for each element in a `ReverseIterableMap` object in insertion order\n   *  **starting with the pair specified by the `key` parameter**.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @param {*} key The key of the element to start iterating from.\n   * @returns {IterableIterator}\n   * @public\n   */\n  iteratorFor(key) {\n    let startNode = this._map.get(key);\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue, startNode);\n  }\n\n  /**\n   * Returns an object which is both an iterable and an iterator. It fulfills the requirements of\n   * the [iteration protocols][ip] plus allowing reverse-iteration.\n   *\n   * - **Iterator requirements**: An object that implements a function `next`. This function\n   *   returns an object with two properties: `value` and `done`.\n   *\n   * - **Iterable requirements**: An object that implements a function `[Symbol.iterator]()`. This\n   *   function returns an iterator.\n   *\n   * - **Reverse-iterable requirements**: An object that implements a function `reverse()`. This\n   *   function returns an iterator with the special behavior of iterating in reverse insertion\n   *   order. This is non-standard behavior.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * @param {function} getIteratorValue\n   * @param {ReverseIterableMapNode?} startNode\n   * @returns {IterableIterator}\n   * @private\n   */\n  iterableIterator(getIteratorValue, startNode = undefined) {\n    let currentNode = startNode ? startNode : this.first;\n    // Store the this.last node as inside the reverse() method, `this` will be\n    // bound to iterableIterator, not ReverseIterableMap. That’s on purpose.\n    const last = this.last;\n    let nextProp = 'next';\n\n    return {\n      reverse() {\n        currentNode = startNode ? startNode : last;\n        nextProp = 'prev';\n        return this;\n      },\n      [Symbol.iterator]() {\n        // Return the iterable itself.\n        return this;\n      },\n      next: function() {\n        let value;\n        if (currentNode) {\n          value = getIteratorValue(currentNode);\n          currentNode = currentNode[nextProp];\n        }\n        return iteratorResult(value);\n      }\n    };\n  }\n}\n\n/**\n * The `ReverseIterableMapNode` object represents an element in a `ReverseIterableMap` object.\n * Its main purpose is storing a `[key, value]` pair. Additionally, it keeps references to the\n * `ReverseIterableMapNode` objects appearing before and after itself in a `ReverseIterableMap`\n * object.\n *\n * @typedef {class} ReverseIterableMapNodeType\n * @template K, V\n * @property {K} _key\n * @property {V} _value\n * @property {ReverseIterableMapNode} _prev\n * @property {ReverseIterableMapNode} _next\n *\n * @type {ReverseIterableMapNodeType}\n * @protected\n */\nclass ReverseIterableMapNode {\n  /**\n   * A `[key, value]` pair that is part of a `ReverseIterableMap` object.\n   *\n   * @template K, V\n   * @param {K} key\n   * @param {V} value\n   */\n  constructor(key, value) {\n    this._key = key;\n    this._value = value;\n    this._next = null;\n    this._prev = null;\n  }\n\n  /**\n   * Returns the key from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The key.\n   * @protected\n   */\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * Returns the value from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The value.\n   * @protected\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * Sets the value of a `ReverseIterableMapNode` object.\n   *\n   * @param {*} value The value.\n   * @protected\n   */\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * Returns the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * Sets the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} next The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set next(next) {\n    this._next = next;\n  }\n\n  /**\n   * Returns the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get prev() {\n    return this._prev;\n  }\n\n  /**\n   * Sets the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} prev The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set prev(prev) {\n    this._prev = prev;\n  }\n}\n\n/**\n * Returns an `IteratorResult` object as per the following rules:\n * - If `value` is not `undefined`, `done` is `false`.\n * - If `value` is `undefined`, `done` is `true`. In this case, `value` may be omitted.\n *\n * This function does not belong to `ReverseIterableMap` as it doesn’t need access to any\n * of its properties.\n *\n * @param {*|undefined} value\n * @returns {IteratorResult}\n */\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: value === undefined\n  };\n}\n","export { clamp };\n\n/**\n * Clamps the given value between the min and max boundaries.\n *\n * @param {Number} value\n * @param {Number} min\n * @param {Number} max\n * @returns {Number} - `value` if `min <= value <= max`\n *                   - `min` if `value < min`\n *                   - `max` if `value > max`\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n","import { config } from '../config';\nimport { clamp } from '../util/clamp';\n\nexport { ItemNavigator };\n\n/**\n * Item Navigator\n *\n * **Usage**:\n *\n * ```\n * const navigateItem = new ItemNavigator(slidehub, doc);\n * navigateItem.by(3);\n * ```\n */\nclass ItemNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  constructor(slidehub, doc) {\n    this.slidehub = slidehub;\n    this._doc = doc;\n    this._itemPos = 0;\n    this._selectedItemPos = 0;\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  left(distance) {\n    this.by(-distance);\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  right(distance) {\n    this.by(distance);\n  }\n\n  /**\n   * Main interface for item navigation. The algorithm works like this:\n   *\n   * 1. Determine the new position of the selected item.\n   *\n   *    1.1. If the new position is different than the current position, update it.\n   *\n   * 2. If the current item position is not aligned properly (i.e. is not an integer),\n   *    its position will be rounded to the next closest integer position.\n   *\n   * 3. If the `keepSelectedPageInFirstColumn` option is turned on\n   *    and all items are visible within their document, return.\n   *\n   * 4. Determine the new position of the item.\n   *\n   *    4.1. If the new position is the same as the current position, return.\n   *\n   *    4.2. Update the item position with the new value.\n   *\n   * @param {Number} vector\n   * @private\n   */\n  by(vector) {\n    const newSelectedItemPos = this.determineNewSelectedItemPos(vector);\n    if (newSelectedItemPos !== this.selectedItemPos) {\n      this.updateSelectedItemPos(newSelectedItemPos);\n    }\n\n    // If the current item position is not properly aligned …\n    if (!Number.isInteger(this.itemPos)) {\n      this.updateItemPos(Math.round(this.itemPos));\n    }\n\n    // If all items are already visible, we’re done here.\n    if (!config.keepSelectedPageInFirstColumn && this.allItemsVisible()) {\n      return;\n    }\n\n    const newItemPos = this.determineNewItemPos(vector);\n\n    // Nothing to do, current position is already the destination.\n    if (newItemPos === this.itemPos) {\n      return;\n    }\n\n    this.updateItemPos(newItemPos);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   * @public\n   */\n  get doc() {\n    return this._doc;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemPos() {\n    return this._itemPos;\n  }\n\n  /**\n   * @param {Number} itemPos\n   * @private\n   */\n  set itemPos(itemPos) {\n    this._itemPos = itemPos;\n  }\n\n  /**\n   * Updates the position of the item.\n   *\n   * @param {Number} newItemPos\n   * @private\n   */\n  updateItemPos(newItemPos) {\n    this.itemPos = newItemPos;\n    this.doc.scrollboxNode.scrollLeft = newItemPos * this.slidehub.itemWidth;\n  }\n\n  /**\n   * Determines the new position of the item based on a direction vector.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewItemPos(vector) {\n    const newItemPos = this.itemPos + vector;\n    const visibleItems = this.slidehub.visibleItems;\n\n    // For certain settings, some item positions don’t need to accessible because they are already\n    // visible\n    const invalidItemPositions = config.keepSelectedPageInFirstColumn ? 0 : visibleItems - 1;\n    const maxPos = this.doc.itemCount() - invalidItemPositions;\n\n    return clamp(newItemPos, 0, maxPos);\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get selectedItemPos() {\n    return this._selectedItemPos;\n  }\n\n  /**\n   * @param {Number} selectedItemPos\n   * @private\n   */\n  set selectedItemPos(selectedItemPos) {\n    this._selectedItemPos = selectedItemPos;\n  }\n\n  /**\n   * Updates the position of the selected item.\n   *\n   * @param {Number} newSelectedItemPos\n   * @private\n   */\n  updateSelectedItemPos(newSelectedItemPos) {\n    this.selectedItemPos = newSelectedItemPos;\n    this.doc.selectItem(this.doc.items.item(newSelectedItemPos));\n  }\n\n  /**\n   * Determines the new position of the selected item based on `distance`.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewSelectedItemPos(vector) {\n    const newSelectedItemPos = this.selectedItemPos + vector;\n    return clamp(newSelectedItemPos, 0, this.doc.itemCount());\n  }\n\n  /**\n   * Tests whether a document’s items are all visible.\n   *\n   * @returns {boolean}\n   * @private\n   */\n  allItemsVisible() {\n    return this.doc.itemCount < this.slidehub.numberOfVisibleItems;\n  }\n};\n","import { config } from '../config';\nimport { ItemNavigator } from './ItemNavigator';\n\nexport { SlidehubDocument };\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Slidehub Document\n */\nclass SlidehubDocument {\n  /**\n   * @param {String} name\n   * @param {Number} imageCount\n   */\n  constructor(slidehub, name, imageCount) {\n    this.slidehub = slidehub;\n\n    this._name = name;\n    this._imageCount = imageCount;\n    this._loaded = false;\n\n    this._node = null;\n    this._scrollboxNode = null;\n    this._items = null;\n    this._selectedItemNode = null;\n    this._hoveredItemNode = null;\n    this._itemNavigator = null;\n  }\n\n  /**\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  get imageCount() {\n    return this._imageCount;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  get loaded() {\n    return this._loaded;\n  }\n\n  /**\n   * @param {Boolean} loaded\n   */\n  set loaded(loaded) {\n    this._loaded = loaded;\n  }\n\n  get node() {\n    return this._node;\n  }\n\n  set node(node) {\n    this._node = node;\n  }\n\n  get scrollboxNode() {\n    return this._scrollboxNode;\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  itemCount() {\n    return this.items.length - 1;\n  }\n\n  get selectedItemNode() {\n    return this._selectedItemNode;\n  }\n\n  set selectedItemNode(item) {\n    this._selectedItemNode = item;\n  }\n\n  /**\n   * Sets a new selected item.\n   *\n   * @param {Element} itemNode\n   */\n  selectItem(itemNode) {\n    if (this.selectedItemNode === itemNode) {\n      return;\n    }\n\n    const itemContainer = itemNode.parentElement;\n    if (this.selectedItemNode && itemContainer.contains(this.selectedItemNode)) {\n      this.selectedItemNode.classList.remove(selectClassName);\n    }\n\n    this.selectedItemNode = itemNode;\n    this.selectedItemNode.classList.add(selectClassName);\n\n    const slidehubSelectItemEvent = new CustomEvent('SlidehubSelectItem', {\n      bubbles: true,\n      detail: { itemNode }\n    });\n    this.node.dispatchEvent(slidehubSelectItemEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  get hoveredItemNode() {\n    return this._hoveredItemNode;\n  }\n\n  set hoveredItemNode(item) {\n    this._hoveredItemNode = item;\n  }\n\n  /**\n   * Sets a new hovered item.\n   *\n   * @param {Element} itemNode\n   */\n  hoverItem(itemNode) {\n    if (this.hoveredItemNode === itemNode) {\n      return;\n    }\n\n    this.unhoverItem();\n\n    this.hoveredItemNode = itemNode;\n    this.hoveredItemNode.classList.add(hoverClassName);\n\n    const slidehubHoverItemEvent = new CustomEvent('SlidehubHoverItem', {\n      bubbles: true,\n      detail: { itemNode }\n    });\n    this.node.dispatchEvent(slidehubHoverItemEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered item.\n   */\n  unhoverItem() {\n    if (this.hoveredItemNode) {\n      this.hoveredItemNode.classList.remove(hoverClassName);\n      this.hoveredItemNode = null;\n    }\n  }\n\n  get navigateItem() {\n    return this._itemNavigator;\n  }\n\n  load() {\n    const markup = this.createMarkup();\n    const docNode = document.getElementById(this.name);\n    docNode.insertAdjacentHTML('beforeend', markup);\n\n    this.setNode(docNode);\n\n    return docNode;\n  }\n\n  /**\n   * Creates the complete markup for a document under the following assumptions:\n   * - A file named `this.name` exists on the document assets path\n   * - The document’s item images are on the image assets path\n   *\n   * @returns {String}\n   */\n  createMarkup() {\n    const scrollboxClassName = config.selector.scrollbox.slice(1);\n    const itemContainerClassName = config.selector.itemContainer.slice(1);\n    const itemClassName = config.selector.item.slice(1);\n\n    let items = '';\n    for (var i = 0; i < this.imageCount; i++) {\n      const imageSource = `${config.assets.images}/${this.name}-${i}.png`;\n      items += `<div class=\"${itemClassName}\" data-page=\"${i + 1}\">\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\n      </div>`;\n    }\n\n    const documentSource = `${config.assets.documents}/${this.name}`;\n\n    const metaSlide = `<div class=\"${itemClassName} ${itemClassName}--text\" data-page=\"0\">\n      <div class=\"doc-meta\">\n        <h2 class=\"doc-meta__title\">\n          <a href=\"${documentSource}\">${this.name}</a>\n        </h2>\n        by author, ${this.imageCount} pages, 2018\n      </div>\n    </div>`;\n\n    const dummyPage = `<div\n      class=\"${itemClassName} dummy-page\"\n      aria-hidden=\"true\"\n      style=\"visibility: hidden;\"\n    ></div>`;\n\n    return `<div class=\"${scrollboxClassName}\">\n      <div class=\"${itemContainerClassName}\">\n        ${config.metaSlide ? metaSlide : ''}\n        ${items}\n        ${dummyPage}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * @param {HTMLElement} node\n   */\n  setNode(node) {\n    this.node = node;\n    this._scrollboxNode = node.querySelector(config.selector.scrollbox);\n    this._items = node.querySelectorAll('[data-page]');\n    this._itemNavigator = new ItemNavigator(this.slidehub, this);\n\n    if (!this.slidehub.selectedDocument) {\n      this.slidehub.selectDocument(this);\n    }\n    this.selectItem(node.querySelector(config.selector.item));\n\n    this.loaded = true;\n  }\n};\n","import { config } from '../config';\n\nexport { SlidehubImageLoader };\n\n/**\n * Loads document images when needed (i.e. lazy-loading).\n */\nclass SlidehubImageLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.imageObserver = null;\n\n    if ('IntersectionObserver' in window) {\n      const imageObserverOptions = {\n        root: slidehub.node,\n        rootMargin: '500px 1000px'\n      };\n\n      this.imageObserver = new IntersectionObserver(imageObservationHandler, imageObserverOptions);\n    }\n  }\n\n  start() {\n    if (this.imageObserver) {\n      this.observeExistingDocuments();\n    } else {\n      const images = Array.from(this.slidehub.node.querySelectorAll('img[data-src]'));\n      images.forEach(image => loadImage(image));\n    }\n  }\n\n  observeExistingDocuments() {\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => this.startImageObserver(docNode));\n  }\n\n  /**\n   * Starts the image observer on all lazy-loading images.\n   *\n   * @param {HTMLElement} docNode\n   */\n  startImageObserver(docNode) {\n    const images = Array.from(docNode.querySelectorAll('img[data-src]'));\n    images.forEach(image => this.imageObserver.observe(image));\n  }\n};\n\n/**\n * Handles lazy-loading document images.\n *\n * @param {*} entries\n * @param {IntersectionObserver} observer\n */\nfunction imageObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      loadImage(entry.target);\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\n/**\n * Replaces the data-src attribute with the src attribute, causing the browser to load the image.\n *\n * @param {HTMLImageElement} image\n */\nfunction loadImage(image) {\n  if (!image.dataset.src) {\n    console.error('Couldn’t load image due to missing data-src attribute.', image);\n    return;\n  }\n\n  image.setAttribute('src', image.dataset.src);\n  image.removeAttribute('data-src');\n  image.addEventListener('load', () => handleItemImageLoaded(image));\n}\n\n/**\n * Plain wrapper for triggering certain actions once an image has loaded.\n *\n * @param {HTMLImageElement} image\n */\nfunction handleItemImageLoaded(image) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(image);\n  }\n}\n\n/**\n * Calculates the aspect ratio of an image and stores it in the DOM as a\n * custom CSS property.\n *\n * @param {HTMLImageElement} image\n */\nfunction setItemAspectRatio(image) {\n  const docNode = image.closest(config.selector.doc);\n\n  if (docNode && !docNode.style.cssText.includes('--page-aspect-ratio')) {\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\n    docNode.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\n  }\n}\n","export { listener };\n\n/**\n * Feature detection for passive event listeners as per:\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\n/**\n * @typedef {Object} AddEventListenerOptionsObject\n * @property {Boolean|AddEventListenerOptions} active\n * @property {Boolean|AddEventListenerOptions} passive\n */\n\n/**\n * Stores the third argument for `addEventListener` for both cases\n * @type {AddEventListenerOptionsObject}\n */\nconst listener = {\n  active: supportsPassive ? { passive: false } : false,\n  passive: supportsPassive ? { passive: true } : false\n};\n","export { debounce };\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @see https://davidwalsh.name/javascript-debounce-function\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean?} immediate\n * @returns {Function}\n */\nfunction debounce(func, wait, immediate = false) {\n  let timeout;\n\n  return function () {\n    const context = this, args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","import { config } from '../config';\nimport { listener } from '../util/passive-event-listener';\nimport { debounce } from '../util/debounce';\n\nexport { SlidehubMouseInteraction };\n\nconst scrolling = {\n  vertical: {\n    delta: 'deltaY'\n  },\n  horizontal: {\n    delta: 'deltaX'\n  }\n};\n\n/**\n * Mouse Interaction.\n */\nclass SlidehubMouseInteraction {\n  constructor(slidehub) {\n    this.mouseX = window.innerWidth / 2;\n    this.mouseY = window.innerHeight / 2;\n    this.slidehub = slidehub;\n  }\n\n  start() {\n    this.initStoreMousePosition();\n    this.initHoverDocumentOnScroll();\n    this.initExistingDocuments();\n    this.initModifiers();\n  }\n\n  /**\n   * Whenever the mouse moves, store its position.\n   */\n  initStoreMousePosition() {\n    document.addEventListener('mousemove', this.storeMousePosition.bind(this), listener.passive);\n  }\n\n  /**\n   * The firing rate of the listener needs to be slowed down because the\n   * `scroll` event is rapidly firing. Not doing so will decrease the\n   * performance significantly.\n   *\n   * It’s sufficient to debounce the listener. This means the listener will\n   * be triggered **once** after the event has stopped firing.\n   */\n  initHoverDocumentOnScroll() {\n    document.addEventListener(\n      'scroll',\n      debounce(this.handleScrollDocumentHover.bind(this), 25),\n      listener.passive\n    );\n  }\n\n  /**\n   * Initialize mouse and scroll interactions for existing documents.\n   */\n  initExistingDocuments() {\n    const documents = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documents.forEach(docNode => {\n      this.initMouseInteraction(docNode);\n      const scrollbox = docNode.querySelector(config.selector.scrollbox);\n      if (scrollbox) {\n        this.initScrollInteraction(scrollbox);\n      }\n    });\n  }\n\n  /**\n   * Wrapper for initializing all event listeners related to mouse interaction.\n   *\n   * @param {HTMLElement} docNode\n   */\n  initMouseInteraction(docNode) {\n    docNode.addEventListener('wheel', this.handleWheelInteraction.bind(this), listener.active);\n    docNode.addEventListener('click', this.handleClickSelect.bind(this), listener.passive);\n    docNode.addEventListener('mousemove', this.handleMoveHover.bind(this), listener.passive);\n  }\n\n  /**\n   * Wrapper for initializing all event listeners related to scroll interaction.\n   *\n   * @param {HTMLElement} scrollboxNode\n   */\n  initScrollInteraction(scrollboxNode) {\n    scrollboxNode.addEventListener(\n      'scroll',\n      debounce(this.handleScrollDocumentHover.bind(this), 25),\n      listener.passive\n    );\n  }\n\n  /**\n   * Stores the position of the mouse cursor.\n   *\n   * @param {MouseEvent} event\n   */\n  storeMousePosition(event) {\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n  }\n\n  /**\n   * Finds and hovers the item/document under the current mouse cursor position.\n   */\n  handleScrollDocumentHover() {\n    const targetElement = document.elementFromPoint(this.mouseX, this.mouseY);\n    const docElement = targetElement.closest(config.selector.doc);\n\n    if (!docElement) {\n      return;\n    }\n\n    const doc = this.slidehub.documents.get(docElement.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    const itemElement = targetElement.closest(config.selector.item);\n    if (itemElement) {\n      doc.hoverItem(itemElement);\n    }\n  }\n\n  /**\n   * Handles wheel navigation.\n   *\n   * @param {WheelEvent} event\n   */\n  handleWheelInteraction(event) {\n    // Don’t handle scrolling on elements that are not inside a document\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    const ratio = Math.abs(event.deltaX / event.deltaY);\n    const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\n\n    // When scrolling vertically, only trigger navigation when modifier is pressed\n    if (scrollingDirection === scrolling.vertical && event.shiftKey) {\n      // Prevent vertical scrolling\n      event.preventDefault();\n\n      const delta = event[scrollingDirection.delta];\n\n      doc.navigateItem.by(Math.sign(delta));\n    }\n  }\n\n  /**\n   * Selects documents/items on click.\n   *\n   * @param {MouseEvent} event\n   */\n  handleClickSelect(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.selectDocument(doc);\n\n    if (config.keepSelectedPageInFirstColumn) {\n      return;\n    }\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.selectItem(item);\n    }\n  }\n\n  /**\n   * Highlights documents/items on hover.\n   *\n   * @param {MouseEvent} event\n   */\n  handleMoveHover(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.hoverItem(item);\n    }\n  }\n\n  /**\n   * Wrapper for enabling all event listeners related to modifier handling.\n   */\n  initModifiers() {\n    document.addEventListener('keydown', this.onModifierDown.bind(this), listener.passive);\n    document.addEventListener('keyup', this.onModifierUp.bind(this), listener.passive);\n    window.addEventListener('blur', this.onModifierBlur.bind(this), listener.passive);\n  }\n\n  /**\n   * Displays a special cursor when the modifier is pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierDown(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'ew-resize');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the modifier is no longer pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierUp(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the user somehow leaves the page.\n   */\n  onModifierBlur() {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n};\n","import { listener } from '../util/passive-event-listener';\n\nexport { SlidehubKeyboardInteraction };\n\nconst controlKeyNames = {\n  33: 'pageUp',\n  34: 'pageDown',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n};\n\n/**\n * Keyboard Interaction.\n */\nclass SlidehubKeyboardInteraction {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n\n    this.controlKey = {\n      homeKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.left(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      endKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.right(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      arrowLeft: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.left(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowRight: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.right(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowUp: {\n        trigger: event => {\n          this.slidehub.navigateDocument.up(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowDown: {\n        trigger: event => {\n          this.slidehub.navigateDocument.down(event.shiftKey ? 3 : 1);\n        }\n      },\n      pageUp: {\n        trigger: () => {\n          this.slidehub.navigateDocument.up(3);\n        }\n      },\n      pageDown: {\n        trigger: () => {\n          this.slidehub.navigateDocument.down(3);\n        }\n      }\n    };\n  }\n\n  start() {\n    document.addEventListener('keydown', this.handleKeyboardInput.bind(this), listener.active);\n  }\n\n  /**\n   * Handles keyboard interactions with documents and items.\n   *\n   * @param {KeyboardEvent} event\n   */\n  handleKeyboardInput(event) {\n    if (event.keyCode in controlKeyNames) {\n      event.preventDefault();\n      const keyName = controlKeyNames[event.keyCode];\n      this.controlKey[keyName].trigger(event);\n    }\n  }\n};\n","import { listener } from '../util/passive-event-listener';\n\nexport { enableModals };\n\n/**\n * Modal window.\n *\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\n * https://github.com/gdkraus/accessible-modal-dialog\n */\n\nlet lastFocusedElement;\n\nfunction enableModals() {\n  const buttonArea = document.querySelector('[data-slidehub-modal-buttons]');\n\n  if (!buttonArea) {\n    return;\n  }\n\n  const controlsOpenButton = createOpenButton('Help');\n  buttonArea.insertAdjacentHTML('beforeend', controlsOpenButton);\n\n  const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\n  modalOpenButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const targetModal = event.currentTarget.dataset.targetModal;\n      const modal = document.querySelector(`[data-modal-${targetModal}]`);\n      openModal(modal);\n    });\n  });\n\n  const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\n  modalCloseButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const modal = event.currentTarget.closest('.modal');\n      closeModal(modal);\n    });\n  });\n}\n\nfunction createOpenButton(title) {\n  return `<button class=\"button button--subtle\" data-target-modal=\"${title.toLowerCase()}\">\n    ${title}\n  </button>`;\n}\n\n/**\n * Opens the modal.\n *\n * @param {Element} modal\n */\nfunction openModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  // Store last focused element\n  lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  moveFocusToModal(modal);\n\n  // Setup event listeners\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\n  modal.addEventListener('keydown', trapTabKey, listener.active);\n  modal.addEventListener('click', closeOnBackground, listener.passive);\n}\n\n/**\n * Move focus to the first focusable element inside the modal.\n *\n * @param {Element} modal\n */\nfunction moveFocusToModal(modal) {\n  const focusable = getFocusableElements(modal);\n  focusable[0].focus();\n}\n\n/**\n * Closes the modal.\n *\n * @param {Element} modal\n */\nfunction closeModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  // Clean up event listeners\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\n\n  // Restore previously focused element\n  lastFocusedElement.focus();\n}\n\n/**\n * Closes the modal when clicking on the background.\n *\n * @param {MouseEvent} event\n */\nfunction closeOnBackground(event) {\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\n  if (modal === event.target) {\n    closeModal(modal);\n  }\n}\n\n/**\n * Closes the modal when pressing the <kbd>Esc</kbd>.\n *\n * @param {KeyboardEvent} event\n */\nfunction closeOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\n  }\n}\n\n/**\n * Make it impossible to focus an element outside the modal\n *\n * @param {KeyboardEvent} event\n */\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabable[0]) {\n      tabable[tabable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabable[tabable.length - 1]) {\n      tabable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * Selects all focusable elements currently present in the DOM/\n *\n * @param {Element|document} ancestor\n * @returns {Array}\n */\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nconst focusableElementsSelector =\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\n","export { SlidehubPlugin };\n\n/**\n * Abstract base class for Slidehub plugins.\n *\n * Ensures that classes extending `SlidehubPlugin` implement an `enable()` and\n * `disable()` method.\n *\n * **Usage**:\n *\n * ```\n * import { SlidehubPlugin } from '../core/SlidehubPlugin';\n *\n * class MyPlugin extends SlidehubPlugin {\n *    constructor(slidehub) {\n *      super(\n *        slidehub,\n *        'MyPlugin',\n *        'Description of your plugin'\n *      );\n *    }\n *\n *    enable() {\n *      // Implement an enable routine\n *    }\n *\n *    disable() {\n *      // Implement an disable routine\n *    }\n * };\n * ```\n */\nclass SlidehubPlugin {\n  constructor(slidehub, name, description) {\n    this.slidehub = slidehub;\n    this.name = name;\n    this.description = description;\n    this.enabled = false;\n    this.toggleButton = null;\n\n    if (new.target === SlidehubPlugin) {\n      throw new TypeError('Cannot construct SlidehubPlugin instances directly');\n    }\n\n    if (this.enable === SlidehubPlugin.prototype.enable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own enable method.');\n    }\n\n    if (this.disable === SlidehubPlugin.prototype.disable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own disable method.');\n    }\n  }\n\n  enable() {\n    this.enabled = true;\n\n    if (!this.toggleButton) {\n      this.toggleButton = this.createToggleButton();\n      if (this.toggleButton) {\n        this.toggleButton.addEventListener('click', this.handleToggleButton.bind(this));\n      }\n    }\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  /**\n   * Creates a feature toggle button in the user interface.\n   *\n   * @returns {Element|null}\n   */\n  createToggleButton() {\n    const fieldset = document.querySelector('.features-fieldset');\n\n    if (!fieldset) {\n      return null;\n    }\n\n    const toggleButtonMarkup = `\n      <div class=\"form-group form-group--switch\">\n        <span class=\"form-label\" id=\"${this.name}-label\">${this.description}</span>\n        <button\n          role=\"switch\"\n          aria-checked=\"false\"\n          aria-labelledby=\"${this.name}-label\"\n          data-feature=\"${this.name}\"\n        >\n          <span class=\"state state--true\" aria-label=\"on\"></span>\n          <span class=\"state state--false\" aria-label=\"off\"></span>\n        </button>\n      </div>\n    `;\n\n    fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\n\n    const button = fieldset.querySelector(`[data-feature=\"${this.name}\"]`);\n    button.setAttribute('aria-checked', this.enabled.toString());\n\n    return button;\n  }\n\n  /**\n   * Toggles a toggle button and triggers its associated action.\n   *\n   * @param {MouseEvent} event\n   */\n  handleToggleButton(event) {\n    const button = event.currentTarget;\n\n    if (button instanceof HTMLElement) {\n      const isPressed = button.getAttribute('aria-checked') === 'true';\n      button.setAttribute('aria-checked', String(!isPressed));\n\n      this.triggerButtonAction(button, 'aria-checked');\n    }\n  }\n\n  /**\n   * Triggers the associated action of a toggle button.\n   *\n   * @param {HTMLElement} button\n   * @param {'aria-checked'|'aria-pressed'} stateAttr\n   */\n  triggerButtonAction(button, stateAttr) {\n    switch (true) {\n      case button.hasAttribute('data-feature'):\n        if (button.getAttribute(stateAttr) === 'true') {\n          this.enable();\n        } else {\n          this.disable();\n        }\n        break;\n\n      default:\n        console.warn('No action is associated with the control', button);\n        break;\n    }\n  }\n};\n\n/* class MyPlugin extends SlidehubPlugin {\n  constructor() {\n    super();\n  }\n\n  enable() {\n    console.log('MyPlugin.enable');\n    super.enable();\n  }\n\n  disable() {\n    console.log('MyPlugin.disable');\n    super.disable();\n  }\n};\n\nconst x = new MyPlugin();\nx.enable(); */\n","import { SlidehubPlugin } from '../core/SlidehubPlugin';\nimport { listener } from '../util/passive-event-listener';\nimport { config } from '../config';\n\nexport { DocumentSourceLinker };\n\n/**\n * Item Linking.\n *\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\n * or double-clicking with a pointer device.\n */\nclass DocumentSourceLinker extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Links documents to their source document';\n    super(slidehub, 'DocumentSourceLinker', description);\n\n    this.boundEnterHandler = this.enterHandler.bind(this);\n    this.boundDoubleClickHandler = this.doubleClickHandler.bind(this);\n  }\n\n  enable() {\n    document.addEventListener('keydown', this.boundEnterHandler, listener.passive);\n    document.addEventListener('dblclick', this.boundDoubleClickHandler, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    document.removeEventListener('keydown', this.boundEnterHandler);\n    document.removeEventListener('dblclick', this.boundDoubleClickHandler);\n    super.disable();\n  }\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  enterHandler(event) {\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    const openInNewTab = event.ctrlKey;\n    const doc = this.slidehub.selectedDocument;\n    DocumentSourceLinker.handleOpenIntent(doc.node, doc.selectedItemNode, openInNewTab);\n  }\n\n  /**\n   * @param {MouseEvent} event\n   */\n  doubleClickHandler(event) {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const itemNode = event.target.closest(config.selector.item);\n    const docNode = itemNode.closest(config.selector.doc);\n    if (docNode) {\n      const openInNewTab = true;\n      DocumentSourceLinker.handleOpenIntent(docNode, itemNode, openInNewTab);\n    }\n  }\n\n  /**\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static handleOpenIntent(docNode, item, openInNewTab) {\n    // Focusable elements have a default behavior (e.g. activating a link)\n    // That behavior shall not be altered/extended.\n    if (isInteractive(item)) {\n      return;\n    }\n\n    DocumentSourceLinker.openDocumentSource(docNode, item, openInNewTab);\n  }\n\n  /**\n   * Opens the document source for the current selected document in the browser.\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static openDocumentSource(docNode, item, openInNewTab) {\n    const itemIndex = item.dataset.page;\n    const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n    const itemSource = docNode.dataset.docSource + fragment;\n\n    if (openInNewTab) {\n      window.open(itemSource);\n    } else {\n      window.location.href = itemSource;\n    }\n  }\n};\n\n/**\n * Returns true if element is interactive, false otherwise.\n *\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (!element.hasAttribute('href')) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.hasAttribute('contenteditable')) {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n","export { getFragmentIdentifier };\n\n/**\n * Returns the fragment identifier of a URL if it is present.\n *\n * @param {String} url\n * @returns {String|null} the fragment identifier of a URL if it is present,\n *                        `null` otherwise.\n */\nfunction getFragmentIdentifier(url) {\n  const hashPosition = url.indexOf('#');\n  if (hashPosition > 0) {\n    return url.substring(hashPosition + 1);\n  }\n\n  return null;\n}\n","import { config } from '../config';\nimport { parseDocumentsData, parseDocumentsMarkup } from './SlidehubParser';\nimport { SlidehubDocumentLoader } from './SlidehubDocumentLoader';\nimport { SlidehubImageLoader } from './SlidehubImageLoader';\nimport { SlidehubMouseInteraction } from './SlidehubMouseInteraction';\nimport { SlidehubKeyboardInteraction } from './SlidehubKeyboardInteraction';\nimport { DocumentNavigator } from './DocumentNavigator';\nimport { enableModals } from './Modal';\n\nimport * as plugin from '../plugins/namespace';\n\nimport { debounce } from '../util/debounce';\nimport { getOuterWidth } from '../util/getOuterWidth';\nimport { getFragmentIdentifier } from '../util/getFragmentIdentifier';\n\nexport { Slidehub };\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Main Slidehub prototype.\n */\nclass Slidehub {\n  /**\n   * @public\n   */\n  constructor() {\n    this._node = null;\n    this._documents = null;\n    this._selectedDocument = null;\n    this._hoveredDocument = null;\n    this._documentNavigator = null;\n\n    this._itemWidth = null;\n    this._visibleItems = null;\n    this._scrollboxWidth = null;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this._node = this.getNode();\n      this._documents = this.getDocuments();\n\n      let documentLoader;\n\n      if (!config.staticContent) {\n        documentLoader = new SlidehubDocumentLoader(this);\n        documentLoader.insertDocumentFrames();\n      }\n\n      const targetDoc = this.determineTargetDocument();\n\n      if (!config.staticContent) {\n        documentLoader.start(targetDoc);\n      }\n\n      this.selectDocument(targetDoc);\n      this.jumpToTargetDocument(targetDoc);\n\n      this.start();\n      this.loadPlugins();\n    });\n  }\n\n  /**\n   * Sets up the main Slidehub HTML element.\n   *\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @private\n   */\n  getNode() {\n    const existingNode = document.querySelector(config.selector.slidehub);\n    const slidehubNode = existingNode ? existingNode : this.createNode();\n\n    // Expose select/highlight color overrides to the DOM.\n    // This allows CSS to use inside of a rule declaration.\n    if (config.selectColor && config.selectColor !== '') {\n      slidehubNode.style.setProperty('--c-selected', config.selectColor);\n    }\n\n    if (config.highlightColor && config.highlightColor !== '') {\n      slidehubNode.style.setProperty('--c-highlighted', config.highlightColor);\n    }\n\n    return slidehubNode;\n  }\n\n  /**\n   * Hooks the Slidehub container element into the DOM.\n   *\n   * Requires an element with a custom attribute `data-slidehub` to be present\n   * in the DOM. A new <div> element will be created inside of it. No existing\n   * markup will be changed or removed.\n   *\n   * @returns {HTMLDivElement} the empty Slidehub DOM node.\n   * @private\n   */\n  createNode() {\n    const slidehubNode = document.createElement('div');\n    slidehubNode.classList.add(config.selector.slidehub.slice(1));\n\n    document.querySelector('[data-slidehub]').appendChild(slidehubNode);\n\n    return slidehubNode;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the internal documents data structure.\n   */\n  getDocuments() {\n    return config.staticContent ? parseDocumentsMarkup(this) : parseDocumentsData(this);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   */\n  determineTargetDocument() {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n\n    let targetDoc;\n\n    if (this.documents.has(fragmentIdentifier)) {\n      targetDoc = this.documents.get(fragmentIdentifier);\n    } else if (document.documentElement.scrollTop === 0) {\n      // If the viewport was not scrolled already, just start from the top\n      targetDoc = this.documents.values().next().value;\n    } else {\n      // The page was scrolled (e.g. the page was reloaded with a non-zero scroll position)\n      // In this case, Slidehub attempts to load the document in the center of the view.\n      const slidehubWidth = this.node.clientWidth;\n      const centerElement = document.elementFromPoint(slidehubWidth / 2, window.innerHeight / 2);\n      const centerDocument = centerElement.closest(config.selector.doc);\n      targetDoc = this.documents.get(centerDocument.id);\n    }\n\n    return targetDoc;\n  }\n\n  jumpToTargetDocument(targetDoc) {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n    if (document.documentElement.scrollTop !== 0 || fragmentIdentifier) {\n      const centerOffset = (window.innerHeight - targetDoc.node.clientHeight) / 2;\n      // After a short while, scroll the viewport to center the document\n      // In the future, `Element.scrollIntoView({ block: 'center' })` should work\n      setTimeout(() => window.scrollBy(0, -centerOffset), 200);\n    }\n  }\n\n  /**\n   * Initializes all core functionality.\n   *\n   * @private\n   */\n  start() {\n    this.navigateDocument = new DocumentNavigator(this);\n\n    this.exposeDocumentInfo();\n\n    this.imageLoader = new SlidehubImageLoader(this);\n    this.imageLoader.start();\n\n    this.mouseInteraction = new SlidehubMouseInteraction(this);\n    this.mouseInteraction.start();\n\n    const keyboardInteraction = new SlidehubKeyboardInteraction(this);\n    keyboardInteraction.start();\n\n    this.observeDocumentLoaded();\n    enableModals();\n  }\n\n  /**\n   * Observes documents being loaded\n   */\n  observeDocumentLoaded() {\n    const documentLoadedObserver = new MutationObserver(this.mutationHandler.bind(this));\n\n    const documentNodes = Array.from(this.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => {\n      documentLoadedObserver.observe(docNode, { childList: true });\n    });\n  }\n\n  /**\n   *\n   * @param {Array<MutationRecord>} mutationsList\n   */\n  mutationHandler(mutationsList) {\n    for (const mutation of mutationsList) {\n      if (mutation.addedNodes.length !== 0) {\n        const docNode = mutation.target;\n        this.imageLoader.startImageObserver(docNode);\n        const scrollbox = docNode.querySelector(config.selector.scrollbox);\n        if (scrollbox) {\n          this.mouseInteraction.initScrollInteraction(scrollbox);\n        }\n      }\n    }\n  }\n\n  /**\n   * Loads optional plugins.\n   *\n   * @private\n   */\n  loadPlugins() {\n    const documentSourceLinker = new plugin.DocumentSourceLinker(this);\n    documentSourceLinker.enable();\n\n    const pageWidgetPlugin = new plugin.PageWidgetPlugin(this);\n    pageWidgetPlugin.enable();\n  }\n\n  /**\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @public\n   */\n  get node() {\n    return this._node;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the Slidehub documents data structure.\n   * @public\n   */\n  get documents() {\n    return this._documents;\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently selected document.\n   * @public\n   */\n  get selectedDocument() {\n    return this._selectedDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new selected document.\n   * @private\n   */\n  set selectedDocument(doc) {\n    this._selectedDocument = doc;\n  }\n\n  /**\n   * Sets a new selected document.\n   *\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  selectDocument(doc) {\n    if (this.selectedDocument === doc) {\n      return;\n    }\n\n    // Remove selected class from currently selected document\n    if (this.selectedDocument) {\n      this.selectedDocument.node.classList.remove(selectClassName);\n    }\n\n    // Set new selected document\n    this.selectedDocument = doc;\n    this.selectedDocument.node.classList.add(selectClassName);\n\n    const slidehubSelectDocumentEvent = new CustomEvent('SlidehubSelectDocument', {\n      detail: { doc }\n    });\n    this.node.dispatchEvent(slidehubSelectDocumentEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently hovered document.\n   * @public\n   */\n  get hoveredDocument() {\n    return this._hoveredDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @private\n   */\n  set hoveredDocument(doc) {\n    this._hoveredDocument = doc;\n  }\n\n  /**\n   * Sets a new hovered document after unsetting the old one.\n   *\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @public\n   */\n  hoverDocument(doc) {\n    if (this.hoveredDocument === doc) {\n      return;\n    }\n\n    this.unhoverDocument();\n\n    // Set new hovered document\n    this.hoveredDocument = doc;\n    this.hoveredDocument.node.classList.add(hoverClassName);\n\n    const slidehubHoverDocumentEvent = new CustomEvent('SlidehubHoverDocument', {\n      detail: { doc }\n    });\n    this.node.dispatchEvent(slidehubHoverDocumentEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered document.\n   *\n   * **Side effect**: Also removes the hover from the currently hovered item\n   * within that document.\n   *\n   * @public\n   */\n  unhoverDocument() {\n    // Remove hovered class from currently hovered document\n    if (this.hoveredDocument) {\n      this.hoveredDocument.unhoverItem();\n      this.hoveredDocument.node.classList.remove(hoverClassName);\n      this.hoveredDocument = null;\n    }\n  }\n\n  /**\n   * @returns {DocumentNavigator} the document navigator object.\n   * @public\n   */\n  get navigateDocument() {\n    return this._documentNavigator;\n  }\n\n  /**\n   * @param {DocumentNavigator} documentNavigator\n   * @private\n   */\n  set navigateDocument(documentNavigator) {\n    this._documentNavigator = documentNavigator;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemWidth() {\n    return this._itemWidth;\n  }\n\n  /**\n   * @param {Number} itemWidth\n   * @private\n   */\n  set itemWidth(itemWidth) {\n    this._itemWidth = itemWidth;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get visibleItems() {\n    return this._visibleItems;\n  }\n\n  /**\n   * @param {Number} visibleItems\n   * @private\n   */\n  set visibleItems(visibleItems) {\n    this._visibleItems = visibleItems;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get scrollboxWidth() {\n    return this._scrollboxWidth;\n  }\n\n  /**\n   * @param {Number} scrollboxWidth\n   * @private\n   */\n  set scrollboxWidth(scrollboxWidth) {\n    this._scrollboxWidth = scrollboxWidth;\n  }\n\n  /**\n   * Wrapper method for all expose methods.\n   *\n   * @private\n   */\n  exposeDocumentInfo() {\n    this.exposeItemWidth();\n    this.exposeScrollboxWidth();\n    this.exposeNumberOfVisibleItems();\n\n    // Recalculate the scrollbox width on resize.\n    window.addEventListener('resize', debounce(() => {\n      this.exposeItemWidth();\n      this.exposeScrollboxWidth();\n      this.exposeNumberOfVisibleItems();\n    }, 200));\n  }\n\n  /**\n   * Exposes the current outer width of an item to the DOM.\n   *\n   * @private\n   */\n  exposeItemWidth() {\n    const item = this.selectedDocument.node.querySelector(config.selector.item);\n    const itemOuterWidth = getOuterWidth(item);\n\n    if (this.itemWidth !== itemOuterWidth) {\n      this.itemWidth = itemOuterWidth;\n\n      this.node.style.setProperty('--page-outer-width', this.itemWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current `clientWidth` of the selected scrollbox to the DOM.\n   *\n   * @private\n   */\n  exposeScrollboxWidth() {\n    const scrollboxNode = this.selectedDocument.node.querySelector(config.selector.scrollbox);\n\n    if (this.scrollboxWidth !== scrollboxNode.clientWidth) {\n      this.scrollboxWidth = scrollboxNode.clientWidth;\n\n      this.node.style.setProperty('--scrollbox-width', this.scrollboxWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current number of visible items in a document to the DOM.\n   *\n   * @private\n   */\n  exposeNumberOfVisibleItems() {\n    this.visibleItems = Math.floor(this.scrollboxWidth / this.itemWidth);\n  }\n};\n","/**\n * Application entry point.\n */\n\nimport './lib/intersection-observer';\n\nimport { Slidehub } from './core/Slidehub';\n\n/**\n * An Immediately Invoked Function Expression, called like that because it’s\n * immediately executed when a JavaScript file like this is sourced.\n *\n * Starts the engines for Slidehub.\n */\n(function () {\n  new Slidehub();\n})();\n","import { config } from '../config';\n\nexport { SlidehubDocumentLoader };\n\n/**\n * Document Loader.\n *\n * Loads documents dynamically when needed.\n */\nclass SlidehubDocumentLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.batchSize = 5;\n    this.prevIterator = null;\n    this.nextIterator = null;\n    this.observer = new IntersectionObserver(this.documentObservationHandler.bind(this));\n  }\n\n  start(targetDoc) {\n    this.loadTargetDocument(targetDoc);\n\n    // Load one batch in both directions\n    this.loadBatch(this.nextIterator, 'beforeend', this.batchSize);\n    this.loadBatch(this.prevIterator, 'afterbegin', this.batchSize);\n  }\n\n  /**\n   * Prepares the DOM with empty frames for all documents.\n   *\n   * @public\n   */\n  insertDocumentFrames() {\n    let documentFramesMarkup = '';\n\n    for (const doc of this.slidehub.documents.values()) {\n      const documentSource = `${config.assets.documents}/${doc.name}`;\n      documentFramesMarkup += `<div\n        class=\"${config.selector.doc.slice(1)}\"\n        id=\"${doc.name}\"\n        data-doc-source=\"${documentSource}\"\n        style=\"--pages: ${doc.imageCount + (config.metaSlide ? 1 : 0)}\"\n      ></div>`;\n    }\n\n    this.slidehub.node.insertAdjacentHTML('beforeend', documentFramesMarkup);\n  }\n\n  /**\n   * Starts off the document loading process. Determines which document should be\n   * loaded and sets up two iterators. They will be used to load new documents\n   * when needed.\n   *\n   * @returns {SlidehubDocument}\n   */\n  loadTargetDocument(targetDoc) {\n    // Obtain two iterators as pointers for which documents need to be\n    // loaded next.\n    this.prevIterator = this.slidehub.documents.iteratorFor(targetDoc.name).reverse();\n    this.nextIterator = this.slidehub.documents.iteratorFor(targetDoc.name);\n\n    // The target document will be loaded next by retrieving the iterator result\n    // from nextIterator. Since prevIterator points to the same document, it\n    // needs to be advanced manually, so it can’t be used to load that document\n    // again.\n    this.prevIterator.next();\n\n    return this.loadDocument(this.nextIterator.next(), 'beforeend');\n  }\n\n  /**\n   * A wrapper for calling loadDocument multiple times.\n   *\n   * @param {IterableIterator} documentIterable\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @param {number} batchSize\n   */\n  loadBatch(documentIterable, insertPosition, batchSize) {\n    while (batchSize--) {\n      this.loadDocument(documentIterable.next(), insertPosition);\n    }\n  }\n\n  /**\n   * Loads a new document by creating and injecting the markup into the DOM.\n   * Once this is done, the document is marked as loaded.\n   *\n   * @param {IteratorResult} iteratorResult\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @returns {SlidehubDocument}\n   */\n  loadDocument(iteratorResult, insertPosition) {\n    if (iteratorResult.done) {\n      return;\n    }\n\n    const doc = iteratorResult.value[1];\n    if (doc.loaded) {\n      console.warn(doc.name, 'was already loaded. Skipping.');\n      return;\n    }\n\n    doc.insertPosition = insertPosition;\n    if (doc.insertPosition === 'afterbegin') {\n      doc.iterator = this.prevIterator;\n    } else {\n      doc.iterator = this.nextIterator;\n    }\n\n    console.info(`Loading ${doc.name}.`);\n\n    doc.load();\n\n    this.observer.observe(doc.node);\n\n    return doc;\n  }\n\n  /**\n   * Handles lazy-loading documents.\n   *\n   * @param {Array<IntersectionObserverEntry>} entries\n   * @param {IntersectionObserver} observer\n   */\n  documentObservationHandler(entries, observer) {\n    for (const entry of entries) {\n      if (entry.isIntersecting) {\n        const doc = this.slidehub.documents.get(entry.target.id);\n        this.loadDocument(doc.iterator.next(), doc.insertPosition);\n\n        observer.unobserve(entry.target);\n      }\n    }\n  }\n};\n","/**\n * Parses the document data.\n */\n\nimport { config } from '../config';\nimport { documentsData } from '../documents-data';\nimport { ReverseIterableMap } from '../lib/reverse-iterable-map';\nimport { SlidehubDocument } from './SlidehubDocument';\n\nexport { parseDocumentsData, parseDocumentsMarkup };\n\n/**\n * Parses the initial document data into a more managable data structure.\n * The resulting structure keeps track of a documents’ loaded state.\n *\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsData(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  documentsData.forEach(([name, imageCount]) => {\n    const doc = new SlidehubDocument(slidehub, name, imageCount);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n\n/**\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsMarkup(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  const documentNodes = slidehub.node.querySelectorAll(config.selector.doc);\n  documentNodes.forEach(docNode => {\n    const imageCount = docNode.querySelectorAll('img').length - 1;\n    const doc = new SlidehubDocument(slidehub, docNode.id, imageCount);\n    doc.setNode(docNode);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n","import { clamp } from '../util/clamp';\n\nexport { DocumentNavigator };\n\n/**\n * Document Navigator.\n *\n * **Usage**:\n *\n * ```\n * const navigateDocument = new DocumentNavigator(slidehub);\n * navigateDocument.up(3);\n * navigateDocument.down(1);\n * ```\n */\nclass DocumentNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @public\n   */\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.iterator = null;\n  }\n\n  /**\n   * Navigate document up (in reverse document loading order, if that makes sense).\n   *\n   * @param {Number} distance\n   * @public\n   */\n  up(distance) {\n    this.iterator = this.slidehub.documents.iteratorFor(this.slidehub.selectedDocument.name).reverse();\n    this.by(distance);\n  }\n\n  /**\n   * Navigate document down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  down(distance) {\n    this.iterator = this.slidehub.documents.iteratorFor(this.slidehub.selectedDocument.name);\n    this.by(distance);\n  }\n\n  /**\n   * Navigates through documents by a certain distance. With `distance = 3`,\n   * two documents would be skipped, arriving at the third document.\n   *\n   * @param {number} distance\n   * @private\n   */\n  by(distance) {\n    this.iterator.next();\n\n    let iteratorResult;\n    for (let i = 0; i < distance; i++) {\n      iteratorResult = this.iterator.next();\n      if (iteratorResult.done) {\n        return;\n      }\n    }\n\n    const targetDoc = iteratorResult.value[1];\n    this.slidehub.selectDocument(targetDoc);\n    this.scrollDocumentIntoView(targetDoc);\n  }\n\n  /**\n   * @param {SlidehubDocument} doc\n   */\n  scrollDocumentIntoView(doc) {\n    const offset = this.getVerticalOffsets(doc.node);\n    const extraPart = doc.node.clientHeight / 2;\n    if (offset.top < 0) {\n      window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\n    } else if (offset.bottom < 0) {\n      window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\n    }\n  }\n\n  /**\n   * Finds the target document given a navigation distance.\n   *\n   * @param {number} distance\n   * @returns {SlidehubDocument}\n   */\n  getTargetDoc(distance) {\n    const documentNodes = this.getDocumentNodes();\n    const targetDocumentPos = clamp(this.selectedDocPos + distance, 0, documentNodes.length - 1);\n    const targetDocumentNode = documentNodes.item(targetDocumentPos);\n\n    return this.slidehub.documents.get(targetDocumentNode.id);\n  }\n\n  /**\n   * Returns an object containing vertical offsets for an element with the\n   * viewport.\n   *\n   * @param {HTMLElement} element\n   * @returns {object}\n   */\n  getVerticalOffsets(element) {\n    const docEl = document.documentElement;\n    return {\n      top: element.offsetTop - window.scrollY,\n      bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\n    };\n  }\n\n  /**\n   * Returns all Slidehub documents as a HTMLCollection.\n   *\n   * @returns {HTMLCollection}\n   */\n  getDocumentNodes() {\n    return this.slidehub.selectedDocument.node.parentElement.children;\n  }\n};\n","import { SlidehubPlugin } from '../core/SlidehubPlugin';\nimport { listener } from '../util/passive-event-listener';\n\nexport { PageWidgetPlugin };\n\nclass PageWidgetPlugin extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Displays the page numbers';\n    super(slidehub, 'PageWidgetPlugin', description);\n\n    this.boundExposeItemCount = this.exposeItemCount.bind(this);\n    this.boundExposeCurrentItem = this.exposeCurrentItem.bind(this);\n    this.widgetHookNode = document.querySelector('[data-slidehub-page-widget]');\n    this.currentPageNode = null;\n    this.totalPagesNode = null;\n  }\n\n  enable() {\n    this.insertWidgetMarkup();\n    this.slidehub.node.addEventListener('SlidehubHoverDocument', this.boundExposeItemCount, listener.passive);\n    this.slidehub.node.addEventListener('SlidehubHoverItem', this.boundExposeCurrentItem, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    this.removeWidgetMarkup();\n    this.slidehub.node.removeEventListener('SlidehubHoverDocument', this.boundExposeItemCount);\n    this.slidehub.node.removeEventListener('SlidehubHoverItem', this.boundExposeCurrentItem);\n    super.disable();\n  }\n\n  insertWidgetMarkup() {\n    const widgetMarkup = `<div class=\"sh-page-widget\" aria-hidden=\"hidden\">\n      Page\n      <span class=\"sh-page-widget__current-page\" data-slidehub-current-page>0</span><span data-slidehub-total-pages>0</span>\n    </div>`;\n\n    this.widgetHookNode.insertAdjacentHTML('beforeend', widgetMarkup);\n\n    const widgetNode = this.widgetHookNode.firstElementChild;\n    this.currentPageNode = widgetNode.firstElementChild;\n    this.totalPagesNode = widgetNode.lastElementChild;\n\n    this.totalPagesNode.textContent = this.slidehub.selectedDocument.itemCount();\n    this.currentPageNode.textContent = this.slidehub.selectedDocument.selectedItemNode.dataset.page;\n  }\n\n  removeWidgetMarkup() {\n    while (this.widgetHookNode.lastChild) {\n      this.widgetHookNode.removeChild(this.widgetHookNode.lastChild);\n    }\n\n    this.totalPagesNode = null;\n    this.currentPageNode = null;\n  }\n\n  exposeItemCount(event) {\n    this.totalPagesNode.textContent = event.detail.doc.itemCount();\n  }\n\n  exposeCurrentItem(event) {\n    this.currentPageNode.textContent = event.detail.itemNode.dataset.page;\n  }\n}\n","export { getOuterWidth };\n\n/**\n * Calculates the outer width of an element. In the context of this\n * application, the outer width of an element is its `offsetWidth` plus\n * left and right margins.\n *\n * @param {HTMLElement} element\n * @returns {Number} the outer width of `element`.\n */\nfunction getOuterWidth(element) {\n  const style = window.getComputedStyle(element);\n  const marginLeft = parseInt(style.marginLeft);\n  const marginRight = parseInt(style.marginRight);\n\n  return marginLeft + element.offsetWidth + marginRight;\n}\n"],"sourceRoot":""}