{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/config.js","webpack:///./src/js/documents-data.js","webpack:///./src/js/lib/reverse-iterable-map.js","webpack:///./src/js/util/clamp.js","webpack:///./src/js/core/ItemNavigator.js","webpack:///./src/js/core/SlidehubDocument.js","webpack:///./src/js/core/SlidehubImageLoader.js","webpack:///./src/js/util/passive-event-listener.js","webpack:///./src/js/core/SlidehubMouseInteraction.js","webpack:///./src/js/core/SlidehubKeyboardInteraction.js","webpack:///./src/js/core/Modal.js","webpack:///./src/js/core/SlidehubPlugin.js","webpack:///./src/js/plugins/DocumentSourceLinker.js","webpack:///./src/js/util/getFragmentIdentifier.js","webpack:///./src/js/core/Slidehub.js","webpack:///./src/js/app.js","webpack:///./src/js/core/SlidehubDocumentLoader.js","webpack:///./src/js/core/SlidehubParser.js","webpack:///./src/js/core/DocumentNavigator.js","webpack:///./src/js/util/debounce.js","webpack:///./src/js/util/getOuterWidth.js","webpack:///./src/js/lib/intersection-observer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","0","t","e","config","assets","documents","images","staticContent","metaSlide","keepSelectedPageInFirstColumn","preserveAspectRatio","selectColor","highlightColor","selector","slidehub","doc","scrollbox","itemContainer","item","documentsData","ReverseIterableMap","[object Object]","iterable","this","_map","Map","_first","_last","key","set","Symbol","toStringTag","first","node","last","size","clear","has","ReverseIterableMapNode","add","prev","next","delete","callback","thisArg","entries","reverse","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","done","_key","_value","_next","_prev","clamp","min","max","Math","ItemNavigator_ItemNavigator","_doc","_itemPos","_selectedItemPos","distance","by","vector","newSelectedItemPos","determineNewSelectedItemPos","selectedItemPos","updateSelectedItemPos","Number","isInteger","itemPos","updateItemPos","round","allItemsVisible","newItemPos","determineNewItemPos","scrollboxNode","scrollLeft","itemWidth","visibleItems","invalidItemPositions","itemCount","selectItem","items","numberOfVisibleItems","selectClassName","hoverClassName","SlidehubDocument_SlidehubDocument","imageCount","_name","_imageCount","_loaded","_node","_scrollboxNode","_items","_selectedItemNode","_hoveredItemNode","_itemNavigator","loaded","length","selectedItemNode","targetItemNode","parentElement","contains","classList","remove","document","activeElement","HTMLElement","blur","hoveredItemNode","unhoverItem","navigateItem","markup","createMarkup","docNode","getElementById","insertAdjacentHTML","setNode","scrollboxClassName","slice","itemContainerClassName","itemClassName","dummyPage","querySelector","querySelectorAll","selectedDocument","selectDocument","imageObservationHandler","observer","entry","isIntersecting","loadImage","target","unobserve","image","dataset","src","setAttribute","removeAttribute","addEventListener","closest","style","cssText","includes","aspectRatio","naturalWidth","naturalHeight","setProperty","toString","console","error","supportsPassive","opts","window","removeEventListener","listener","active","passive","scrolling","vertical","delta","horizontal","controlKeyNames","33","34","35","36","37","38","39","40","lastFocusedElement","createOpenButton","title","toLowerCase","closeModal","modal","body","closeOnEscape","trapTabKey","closeOnBackground","focus","event","keyCode","tabable","getFocusableElements","currentTarget","filter","element","tabIndex","preventDefault","shiftKey","ancestor","Array","from","focusableElementsSelector","SlidehubPlugin","description","enabled","toggleButton","TypeError","enable","disable","createToggleButton","handleToggleButton","bind","fieldset","toggleButtonMarkup","button","isPressed","getAttribute","String","triggerButtonAction","stateAttr","hasAttribute","warn","DocumentSourceLinker_DocumentSourceLinker","super","boundEnterHandler","enterHandler","boundDoubleClickHandler","doubleClickHandler","openInNewTab","ctrlKey","handleOpenIntent","itemNode","tag","tagName","potentiallyInteractive","disabled","offsetParent","openDocumentSource","itemIndex","page","fragment","itemSource","docSource","open","location","href","getFragmentIdentifier","url","hashPosition","indexOf","substring","Slidehub_selectClassName","Slidehub_hoverClassName","_documents","_selectedDocument","_hoveredDocument","_documentNavigator","_itemWidth","_visibleItems","_scrollboxWidth","documentLoader","getNode","getDocuments","batchSize","prevIterator","nextIterator","IntersectionObserver","documentObservationHandler","targetDoc","loadTargetDocument","loadBatch","documentFramesMarkup","values","documentSource","iteratorFor","loadDocument","documentIterable","insertPosition","iteratorResult","info","load","observe","id","insertDocumentFrames","determineTargetDocument","start","jumpToTargetDocument","loadPlugins","slidehubNode","createNode","createElement","appendChild","forEach","fragmentIdentifier","documentElement","scrollTop","slidehubWidth","clientWidth","centerDocument","elementFromPoint","innerHeight","centerOffset","clientHeight","setTimeout","scrollBy","navigateDocument","scrollDocumentIntoView","offset","getVerticalOffsets","extraPart","top","abs","bottom","documentNodes","getDocumentNodes","targetDocumentPos","selectedDocPos","targetDocumentNode","docEl","offsetTop","scrollY","offsetHeight","children","exposeDocumentInfo","imageObserver","imageObserverOptions","root","rootMargin","observeExistingDocuments","observeNewDocuments","startImageObserver","mutationObserverOptions","childList","mutationObserver","MutationObserver","mutationHandler","mutationsList","mutation","addedNodes","enableModifier","initExistingDocuments","initMouseInteraction","handleWheelInteraction","handleClickSelect","handleMoveHover","scrollingDirection","deltaX","deltaY","sign","hoverDocument","hoverItem","onModifierDown","onModifierUp","onModifierBlur","hoveredDocument","controlKey","homeKey","trigger","left","endKey","right","arrowLeft","arrowRight","arrowUp","up","arrowDown","down","pageUp","pageDown","handleKeyboardInput","keyName","buttonArea","shortcutsOpenButton","featuresOpenButton","targetModal","enableModals","unhoverDocument","documentNavigator","scrollboxWidth","exposeItemWidth","exposeScrollboxWidth","exposeNumberOfVisibleItems","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","apply","itemOuterWidth","getComputedStyle","marginLeft","parseInt","marginRight","offsetWidth","floor","IntersectionObserverEntry","intersectionRatio","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","_observationTargets","some","nodeType","Error","_registerInstance","push","_monitorIntersections","_checkForIntersections","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","_initThresholds","opt_threshold","threshold","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","attributes","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","width","height","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","_callback","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","overflow","html","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","index","splice","targetArea","intersectionArea","opt_options","fn","timer","options","join","opt_useCapture","attachEvent","detatchEvent","el","err","child","parentNode","host"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,gBACAC,cACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,YAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAAoB,SAC3B,WAAiC,OAAApB,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAW,EAAAC,GAAsD,OAAAX,OAAAY,UAAAC,eAAApB,KAAAiB,EAAAC,IAGtDzB,EAAA4B,EAAA,GAIA5B,IAAA6B,EAAA,KAAAC,EAAA,SAAAC,EAAAC,EAAA5B,GAAA,aAAAA,EAAAe,EAAAa,GAAA5B,EAAA,IAAAA,EAAA,GCrCA,MAAA6B,GAEAC,QACAC,UAAA,yDACAC,OAAA,0DAIAC,iBAGAC,aAIAC,iCAGAC,uBAMAC,YAAA,KAGAC,eAAA,KAGAC,UACAC,SAAA,sBACAC,IAAA,OACAC,UAAA,iBACAC,cAAA,kBACAC,KAAA,UC9DAC,IACA,0BACA,0CACA,0BACA,uBACA,kCACA,yBACA,uBACA,sCACA,yBACA,+BACA,sCACA,+BACA,6BACA,0BACA,0BACA,0BACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,wCACA,wCACA,sCACA,sCAEA,wCACA,mCACA,mCACA,mCACA,4CACA,mCACA,kCACA,qCACA,mCACA,iCACA,sCACA,+BACA,gCACA,wCACA,mCACA,sCACA,sCACA,oCACA,wCACA,gCACA,mCACA,+BACA,iCACA,mCACA,kCACA,oCACA,oCACA,mCACA,iCACA,sCACA,mCACA,gCACA,qCACA,qCACA,qCACA,oCACA,uCACA,mCACA,oCACA,uCACA,6CACA,4CACA,wCACA,4CACA,gDACA,iDACA,gDACA,uBACA,sCACA,uCAEA,sCACA,sCACA,sCACA,sCACA,oCACA,gCACA,iCACA,0CACA,oCACA,gCACA,wCACA,6CACA,yCACA,oCACA,uCACA,qCACA,wCACA,wCACA,wBACA,wBACA,wBACA,4BACA,0BACA,iCACA,kCACA,iCACA,iCACA,wCACA,wCACA,mCACA,kCACA,uBACA,uCACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,qCACA,2CACA,gDACA,4CACA,+CACA,iDACA,8CACA,oCACA,wBACA,6CACA,yCACA,2CACA,0CACA,iCACA,iCACA,+BACA,uCACA,iCACA,iCACA,gCACA,mCACA,kCACA,yCACA,uCACA,wCACA,sCAEA,8BACA,kCACA,mCACA,mCACA,8BACA,uCACA,4CC1LAC,EASAC,YAAAC,EAAA,MAKA,GAJAC,KAAAC,KAAA,IAAAC,IACAF,KAAAG,OAAA,KACAH,KAAAI,MAAA,KAEAL,EACA,UAAAM,EAAAtC,KAAAgC,EACAC,KAAAM,IAAAD,EAAAtC,GAcAF,IAAA0C,OAAAC,eACA,2BASAC,YACA,OAAAT,KAAAG,OASAM,UAAAC,GACAV,KAAAG,OAAAO,EASAC,WACA,OAAAX,KAAAI,MASAO,SAAAD,GACAV,KAAAI,MAAAM,EAYAE,WACA,OAAAZ,KAAAC,KAAAW,KAWAd,QACAE,KAAAC,KAAAY,QACAb,K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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export { config };\n\n/**\n * @typedef {object} Config\n * @property {ConfigPropertyAssets} assets\n * @property {boolean} staticContent\n * @property {boolean} metaSlide\n * @property {boolean} keepSelectedPageInFirstColumn\n * @property {boolean} preserveAspectRatio\n * @property {string|null} selectColor\n * @property {string|null} highlightColor\n * @property {ConfigPropertySelector} selector\n *\n * @typedef {object} ConfigPropertyAssets\n * @property {string} documents\n * @property {string} images\n *\n * @typedef {object} ConfigPropertySelector\n * @property {string} slidehub\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Global configuration object.\n *\n * @type {Config}\n */\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assets: {\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\n  },\n\n  // If set to true, it is assumed that the document markup is already present.\n  staticContent: false,\n\n  // Create a meta slide for each document?\n  metaSlide: true,\n\n  // Allows navigating pages so that the last page can be placed in the first\n  // column of a document container.\n  keepSelectedPageInFirstColumn: true,\n\n  // Preserve aspect ratio of document items?\n  preserveAspectRatio: false,\n\n  // Overrides the default select color.\n  // Takes string values that represent a valid CSS color value; for example:\n  // 'transparent', 'Highlight', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\n  // Setting `null` uses the default color.\n  selectColor: null,\n\n  // Overrides the default highlight color.\n  highlightColor: null,\n\n  // Selectors for UI components\n  selector: {\n    slidehub: '.slidehub-container',\n    doc: '.doc',\n    scrollbox: '.doc-scrollbox',\n    itemContainer: '.page-container',\n    item: '.page'\n  }\n};\n","export { documentsData };\n\n/** @type {Array<[string, number]>} */\nconst documentsData = [\n  ['acrostic-talk.pdf', 100],\n  ['argumentation-cross-domain-talk.pdf', 9],\n  ['cicling14-talk.pdf', 14],\n  ['cikm13-talk.pdf', 19],\n  ['eurovis15-plagvis-talk.pdf', 63],\n  ['ijcnlp13-talk.pdf', 13],\n  ['jufo13-talk.pdf', 22],\n  ['leipzig-colloquium15-talk.pdf', 118],\n  ['netspeak-talk.pdf', 45],\n  ['ral15-picapica-talk.pdf', 82],\n  ['republica17-clickbait-talk.pdf', 14],\n  ['ukj16-picapica-talk.pdf', 46],\n  ['webquality12-talk.pdf', 41],\n  ['potthast_2011b.pdf', 61],\n  ['potthast_2012a.pdf', 28],\n  ['potthast_2016c.pdf', 88],\n  ['stein_2005b.pdf', 24],\n  ['stein_2006j.pdf', 33],\n  ['stein_2006l.pdf', 20],\n  ['stein_2007b.pdf', 43],\n  ['stein_2007d.pdf', 21],\n  ['stein_2007m.pdf', 24],\n  ['stein_2008b.pdf', 7],\n  ['stein_2008d.pdf', 20],\n  ['stein_2008j.pdf', 64],\n  ['stein_2009e.pdf', 31],\n  ['stein_2010h.pdf', 55],\n  ['stein_2010r.pdf', 10],\n  ['stein_2010t.pdf', 27],\n  ['stein_2010u.pdf', 25],\n  ['stein_2011e.pdf', 39],\n  ['stein_2011f.pdf', 20],\n  ['stein_2011h.pdf', 36],\n  ['stein_2011j.pdf', 51],\n  ['stein_2011k.pdf', 76],\n  ['stein_2011l.pdf', 64],\n  ['stein_2011q.pdf', 30],\n  ['stein_2011t.pdf', 24],\n  ['stein_2011u.pdf', 16],\n  ['stein_2012c.pdf', 34],\n  ['stein_2012m.pdf', 13],\n  ['stein_2012o.pdf', 34],\n  ['stein_2012q.pdf', 46],\n  ['stein_2012t.pdf', 26],\n  ['stein_2012u.pdf', 24],\n  ['stein_2012w.pdf', 20],\n  ['stein_2013a.pdf', 15],\n  ['stein_2013b.pdf', 47],\n  ['stein_2013f.pdf', 52],\n  ['stein_2013g.pdf', 17],\n  ['stein_2013h.pdf', 29],\n  ['stein_2014b.pdf', 14],\n  ['stein_2014f.pdf', 24],\n  ['stein_2014j.pdf', 31],\n  ['stein_2014k.pdf', 27],\n  ['stein_2015b.pdf', 35],\n  ['stein_2015c.pdf', 47],\n  ['stein_2015n.pdf', 13],\n  ['stein_2015o.pdf', 48],\n  ['stein_2016a.pdf', 36],\n  ['stein_2016b.pdf', 2],\n  ['stein_2016c.pdf', 34],\n  ['stein_2016d.pdf', 49],\n  ['stein_2016i.pdf', 11],\n  ['stein_2016j.pdf', 26],\n  ['stein_2016k.pdf', 44],\n  ['stein_2016l.pdf', 31],\n  ['stein_2016m.pdf', 67],\n  ['stein_2016o.pdf', 63],\n  ['stein_2017a.pdf', 17],\n  ['stein_2017b.pdf', 10],\n  ['stein_2017c.pdf', 11],\n  ['unit-de-client-technologies1.pdf', 87],\n  ['unit-de-client-technologies2.pdf', 45],\n  ['unit-de-conceptual-design1.pdf', 31],\n  ['unit-de-conceptual-design2.pdf', 52],\n  // [\"unit-de-conceptual-design3.pdf\", 1],\n  ['unit-de-configuration-basics.pdf', 34],\n  ['unit-de-constraints-fd1.pdf', 43],\n  ['unit-de-constraints-fd2.pdf', 50],\n  ['unit-de-constraints-ifd.pdf', 18],\n  ['unit-de-constraints-introduction.pdf', 34],\n  ['unit-de-db-introduction.pdf', 50],\n  ['unit-de-db-organization.pdf', 9],\n  ['unit-de-design-and-models.pdf', 28],\n  ['unit-de-diagnosis-bayes.pdf', 28],\n  ['unit-de-diagnosis-cbr.pdf', 35],\n  ['unit-de-diagnosis-dempster.pdf', 34],\n  ['unit-de-doclang-css.pdf', 35],\n  ['unit-de-doclang-html.pdf', 53],\n  ['unit-de-doclang-introduction.pdf', 30],\n  ['unit-de-doclang-xml-api.pdf', 77],\n  ['unit-de-doclang-xml-basics.pdf', 74],\n  ['unit-de-doclang-xml-schema.pdf', 92],\n  ['unit-de-doclang-xml-xsl.pdf', 115],\n  ['unit-de-ensemble-classifiers.pdf', 32],\n  ['unit-de-fuzzy-basics.pdf', 44],\n  ['unit-de-fuzzy-inference.pdf', 29],\n  ['unit-de-index-terms.pdf', 20],\n  ['unit-de-ir-evaluation.pdf', 19],\n  ['unit-de-ir-introduction.pdf', 25],\n  ['unit-de-ir-organization.pdf', 6],\n  ['unit-de-kbs-applications.pdf', 31],\n  ['unit-de-kbs-introduction.pdf', 28],\n  ['unit-de-kbs-organization.pdf', 7],\n  ['unit-de-logics-algebra.pdf', 3],\n  ['unit-de-logics-organization.pdf', 5],\n  ['unit-de-model-formation.pdf', 14],\n  ['unit-de-model-system.pdf', 18],\n  ['unit-de-network-protocol1.pdf', 44],\n  ['unit-de-network-protocol2.pdf', 38],\n  ['unit-de-network-protocol3.pdf', 53],\n  ['unit-de-non-monotonicity.pdf', 21],\n  ['unit-de-planning-algorithms.pdf', 56],\n  ['unit-de-planning-basics.pdf', 40],\n  ['unit-de-predicate-basics.pdf', 36],\n  ['unit-de-predicate-complexity.pdf', 6],\n  ['unit-de-predicate-sat-syntactical.pdf', 27],\n  ['unit-de-predicate-transformation.pdf', 23],\n  ['unit-de-propositional-basics.pdf', 58],\n  ['unit-de-propositional-complexity.pdf', 18],\n  ['unit-de-propositional-sat-semantical.pdf', 22],\n  ['unit-de-propositional-sat-syntactical.pdf', 56],\n  ['unit-de-propositional-transformation.pdf', 33],\n  ['unit-de-psk.pdf', 12],\n  ['unit-de-relational-algebra.pdf', 67],\n  ['unit-de-relational-calculus.pdf', 85],\n  // [\"unit-de-relational-design0.pdf\", 1],\n  ['unit-de-relational-design1.pdf', 43],\n  ['unit-de-relational-design2.pdf', 62],\n  ['unit-de-relational-theory1.pdf', 71],\n  ['unit-de-relational-theory2.pdf', 50],\n  ['unit-de-retrieval-models.pdf', 18],\n  ['unit-de-rm-algebraic.pdf', 45],\n  ['unit-de-rm-term-based.pdf', 24],\n  ['unit-de-rule-systems-inference.pdf', 39],\n  ['unit-de-rule-systems-not.pdf', 20],\n  ['unit-de-rule-systems.pdf', 58],\n  ['unit-de-self-organizing-maps.pdf', 30],\n  ['unit-de-semantic-web-introduction.pdf', 30],\n  ['unit-de-semantic-web-ontology.pdf', 72],\n  ['unit-de-semantic-web-rdf.pdf', 79],\n  ['unit-de-semantic-web-rdfsem.pdf', 27],\n  ['unit-de-semantic-web-rdfs.pdf', 32],\n  ['unit-de-server-technologies1.pdf', 63],\n  ['unit-de-server-technologies2.pdf', 84],\n  ['unit-de-sql1.pdf', 96],\n  ['unit-de-sql2.pdf', 38],\n  ['unit-de-sql3.pdf', 16],\n  ['unit-de-stemming.pdf', 12],\n  ['unit-de-symbol.pdf', 32],\n  ['unit-de-verification1.pdf', 46],\n  ['unit-de-verification2.pdf', 132],\n  ['unit-de-verification3.pdf', 32],\n  ['unit-de-verification.pdf', 210],\n  ['unit-de-webis-architectures1.pdf', 35],\n  ['unit-de-webis-architectures2.pdf', 17],\n  ['unit-de-wt-introduction.pdf', 57],\n  ['unit-de-wt-organization.pdf', 7],\n  ['unit-de-xps.pdf', 26],\n  ['unit-en-association-analysis.pdf', 2],\n  ['unit-en-astar-formal1.pdf', 63],\n  ['unit-en-astar-formal2.pdf', 65],\n  ['unit-en-astar-relaxed1.pdf', 42],\n  ['unit-en-astar-relaxed2.pdf', 32],\n  ['unit-en-basic-search1.pdf', 68],\n  ['unit-en-basic-search2.pdf', 38],\n  ['unit-en-bayesian-learning.pdf', 23],\n  ['unit-en-cluster-analysis-basics.pdf', 21],\n  ['unit-en-cluster-analysis-constrained.pdf', 38],\n  ['unit-en-cluster-analysis-density.pdf', 59],\n  ['unit-en-cluster-analysis-evaluation.pdf', 72],\n  ['unit-en-cluster-analysis-hierarchical.pdf', 85],\n  ['unit-en-cluster-analysis-iterative.pdf', 26],\n  ['unit-en-concept-learning.pdf', 53],\n  ['unit-en-data.pdf', 27],\n  ['unit-en-decision-trees-algorithms.pdf', 26],\n  ['unit-en-decision-trees-basics.pdf', 32],\n  ['unit-en-decision-trees-impurity.pdf', 33],\n  ['unit-en-decision-trees-pruning.pdf', 20],\n  ['unit-en-diagnosis-gde.pdf', 56],\n  ['unit-en-diagnosis-tms.pdf', 38],\n  ['unit-en-dm-overview.pdf', 10],\n  ['unit-en-game-playing-basics.pdf', 41],\n  ['unit-en-informed-bf1.pdf', 102],\n  ['unit-en-informed-bf2.pdf', 117],\n  ['unit-en-informed-bf3.pdf', 21],\n  ['unit-en-ml-introduction.pdf', 33],\n  ['unit-en-ml-organization.pdf', 8],\n  ['unit-en-multilayer-perceptron.pdf', 22],\n  ['unit-en-perceptron-learning.pdf', 59],\n  ['unit-en-performance-measures.pdf', 21],\n  ['unit-en-probability-basics.pdf', 20],\n  // [\"unit-en-radial-basis-functions.pdf\", 1],\n  ['unit-en-regression.pdf', 44],\n  ['unit-en-relaxed-models.pdf', 24],\n  ['unit-en-representation1.pdf', 34],\n  ['unit-en-representation2.pdf', 52],\n  ['unit-en-rule-mining.pdf', 2],\n  ['unit-en-search-introduction.pdf', 36],\n  ['unit-en-search-organization.pdf', 4]\n];\n","export { ReverseIterableMap };\n\n/**\n * A reverse-iterable map implementation based on the built-in [`Map`][Map] object.\n *\n * It exposes its order via iterable iterators which can be used for both forwards and backwards\n * iteration. As per `Map`, the order of a `ReverseIterableMap` is the insertion order.\n *\n * [Map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n *\n * @typedef {class} ReverseIterableMapType\n * @template K, V\n * @property {Map<K, V>} _map\n * @property {ReverseIterableMapNode} _first\n * @property {ReverseIterableMapNode} _last\n *\n * @type {ReverseIterableMapType}\n */\nclass ReverseIterableMap {\n  /**\n   * An [iterable][iterable] object whose elements are key-value pairs.\n   *\n   * [iterable]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\n   *\n   * @param {Iterable?} iterable\n   * @public\n   */\n  constructor(iterable = null) {\n    this._map = new Map();\n    this._first = null;\n    this._last = null;\n\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * The [`@@toStringTag`][toStr] property is used is used when `toString()` is called on a\n   * `ReverseIterableMap` object.\n   *\n   * [toStr]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\n   *\n   * @returns {string} The string tag of the `ReverseIterableMap` class.\n   * @public\n   */\n  get [Symbol.toStringTag]() {\n    return 'ReverseIterableMap';\n  }\n\n  /**\n   * Returns the first `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get first() {\n    return this._first;\n  }\n\n  /**\n   * Sets the first `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set first(node) {\n    this._first = node;\n  }\n\n  /**\n   * Returns the last `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get last() {\n    return this._last;\n  }\n\n  /**\n   * Sets the last `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set last(node) {\n    this._last = node;\n  }\n\n  /**\n   * The `size` accessor property returns the number of elements in a `ReverseIterableMap` object.\n   * Calls [`Map.prototype.size`][size].\n   *\n   * [size]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n   *\n   * @returns {number} The size of the ReverseIterableMap.\n   * @public\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * The `clear()` method removes all elements from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.clear`][clear].\n   *\n   * [clear]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   *\n   * @public\n   */\n  clear() {\n    this._map.clear();\n    this._first = null;\n    this._last = null;\n  }\n\n  /**\n   * The `has()` method returns a boolean indicating whether an element with the specified key\n   * exists or not. Calls [`Map.prototype.has`][has].\n   *\n   * [has]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   *\n   * @param {*} key\n   * @returns {boolean} `true` if an element with the specified key exists in a\n   * `ReverseIterableMap` object; otherwise `false`.\n   * @public\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * The `get()` method returns a specified element from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.get`][get].\n   *\n   * [get]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   *\n   * @param {*} key\n   * @returns {*|undefined}\n   * @public\n   */\n  get(key) {\n    return this._map.get(key).value;\n  }\n\n  /**\n   * The `getLast()` method returns the last element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The last element or `null` if the map is empty.\n   * @public\n   */\n  getLast() {\n    if (this.last) {\n      return this.last.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `getFirst()` method returns the first element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The first element or `null` if the map is empty.\n   * @public\n   */\n  getFirst() {\n    if (this.first) {\n      return this.first.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `add()` method adds a new element to the internal `Map` object. It does not link itself\n   * with its neighboring elements which is why this method must never be called directly.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  add(key, value) {\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n    } else {\n      node = new ReverseIterableMapNode(key, value);\n\n      this._map.set(key, node);\n    }\n\n    return node;\n  }\n\n  /**\n   * The `set()` method adds a new element to a `ReverseIterableMap` object in insertion order or\n   * updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  set(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.prev = this.last;\n      this.last.next = node;\n      this.last = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `setFront()` method adds a new element to a `ReverseIterableMap` object in\n   * reverse insertion order or updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  setFirst(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first.prev = node;\n      this.first = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `delete()` method removes the specified element from a\n   * `ReverseIterableMap` object. Calls [`Map.prototype.delete`][del].\n   *\n   * [del]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   *\n   * @param {*} key The key of the element to remove from the\n   * `ReverseIterableMap` object.\n   * @returns {boolean} `true` if an element in the `ReverseIterableMap` object\n   * existed and has been removed, or `false` if the element does not exist.\n   * @public\n   */\n  delete(key) {\n    if (this.has(key)) {\n      const node = this._map.get(key);\n\n      if (this.first === this.last) {\n        this.first = null;\n        this.last = null;\n      } else if (this.first === node) {\n        node.next.prev = null;\n        this.first = node.next;\n      } else if (this.last === node) {\n        node.prev.next = null;\n        this.last = node.prev;\n      } else {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n      }\n\n      this._map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * The `forEach()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in insertion order. For reference, see\n   * [`Map.prototype.forEach`][fe].\n   *\n   * [fe]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEach(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The `forEachReverse()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in reverse insertion order.\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEachReverse(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries().reverse()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The initial value of the @@iterator property is the same function object as the initial value\n   * of the entries property.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Allows usage of the [iteration protocols][ip] for reverse iteration.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Examples:\n   *\n   * ```js\n   * const map = new ReverseIterableMap();\n   *\n   * [...map.reverse()];\n   *\n   * for (const [key, value] of map.reverse()) {\n   *   console.log(key, value);\n   * }\n   * ```\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  reverse() {\n    return this.entries().reverse();\n  }\n\n  /**\n   * The `entries()` method returns a new [Iterator][it] object that contains the `[key, value]`\n   * pairs for each element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  entries() {\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `keys()` method returns a new [Iterator][it] object that contains the keys for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  keys() {\n    const getIteratorValue = function(node) {\n      return node.key;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `values()` method returns a new [Iterator][it] object that contains the values for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  values() {\n    const getIteratorValue = function(node) {\n      return node.value;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `iteratorFor()` method returns a new [Iterator][it] object that contains the\n   * `[key, value]` pairs for each element in a `ReverseIterableMap` object in insertion order\n   *  **starting with the pair specified by the `key` parameter**.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @param {*} key The key of the element to start iterating from.\n   * @returns {IterableIterator}\n   * @public\n   */\n  iteratorFor(key) {\n    let startNode = this._map.get(key);\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue, startNode);\n  }\n\n  /**\n   * Returns an object which is both an iterable and an iterator. It fulfills the requirements of\n   * the [iteration protocols][ip] plus allowing reverse-iteration.\n   *\n   * - **Iterator requirements**: An object that implements a function `next`. This function\n   *   returns an object with two properties: `value` and `done`.\n   *\n   * - **Iterable requirements**: An object that implements a function `[Symbol.iterator]()`. This\n   *   function returns an iterator.\n   *\n   * - **Reverse-iterable requirements**: An object that implements a function `reverse()`. This\n   *   function returns an iterator with the special behavior of iterating in reverse insertion\n   *   order. This is non-standard behavior.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * @param {function} getIteratorValue\n   * @param {ReverseIterableMapNode?} startNode\n   * @returns {IterableIterator}\n   * @private\n   */\n  iterableIterator(getIteratorValue, startNode = undefined) {\n    let currentNode = startNode ? startNode : this.first;\n    // Store the this.last node as inside the reverse() method, `this` will be\n    // bound to iterableIterator, not ReverseIterableMap. That’s on purpose.\n    const last = this.last;\n    let nextProp = 'next';\n\n    return {\n      reverse() {\n        currentNode = startNode ? startNode : last;\n        nextProp = 'prev';\n        return this;\n      },\n      [Symbol.iterator]() {\n        // Return the iterable itself.\n        return this;\n      },\n      next: function() {\n        let value;\n        if (currentNode) {\n          value = getIteratorValue(currentNode);\n          currentNode = currentNode[nextProp];\n        }\n        return iteratorResult(value);\n      }\n    };\n  }\n}\n\n/**\n * The `ReverseIterableMapNode` object represents an element in a `ReverseIterableMap` object.\n * Its main purpose is storing a `[key, value]` pair. Additionally, it keeps references to the\n * `ReverseIterableMapNode` objects appearing before and after itself in a `ReverseIterableMap`\n * object.\n *\n * @typedef {class} ReverseIterableMapNodeType\n * @template K, V\n * @property {K} _key\n * @property {V} _value\n * @property {ReverseIterableMapNode} _prev\n * @property {ReverseIterableMapNode} _next\n *\n * @type {ReverseIterableMapNodeType}\n * @protected\n */\nclass ReverseIterableMapNode {\n  /**\n   * A `[key, value]` pair that is part of a `ReverseIterableMap` object.\n   *\n   * @template K, V\n   * @param {K} key\n   * @param {V} value\n   */\n  constructor(key, value) {\n    this._key = key;\n    this._value = value;\n    this._next = null;\n    this._prev = null;\n  }\n\n  /**\n   * Returns the key from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The key.\n   * @protected\n   */\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * Returns the value from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The value.\n   * @protected\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * Sets the value of a `ReverseIterableMapNode` object.\n   *\n   * @param {*} value The value.\n   * @protected\n   */\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * Returns the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * Sets the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} next The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set next(next) {\n    this._next = next;\n  }\n\n  /**\n   * Returns the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get prev() {\n    return this._prev;\n  }\n\n  /**\n   * Sets the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} prev The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set prev(prev) {\n    this._prev = prev;\n  }\n}\n\n/**\n * Returns an `IteratorResult` object as per the following rules:\n * - If `value` is not `undefined`, `done` is `false`.\n * - If `value` is `undefined`, `done` is `true`. In this case, `value` may be omitted.\n *\n * This function does not belong to `ReverseIterableMap` as it doesn’t need access to any\n * of its properties.\n *\n * @param {*|undefined} value\n * @returns {IteratorResult}\n */\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: value === undefined\n  };\n}\n","export { clamp };\n\n/**\n * Clamps the given value between the min and max boundaries.\n *\n * @param {Number} value\n * @param {Number} min\n * @param {Number} max\n * @returns {Number} - `value` if `min <= value <= max`\n *                   - `min` if `value < min`\n *                   - `max` if `value > max`\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n","import { config } from '../config';\nimport { clamp } from '../util/clamp';\n\nexport { ItemNavigator };\n\n/**\n * Item Navigator\n *\n * **Usage**:\n *\n * ```\n * const navigateItem = new ItemNavigator(slidehub, doc);\n * navigateItem.by(3);\n * ```\n */\nclass ItemNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  constructor(slidehub, doc) {\n    this.slidehub = slidehub;\n    this._doc = doc;\n    this._itemPos = 0;\n    this._selectedItemPos = 0;\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  left(distance) {\n    this.by(-distance);\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  right(distance) {\n    this.by(distance);\n  }\n\n  /**\n   * Main interface for item navigation. The algorithm works like this:\n   *\n   * 1. Determine the new position of the selected item.\n   *\n   *    1.1. If the new position is different than the current position, update it.\n   *\n   * 2. If the current item position is not aligned properly (i.e. is not an integer),\n   *    its position will be rounded to the next closest integer position.\n   *\n   * 3. If the `keepSelectedPageInFirstColumn` option is turned on\n   *    and all items are visible within their document, return.\n   *\n   * 4. Determine the new position of the item.\n   *\n   *    4.1. If the new position is the same as the current position, return.\n   *\n   *    4.2. Update the item position with the new value.\n   *\n   * @param {Number} vector\n   * @private\n   */\n  by(vector) {\n    const newSelectedItemPos = this.determineNewSelectedItemPos(vector);\n    if (newSelectedItemPos !== this.selectedItemPos) {\n      this.updateSelectedItemPos(newSelectedItemPos);\n    }\n\n    // If the current item position is not properly aligned …\n    if (!Number.isInteger(this.itemPos)) {\n      this.updateItemPos(Math.round(this.itemPos));\n    }\n\n    // If all items are already visible, we’re done here.\n    if (!config.keepSelectedPageInFirstColumn && this.allItemsVisible()) {\n      return;\n    }\n\n    const newItemPos = this.determineNewItemPos(vector);\n\n    // Nothing to do, current position is already the destination.\n    if (newItemPos === this.itemPos) {\n      return;\n    }\n\n    this.updateItemPos(newItemPos);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   * @public\n   */\n  get doc() {\n    return this._doc;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemPos() {\n    return this._itemPos;\n  }\n\n  /**\n   * @param {Number} itemPos\n   * @private\n   */\n  set itemPos(itemPos) {\n    this._itemPos = itemPos;\n  }\n\n  /**\n   * Updates the position of the item.\n   *\n   * @param {Number} newItemPos\n   * @private\n   */\n  updateItemPos(newItemPos) {\n    this.itemPos = newItemPos;\n    this.doc.scrollboxNode.scrollLeft = newItemPos * this.slidehub.itemWidth;\n  }\n\n  /**\n   * Determines the new position of the item based on a direction vector.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewItemPos(vector) {\n    const newItemPos = this.itemPos + vector;\n    const visibleItems = this.slidehub.visibleItems;\n\n    // For certain settings, some item positions don’t need to accessible because they are already\n    // visible\n    const invalidItemPositions = config.keepSelectedPageInFirstColumn ? 0 : visibleItems - 1;\n    const maxPos = this.doc.itemCount() - invalidItemPositions;\n\n    return clamp(newItemPos, 0, maxPos);\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get selectedItemPos() {\n    return this._selectedItemPos;\n  }\n\n  /**\n   * @param {Number} selectedItemPos\n   * @private\n   */\n  set selectedItemPos(selectedItemPos) {\n    this._selectedItemPos = selectedItemPos;\n  }\n\n  /**\n   * Updates the position of the selected item.\n   *\n   * @param {Number} newSelectedItemPos\n   * @private\n   */\n  updateSelectedItemPos(newSelectedItemPos) {\n    this.selectedItemPos = newSelectedItemPos;\n    this.doc.selectItem(this.doc.items.item(newSelectedItemPos));\n  }\n\n  /**\n   * Determines the new position of the selected item based on `distance`.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewSelectedItemPos(vector) {\n    const newSelectedItemPos = this.selectedItemPos + vector;\n    return clamp(newSelectedItemPos, 0, this.doc.itemCount());\n  }\n\n  /**\n   * Tests whether a document’s items are all visible.\n   *\n   * @returns {boolean}\n   * @private\n   */\n  allItemsVisible() {\n    return this.doc.itemCount < this.slidehub.numberOfVisibleItems;\n  }\n};\n","import { config } from '../config';\nimport { ItemNavigator } from './ItemNavigator';\n\nexport { SlidehubDocument };\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Slidehub Document\n */\nclass SlidehubDocument {\n  /**\n   * @param {String} name\n   * @param {Number} imageCount\n   */\n  constructor(slidehub, name, imageCount) {\n    this.slidehub = slidehub;\n\n    this._name = name;\n    this._imageCount = imageCount;\n    this._loaded = false;\n\n    this._node = null;\n    this._scrollboxNode = null;\n    this._items = null;\n    this._selectedItemNode = null;\n    this._hoveredItemNode = null;\n    this._itemNavigator = null;\n  }\n\n  /**\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  get imageCount() {\n    return this._imageCount;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  get loaded() {\n    return this._loaded;\n  }\n\n  /**\n   * @param {Boolean} loaded\n   */\n  set loaded(loaded) {\n    this._loaded = loaded;\n  }\n\n  get node() {\n    return this._node;\n  }\n\n  set node(node) {\n    this._node = node;\n  }\n\n  get scrollboxNode() {\n    return this._scrollboxNode;\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  itemCount() {\n    return this.items.length - 1;\n  }\n\n  get selectedItemNode() {\n    return this._selectedItemNode;\n  }\n\n  set selectedItemNode(item) {\n    this._selectedItemNode = item;\n  }\n\n  /**\n   * Sets a new selected item.\n   *\n   * @param {Element} targetItemNode\n   */\n  selectItem(targetItemNode) {\n    const itemContainer = targetItemNode.parentElement;\n    if (this.selectedItemNode && itemContainer.contains(this.selectedItemNode)) {\n      this.selectedItemNode.classList.remove(selectClassName);\n    }\n\n    this.selectedItemNode = targetItemNode;\n    this.selectedItemNode.classList.add(selectClassName);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  get hoveredItemNode() {\n    return this._hoveredItemNode;\n  }\n\n  set hoveredItemNode(item) {\n    this._hoveredItemNode = item;\n  }\n\n  /**\n   * Sets a new hovered item.\n   *\n   * @param {Element} targetItemNode\n   */\n  hoverItem(targetItemNode) {\n    this.unhoverItem();\n\n    this.hoveredItemNode = targetItemNode;\n    this.hoveredItemNode.classList.add(hoverClassName);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered item.\n   */\n  unhoverItem() {\n    if (this.hoveredItemNode) {\n      this.hoveredItemNode.classList.remove(hoverClassName);\n      this.hoveredItemNode = null;\n    }\n  }\n\n  get navigateItem() {\n    return this._itemNavigator;\n  }\n\n  load() {\n    const markup = this.createMarkup();\n    const docNode = document.getElementById(this.name);\n    docNode.insertAdjacentHTML('beforeend', markup);\n\n    this.setNode(docNode);\n\n    return docNode;\n  }\n\n  /**\n   * Creates the complete markup for a document under the following assumptions:\n   * - A file named `this.name` exists on the document assets path\n   * - The document’s item images are on the image assets path\n   *\n   * @returns {String}\n   */\n  createMarkup() {\n    const scrollboxClassName = config.selector.scrollbox.slice(1);\n    const itemContainerClassName = config.selector.itemContainer.slice(1);\n    const itemClassName = config.selector.item.slice(1);\n\n    let items = '';\n    for (var i = 0; i < this.imageCount; i++) {\n      const imageSource = `${config.assets.images}/${this.name}-${i}.png`;\n      items += `<div class=\"${itemClassName}\" data-page=\"${i + 1}\">\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\n      </div>`;\n    }\n\n    const documentSource = `${config.assets.documents}/${this.name}`;\n\n    const metaSlide = `<div class=\"${itemClassName} ${itemClassName}--text\" data-page=\"0\">\n      <div class=\"doc-meta\">\n        <h2 class=\"doc-meta__title\">\n          <a href=\"${documentSource}\">${this.name}</a>\n        </h2>\n        by author, ${this.imageCount} pages, 2018\n      </div>\n    </div>`;\n\n    const dummyPage = `<div\n      class=\"${itemClassName} dummy-page\"\n      aria-hidden=\"true\"\n      style=\"visibility: hidden;\"\n    ></div>`;\n\n    return `<div class=\"${scrollboxClassName}\">\n      <div class=\"${itemContainerClassName}\">\n        ${config.metaSlide ? metaSlide : ''}\n        ${items}\n        ${dummyPage}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * @param {HTMLElement} node\n   */\n  setNode(node) {\n    this.node = node;\n    this._scrollboxNode = node.querySelector(config.selector.scrollbox);\n    this._items = node.querySelectorAll('[data-page]');\n    this._itemNavigator = new ItemNavigator(this.slidehub, this);\n\n    if (!this.slidehub.selectedDocument) {\n      this.slidehub.selectDocument(this);\n    }\n    this.selectItem(node.querySelector(config.selector.item));\n\n    this.loaded = true;\n  }\n};\n","import { config } from '../config';\n\nexport { SlidehubImageLoader };\n\n/**\n * Loads document images when needed (i.e. lazy-loading).\n */\nclass SlidehubImageLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.imageObserver = null;\n\n    if ('IntersectionObserver' in window) {\n      const imageObserverOptions = {\n        root: slidehub.node,\n        rootMargin: '500px 1000px'\n      };\n\n      this.imageObserver = new IntersectionObserver(imageObservationHandler, imageObserverOptions);\n    }\n  }\n\n  start() {\n    if (this.imageObserver) {\n      this.observeExistingDocuments();\n      this.observeNewDocuments();\n    } else {\n      const images = Array.from(this.slidehub.node.querySelectorAll('img[data-src]'));\n      images.forEach(image => loadImage(image));\n    }\n  }\n\n  /**\n   *\n   */\n  observeExistingDocuments() {\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => this.startImageObserver(docNode));\n  }\n\n  /**\n   * Starts the image observer on all lazy-loading images.\n   *\n   * @param {HTMLElement} docNode\n   */\n  startImageObserver(docNode) {\n    const images = Array.from(docNode.querySelectorAll('img[data-src]'));\n    images.forEach(image => this.imageObserver.observe(image));\n  }\n\n  /**\n   *\n   */\n  observeNewDocuments() {\n    const mutationObserverOptions = {\n      childList: true\n    };\n\n    const mutationObserver = new MutationObserver(this.mutationHandler.bind(this));\n\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => {\n      mutationObserver.observe(docNode, mutationObserverOptions);\n    });\n  }\n\n  /**\n   *\n   * @param {*} mutationsList\n   */\n  mutationHandler(mutationsList) {\n    for (const mutation of mutationsList) {\n      if (mutation.addedNodes.length !== 0) {\n        this.startImageObserver(mutation.target);\n      }\n    }\n  }\n};\n\n/**\n * Handles lazy-loading document images.\n *\n * @param {*} entries\n * @param {IntersectionObserver} observer\n */\nfunction imageObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      loadImage(entry.target);\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\n/**\n * Replaces the data-src attribute with the src attribute, causing the browser to load the image.\n *\n * @param {HTMLImageElement} image\n */\nfunction loadImage(image) {\n  if (!image.dataset.src) {\n    console.error('Couldn’t load image due to missing data-src attribute.', image);\n    return;\n  }\n\n  image.setAttribute('src', image.dataset.src);\n  image.removeAttribute('data-src');\n  image.addEventListener('load', () => handleItemImageLoaded(image));\n}\n\n/**\n * Plain wrapper for triggering certain actions once an image has loaded.\n *\n * @param {HTMLImageElement} image\n */\nfunction handleItemImageLoaded(image) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(image);\n  }\n}\n\n/**\n * Calculates the aspect ratio of an image and stores it in the DOM as a\n * custom CSS property.\n *\n * @param {HTMLImageElement} image\n */\nfunction setItemAspectRatio(image) {\n  const docNode = image.closest(config.selector.doc);\n\n  if (docNode && !docNode.style.cssText.includes('--page-aspect-ratio')) {\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\n    docNode.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\n  }\n}\n","export { listener };\n\n/**\n * Feature detection for passive event listeners as per:\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\n/**\n * @typedef {Object} AddEventListenerOptionsObject\n * @property {Boolean|AddEventListenerOptions} active\n * @property {Boolean|AddEventListenerOptions} passive\n */\n\n/**\n * Stores the third argument for `addEventListener` for both cases\n * @type {AddEventListenerOptionsObject}\n */\nconst listener = {\n  active: supportsPassive ? { passive: false } : false,\n  passive: supportsPassive ? { passive: true } : false\n};\n","import { config } from '../config';\nimport { listener } from '../util/passive-event-listener';\n\nexport { SlidehubMouseInteraction };\n\nconst scrolling = {\n  vertical: {\n    delta: 'deltaY'\n  },\n  horizontal: {\n    delta: 'deltaX'\n  }\n};\n\n/**\n * Mouse Interaction.\n */\nclass SlidehubMouseInteraction {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n  }\n\n  start() {\n    this.enableModifier();\n    this.initExistingDocuments();\n  }\n\n  initExistingDocuments() {\n    const documents = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documents.forEach(docNode => this.initMouseInteraction(docNode));\n  }\n\n  /**\n   * @param {Element} docNode\n   */\n  initMouseInteraction(docNode) {\n    docNode.addEventListener('wheel', this.handleWheelInteraction.bind(this), listener.active);\n    docNode.addEventListener('click', this.handleClickSelect.bind(this), listener.passive);\n    docNode.addEventListener('mousemove', this.handleMoveHover.bind(this), listener.passive);\n  }\n\n  /**\n   * Handles wheel navigation.\n   *\n   * @param {WheelEvent} event\n   */\n  handleWheelInteraction(event) {\n    // Don’t handle scrolling on elements that are not inside a document\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    const ratio = Math.abs(event.deltaX / event.deltaY);\n    const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\n\n    // When scrolling vertically, only trigger navigation when modifier is pressed\n    if (scrollingDirection === scrolling.vertical && event.shiftKey) {\n      // Prevent vertical scrolling\n      event.preventDefault();\n\n      const delta = event[scrollingDirection.delta];\n\n      doc.navigateItem.by(Math.sign(delta));\n    }\n  }\n\n  /**\n   * Selects documents/items on click.\n   *\n   * @param {MouseEvent} event\n   */\n  handleClickSelect(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.selectDocument(doc);\n\n    if (config.keepSelectedPageInFirstColumn) {\n      return;\n    }\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.selectItem(item);\n    }\n  }\n\n  /**\n   * Highlights documents/items on hover.\n   *\n   * @param {MouseEvent} event\n   */\n  handleMoveHover(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    if (config.keepSelectedPageInFirstColumn) {\n      return;\n    }\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.hoverItem(item);\n    }\n  }\n\n  /**\n   * Wrapper for enabling all event listeners related to modifier handling.\n   */\n  enableModifier() {\n    document.addEventListener('keydown', this.onModifierDown.bind(this), listener.passive);\n    document.addEventListener('keyup', this.onModifierUp.bind(this), listener.passive);\n    window.addEventListener('blur', this.onModifierBlur.bind(this), listener.passive);\n  }\n\n  /**\n   * Displays a special cursor when the modifier is pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierDown(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'ew-resize');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the modifier is no longer pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierUp(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the user somehow leaves the page.\n   */\n  onModifierBlur() {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n};\n","import { listener } from '../util/passive-event-listener';\n\nexport { SlidehubKeyboardInteraction };\n\nconst controlKeyNames = {\n  33: 'pageUp',\n  34: 'pageDown',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n};\n\n/**\n * Keyboard Interaction.\n */\nclass SlidehubKeyboardInteraction {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n\n    this.controlKey = {\n      homeKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.left(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      endKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.right(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      arrowLeft: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.left(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowRight: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.right(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowUp: {\n        trigger: event => {\n          this.slidehub.navigateDocument.up(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowDown: {\n        trigger: event => {\n          this.slidehub.navigateDocument.down(event.shiftKey ? 3 : 1);\n        }\n      },\n      pageUp: {\n        trigger: () => {\n          this.slidehub.navigateDocument.up(3);\n        }\n      },\n      pageDown: {\n        trigger: () => {\n          this.slidehub.navigateDocument.down(3);\n        }\n      }\n    };\n  }\n\n  start() {\n    document.addEventListener('keydown', this.handleKeyboardInput.bind(this), listener.active);\n  }\n\n  /**\n   * Handles keyboard interactions with documents and items.\n   *\n   * @param {KeyboardEvent} event\n   */\n  handleKeyboardInput(event) {\n    if (event.keyCode in controlKeyNames) {\n      event.preventDefault();\n      const keyName = controlKeyNames[event.keyCode];\n      this.controlKey[keyName].trigger(event);\n    }\n  }\n};\n","import { listener } from '../util/passive-event-listener';\n\nexport { enableModals };\n\n/**\n * Modal window.\n *\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\n * https://github.com/gdkraus/accessible-modal-dialog\n */\n\nlet lastFocusedElement;\n\nfunction enableModals() {\n  const buttonArea = document.querySelector('[data-slidehub-modal-buttons]');\n\n  if (!buttonArea) {\n    return;\n  }\n\n  const shortcutsOpenButton = createOpenButton('Shortcuts');\n  buttonArea.insertAdjacentHTML('beforeend', shortcutsOpenButton);\n  const featuresOpenButton = createOpenButton('Features');\n  buttonArea.insertAdjacentHTML('beforeend', featuresOpenButton);\n\n  const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\n  modalOpenButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const targetModal = event.currentTarget.dataset.targetModal;\n      const modal = document.querySelector(`[data-modal-${targetModal}]`);\n      openModal(modal);\n    });\n  });\n\n  const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\n  modalCloseButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const modal = event.currentTarget.closest('.modal');\n      closeModal(modal);\n    });\n  });\n}\n\nfunction createOpenButton(title) {\n  return `<button data-target-modal=\"${title.toLowerCase()}\">\n    ${title}\n  </button>`;\n}\n\n/**\n * Opens the modal.\n *\n * @param {Element} modal\n */\nfunction openModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  // Store last focused element\n  lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  moveFocusToModal(modal);\n\n  // Setup event listeners\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\n  modal.addEventListener('keydown', trapTabKey, listener.active);\n  modal.addEventListener('click', closeOnBackground, listener.passive);\n}\n\n/**\n * Move focus to the first focusable element inside the modal.\n *\n * @param {Element} modal\n */\nfunction moveFocusToModal(modal) {\n  const focusable = getFocusableElements(modal);\n  focusable[0].focus();\n}\n\n/**\n * Closes the modal.\n *\n * @param {Element} modal\n */\nfunction closeModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  // Clean up event listeners\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\n\n  // Restore previously focused element\n  lastFocusedElement.focus();\n}\n\n/**\n * Closes the modal when clicking on the background.\n *\n * @param {MouseEvent} event\n */\nfunction closeOnBackground(event) {\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\n  if (modal === event.target) {\n    closeModal(modal);\n  }\n}\n\n/**\n * Closes the modal when pressing the <kbd>Esc</kbd>.\n *\n * @param {KeyboardEvent} event\n */\nfunction closeOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\n  }\n}\n\n/**\n * Make it impossible to focus an element outside the modal\n *\n * @param {KeyboardEvent} event\n */\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabable[0]) {\n      tabable[tabable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabable[tabable.length - 1]) {\n      tabable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * Selects all focusable elements currently present in the DOM/\n *\n * @param {Element|document} ancestor\n * @returns {Array}\n */\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nconst focusableElementsSelector =\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\n","export { SlidehubPlugin };\n\n/**\n * Abstract base class for Slidehub plugins.\n *\n * Ensures that classes extending `SlidehubPlugin` implement an `enable()` and\n * `disable()` method.\n *\n * **Usage**:\n *\n * ```\n * import { SlidehubPlugin } from '../core/SlidehubPlugin';\n *\n * class MyPlugin extends SlidehubPlugin {\n *    constructor(slidehub) {\n *      super(\n *        slidehub,\n *        'MyPlugin',\n *        'Description of your plugin'\n *      );\n *    }\n *\n *    enable() {\n *      // Implement an enable routine\n *    }\n *\n *    disable() {\n *      // Implement an disable routine\n *    }\n * };\n * ```\n */\nclass SlidehubPlugin {\n  constructor(slidehub, name, description) {\n    this.slidehub = slidehub;\n    this.name = name;\n    this.description = description;\n    this.enabled = false;\n    this.toggleButton = null;\n\n    if (new.target === SlidehubPlugin) {\n      throw new TypeError('Cannot construct SlidehubPlugin instances directly');\n    }\n\n    if (this.enable === SlidehubPlugin.prototype.enable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own enable method.');\n    }\n\n    if (this.disable === SlidehubPlugin.prototype.disable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own disable method.');\n    }\n  }\n\n  enable() {\n    this.enabled = true;\n\n    if (!this.toggleButton) {\n      this.toggleButton = this.createToggleButton();\n      if (this.toggleButton) {\n        this.toggleButton.addEventListener('click', this.handleToggleButton.bind(this));\n      }\n    }\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  /**\n   * Creates a feature toggle button in the user interface.\n   *\n   * @returns {Element|null}\n   */\n  createToggleButton() {\n    const fieldset = document.querySelector('.features-fieldset');\n\n    if (!fieldset) {\n      return null;\n    }\n\n    const toggleButtonMarkup = `\n      <div class=\"form-group form-group--switch\">\n        <span class=\"form-label\" id=\"${this.name}-label\">${this.description}</span>\n        <button\n          role=\"switch\"\n          aria-checked=\"false\"\n          aria-labelledby=\"${this.name}-label\"\n          data-feature=\"${this.name}\"\n        >\n          <span class=\"state state--true\" aria-label=\"on\"></span>\n          <span class=\"state state--false\" aria-label=\"off\"></span>\n        </button>\n      </div>\n    `;\n\n    fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\n\n    const button = fieldset.querySelector(`[data-feature=\"${this.name}\"]`);\n    button.setAttribute('aria-checked', this.enabled.toString());\n\n    return button;\n  }\n\n  /**\n   * Toggles a toggle button and triggers its associated action.\n   *\n   * @param {MouseEvent} event\n   */\n  handleToggleButton(event) {\n    const button = event.currentTarget;\n\n    if (button instanceof HTMLElement) {\n      const isPressed = button.getAttribute('aria-checked') === 'true';\n      button.setAttribute('aria-checked', String(!isPressed));\n\n      this.triggerButtonAction(button, 'aria-checked');\n    }\n  }\n\n  /**\n   * Triggers the associated action of a toggle button.\n   *\n   * @param {HTMLElement} button\n   * @param {'aria-checked'|'aria-pressed'} stateAttr\n   */\n  triggerButtonAction(button, stateAttr) {\n    switch (true) {\n      case button.hasAttribute('data-feature'):\n        if (button.getAttribute(stateAttr) === 'true') {\n          this.enable();\n        } else {\n          this.disable();\n        }\n        break;\n\n      default:\n        console.warn('No action is associated with the control', button);\n        break;\n    }\n  }\n};\n\n/* class MyPlugin extends SlidehubPlugin {\n  constructor() {\n    super();\n  }\n\n  enable() {\n    console.log('MyPlugin.enable');\n    super.enable();\n  }\n\n  disable() {\n    console.log('MyPlugin.disable');\n    super.disable();\n  }\n};\n\nconst x = new MyPlugin();\nx.enable(); */\n","import { SlidehubPlugin } from '../core/SlidehubPlugin';\nimport { listener } from '../util/passive-event-listener';\nimport { config } from '../config';\n\nexport { DocumentSourceLinker };\n\n/**\n * Item Linking.\n *\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\n * or double-clicking with a pointer device.\n */\nclass DocumentSourceLinker extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Links documents to their source document';\n    super(slidehub, 'DocumentSourceLinker', description);\n\n    this.boundEnterHandler = this.enterHandler.bind(this);\n    this.boundDoubleClickHandler = this.doubleClickHandler.bind(this);\n  }\n\n  enable() {\n    document.addEventListener('keydown', this.boundEnterHandler, listener.passive);\n    document.addEventListener('dblclick', this.boundDoubleClickHandler, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    document.removeEventListener('keydown', this.boundEnterHandler);\n    document.removeEventListener('dblclick', this.boundDoubleClickHandler);\n    super.disable();\n  }\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  enterHandler(event) {\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    const openInNewTab = event.ctrlKey;\n    const doc = this.slidehub.selectedDocument;\n    DocumentSourceLinker.handleOpenIntent(doc.node, doc.selectedItemNode, openInNewTab);\n  }\n\n  /**\n   * @param {MouseEvent} event\n   */\n  doubleClickHandler(event) {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const itemNode = event.target.closest(config.selector.item);\n    const docNode = itemNode.closest(config.selector.doc);\n    if (docNode) {\n      const openInNewTab = true;\n      DocumentSourceLinker.handleOpenIntent(docNode, itemNode, openInNewTab);\n    }\n  }\n\n  /**\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static handleOpenIntent(docNode, item, openInNewTab) {\n    // Focusable elements have a default behavior (e.g. activating a link)\n    // That behavior shall not be altered/extended.\n    if (isInteractive(item)) {\n      return;\n    }\n\n    DocumentSourceLinker.openDocumentSource(docNode, item, openInNewTab);\n  }\n\n  /**\n   * Opens the document source for the current selected document in the browser.\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static openDocumentSource(docNode, item, openInNewTab) {\n    const itemIndex = item.dataset.page;\n    const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n    const itemSource = docNode.dataset.docSource + fragment;\n\n    if (openInNewTab) {\n      window.open(itemSource);\n    } else {\n      window.location.href = itemSource;\n    }\n  }\n};\n\n/**\n * Returns true if element is interactive, false otherwise.\n *\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (!element.hasAttribute('href')) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.hasAttribute('contenteditable')) {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n","export { getFragmentIdentifier };\n\n/**\n * Returns the fragment identifier of a URL if it is present.\n *\n * @param {String} url\n * @returns {String|null} the fragment identifier of a URL if it is present,\n *                        `null` otherwise.\n */\nfunction getFragmentIdentifier(url) {\n  const hashPosition = url.indexOf('#');\n  if (hashPosition > 0) {\n    return url.substring(hashPosition + 1);\n  }\n\n  return null;\n}\n","import { config } from '../config';\nimport { parseDocumentsData, parseDocumentsMarkup } from './SlidehubParser';\nimport { SlidehubDocumentLoader } from './SlidehubDocumentLoader';\nimport { SlidehubImageLoader } from './SlidehubImageLoader';\nimport { SlidehubMouseInteraction } from './SlidehubMouseInteraction';\nimport { SlidehubKeyboardInteraction } from './SlidehubKeyboardInteraction';\nimport { DocumentNavigator } from './DocumentNavigator';\nimport { enableModals } from './Modal';\n\nimport * as plugin from '../plugins/namespace';\n\nimport { debounce } from '../util/debounce';\nimport { getOuterWidth } from '../util/getOuterWidth';\nimport { getFragmentIdentifier } from '../util/getFragmentIdentifier';\n\nexport { Slidehub };\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\nclass Slidehub {\n  /**\n   * @public\n   */\n  constructor() {\n    this._node = null;\n    this._documents = null;\n    this._selectedDocument = null;\n    this._hoveredDocument = null;\n    this._documentNavigator = null;\n\n    this._itemWidth = null;\n    this._visibleItems = null;\n    this._scrollboxWidth = null;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this._node = this.getNode();\n      this._documents = this.getDocuments();\n\n      let documentLoader;\n\n      if (!config.staticContent) {\n        documentLoader = new SlidehubDocumentLoader(this);\n        documentLoader.insertDocumentFrames();\n      }\n\n      const targetDoc = this.determineTargetDocument();\n\n      if (!config.staticContent) {\n        documentLoader.start(targetDoc);\n      }\n\n      this.selectDocument(targetDoc);\n      this.jumpToTargetDocument(targetDoc);\n\n      this.start();\n      this.loadPlugins();\n    });\n  }\n\n  /**\n   * Sets up the main Slidehub HTML element.\n   *\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @private\n   */\n  getNode() {\n    const existingNode = document.querySelector(config.selector.slidehub);\n    const slidehubNode = existingNode ? existingNode : this.createNode();\n\n    // Expose select/highlight color overrides to the DOM.\n    // This allows CSS to use inside of a rule declaration.\n    if (config.selectColor && config.selectColor !== '') {\n      slidehubNode.style.setProperty('--c-selected', config.selectColor);\n    }\n\n    if (config.highlightColor && config.highlightColor !== '') {\n      slidehubNode.style.setProperty('--c-highlighted', config.highlightColor);\n    }\n\n    return slidehubNode;\n  }\n\n  /**\n   * Hooks the Slidehub container element into the DOM.\n   *\n   * Requires an element with a custom attribute `data-slidehub` to be present\n   * in the DOM. A new <div> element will be created inside of it. No existing\n   * markup will be changed or removed.\n   *\n   * @returns {HTMLDivElement} the empty Slidehub DOM node.\n   * @private\n   */\n  createNode() {\n    const slidehubNode = document.createElement('div');\n    slidehubNode.classList.add(config.selector.slidehub.slice(1));\n\n    document.querySelector('[data-slidehub]').appendChild(slidehubNode);\n\n    return slidehubNode;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the internal documents data structure.\n   */\n  getDocuments() {\n    return config.staticContent ? parseDocumentsMarkup(this) : parseDocumentsData(this);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   */\n  determineTargetDocument() {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n\n    let targetDoc;\n\n    if (this.documents.has(fragmentIdentifier)) {\n      targetDoc = this.documents.get(fragmentIdentifier);\n    } else if (document.documentElement.scrollTop === 0) {\n      // If the viewport was not scrolled already, just start from the top\n      targetDoc = this.documents.values().next().value;\n    } else {\n      // The page was scrolled (e.g. the page was reloaded with a non-zero scroll position)\n      // In this case, Slidehub attempts to load the document in the center of the view.\n      const slidehubWidth = this.node.clientWidth;\n      const centerElement = document.elementFromPoint(slidehubWidth / 2, window.innerHeight / 2);\n      const centerDocument = centerElement.closest(config.selector.doc);\n      targetDoc = this.documents.get(centerDocument.id);\n    }\n\n    return targetDoc;\n  }\n\n  jumpToTargetDocument(targetDoc) {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n    if (document.documentElement.scrollTop !== 0 || fragmentIdentifier) {\n      const centerOffset = (window.innerHeight - targetDoc.node.clientHeight) / 2;\n      // After a short while, scroll the viewport to center the document\n      // In the future, `Element.scrollIntoView({ block: 'center' })` should work\n      setTimeout(() => window.scrollBy(0, -centerOffset), 200);\n    }\n  }\n\n  /**\n   * Initializes all core functionality.\n   *\n   * @private\n   */\n  start() {\n    this.navigateDocument = new DocumentNavigator(this);\n\n    this.exposeDocumentInfo();\n\n    const imageLoader = new SlidehubImageLoader(this);\n    imageLoader.start();\n\n    const mouseInteraction = new SlidehubMouseInteraction(this);\n    mouseInteraction.start();\n\n    const keyboardInteraction = new SlidehubKeyboardInteraction(this);\n    keyboardInteraction.start();\n\n    enableModals();\n  }\n\n  /**\n   * Loads optional plugins.\n   *\n   * @private\n   */\n  loadPlugins() {\n    const documentSourceLinker = new plugin.DocumentSourceLinker(this);\n    documentSourceLinker.enable();\n  }\n\n  /**\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @public\n   */\n  get node() {\n    return this._node;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the Slidehub documents data structure.\n   * @public\n   */\n  get documents() {\n    return this._documents;\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently selected document.\n   * @public\n   */\n  get selectedDocument() {\n    return this._selectedDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new selected document.\n   * @private\n   */\n  set selectedDocument(doc) {\n    this._selectedDocument = doc;\n  }\n\n  /**\n   * Sets a new selected document.\n   *\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  selectDocument(doc) {\n    // Remove selected class from currently selected document\n    if (this.selectedDocument) {\n      this.selectedDocument.node.classList.remove(selectClassName);\n    }\n\n    // Set new selected document\n    this.selectedDocument = doc;\n    this.selectedDocument.node.classList.add(selectClassName);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently hovered document.\n   * @public\n   */\n  get hoveredDocument() {\n    return this._hoveredDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @private\n   */\n  set hoveredDocument(doc) {\n    this._hoveredDocument = doc;\n  }\n\n  /**\n   * Sets a new hovered document after unsetting the old one.\n   *\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @public\n   */\n  hoverDocument(doc) {\n    this.unhoverDocument();\n\n    // Set new hovered document\n    this.hoveredDocument = doc;\n    this.hoveredDocument.node.classList.add(hoverClassName);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered document.\n   *\n   * **Side effect**: Also removes the hover from the currently hovered item\n   * within that document.\n   *\n   * @public\n   */\n  unhoverDocument() {\n    // Remove hovered class from currently hovered document\n    if (this.hoveredDocument) {\n      this.hoveredDocument.unhoverItem();\n      this.hoveredDocument.node.classList.remove(hoverClassName);\n      this.hoveredDocument = null;\n    }\n  }\n\n  /**\n   * @returns {DocumentNavigator} the document navigator object.\n   * @public\n   */\n  get navigateDocument() {\n    return this._documentNavigator;\n  }\n\n  /**\n   * @param {DocumentNavigator} documentNavigator\n   * @private\n   */\n  set navigateDocument(documentNavigator) {\n    this._documentNavigator = documentNavigator;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemWidth() {\n    return this._itemWidth;\n  }\n\n  /**\n   * @param {Number} itemWidth\n   * @private\n   */\n  set itemWidth(itemWidth) {\n    this._itemWidth = itemWidth;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get visibleItems() {\n    return this._visibleItems;\n  }\n\n  /**\n   * @param {Number} visibleItems\n   * @private\n   */\n  set visibleItems(visibleItems) {\n    this._visibleItems = visibleItems;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get scrollboxWidth() {\n    return this._scrollboxWidth;\n  }\n\n  /**\n   * @param {Number} scrollboxWidth\n   * @private\n   */\n  set scrollboxWidth(scrollboxWidth) {\n    this._scrollboxWidth = scrollboxWidth;\n  }\n\n  /**\n   * Wrapper method for all expose methods.\n   *\n   * @private\n   */\n  exposeDocumentInfo() {\n    this.exposeItemWidth();\n    this.exposeScrollboxWidth();\n    this.exposeNumberOfVisibleItems();\n\n    // Recalculate the scrollbox width on resize.\n    window.addEventListener('resize', debounce(() => {\n      this.exposeItemWidth();\n      this.exposeScrollboxWidth();\n      this.exposeNumberOfVisibleItems();\n    }, 200));\n  }\n\n  /**\n   * Exposes the current outer width of an item to the DOM.\n   *\n   * @private\n   */\n  exposeItemWidth() {\n    const item = this.selectedDocument.node.querySelector(config.selector.item);\n    const itemOuterWidth = getOuterWidth(item);\n\n    if (this.itemWidth !== itemOuterWidth) {\n      this.itemWidth = itemOuterWidth;\n\n      this.node.style.setProperty('--page-outer-width', this.itemWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current `clientWidth` of the selected scrollbox to the DOM.\n   *\n   * @private\n   */\n  exposeScrollboxWidth() {\n    const scrollboxNode = this.selectedDocument.node.querySelector(config.selector.scrollbox);\n\n    if (this.scrollboxWidth !== scrollboxNode.clientWidth) {\n      this.scrollboxWidth = scrollboxNode.clientWidth;\n\n      this.node.style.setProperty('--scrollbox-width', this.scrollboxWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current number of visible items in a document to the DOM.\n   *\n   * @private\n   */\n  exposeNumberOfVisibleItems() {\n    this.visibleItems = Math.floor(this.scrollboxWidth / this.itemWidth);\n  }\n};\n","/**\n * Application entry point.\n */\n\nimport './lib/intersection-observer';\n\nimport { Slidehub } from './core/Slidehub';\n\n/**\n * An Immediately Invoked Function Expression, called like that because it’s\n * immediately executed when a JavaScript file like this is sourced.\n *\n * Starts the engines for Slidehub.\n */\n(function () {\n  new Slidehub();\n})();\n","import { config } from '../config';\n\nexport { SlidehubDocumentLoader };\n\n/**\n * Document Loader.\n *\n * Loads documents dynamically when needed.\n */\nclass SlidehubDocumentLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.batchSize = 5;\n    this.prevIterator = null;\n    this.nextIterator = null;\n    this.observer = new IntersectionObserver(this.documentObservationHandler.bind(this));\n  }\n\n  start(targetDoc) {\n    this.loadTargetDocument(targetDoc);\n\n    // Load one batch in both directions\n    this.loadBatch(this.nextIterator, 'beforeend', this.batchSize);\n    this.loadBatch(this.prevIterator, 'afterbegin', this.batchSize);\n  }\n\n  /**\n   * Prepares the DOM with empty frames for all documents.\n   *\n   * @public\n   */\n  insertDocumentFrames() {\n    let documentFramesMarkup = '';\n\n    for (const doc of this.slidehub.documents.values()) {\n      const documentSource = `${config.assets.documents}/${doc.name}`;\n      documentFramesMarkup += `<div\n        class=\"${config.selector.doc.slice(1)}\"\n        id=\"${doc.name}\"\n        data-doc-source=\"${documentSource}\"\n        style=\"--pages: ${doc.imageCount + (config.metaSlide ? 1 : 0)}\"\n      ></div>`;\n    }\n\n    this.slidehub.node.insertAdjacentHTML('beforeend', documentFramesMarkup);\n  }\n\n  /**\n   * Starts off the document loading process. Determines which document should be\n   * loaded and sets up two iterators. They will be used to load new documents\n   * when needed.\n   *\n   * @returns {SlidehubDocument}\n   */\n  loadTargetDocument(targetDoc) {\n    // Obtain two iterators as pointers for which documents need to be\n    // loaded next.\n    this.prevIterator = this.slidehub.documents.iteratorFor(targetDoc.name).reverse();\n    this.nextIterator = this.slidehub.documents.iteratorFor(targetDoc.name);\n\n    // The target document will be loaded next by retrieving the iterator result\n    // from nextIterator. Since prevIterator points to the same document, it\n    // needs to be advanced manually, so it can’t be used to load that document\n    // again.\n    this.prevIterator.next();\n\n    return this.loadDocument(this.nextIterator.next(), 'beforeend');\n  }\n\n  /**\n   * A wrapper for calling loadDocument multiple times.\n   *\n   * @param {IterableIterator} documentIterable\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @param {number} batchSize\n   */\n  loadBatch(documentIterable, insertPosition, batchSize) {\n    while (batchSize--) {\n      this.loadDocument(documentIterable.next(), insertPosition);\n    }\n  }\n\n  /**\n   * Loads a new document by creating and injecting the markup into the DOM.\n   * Once this is done, the document is marked as loaded.\n   *\n   * @param {IteratorResult} iteratorResult\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @returns {SlidehubDocument}\n   */\n  loadDocument(iteratorResult, insertPosition) {\n    if (iteratorResult.done) {\n      return;\n    }\n\n    const doc = iteratorResult.value[1];\n    if (doc.loaded) {\n      console.warn(doc.name, 'was already loaded. Skipping.');\n      return;\n    }\n\n    doc.insertPosition = insertPosition;\n    if (doc.insertPosition === 'afterbegin') {\n      doc.iterator = this.prevIterator;\n    } else {\n      doc.iterator = this.nextIterator;\n    }\n\n    console.info(`Loading ${doc.name}.`);\n\n    doc.load();\n\n    this.observer.observe(doc.node);\n\n    return doc;\n  }\n\n  /**\n   * Handles lazy-loading documents.\n   *\n   * @param {Array<IntersectionObserverEntry>} entries\n   * @param {IntersectionObserver} observer\n   */\n  documentObservationHandler(entries, observer) {\n    for (const entry of entries) {\n      if (entry.isIntersecting) {\n        const doc = this.slidehub.documents.get(entry.target.id);\n        this.loadDocument(doc.iterator.next(), doc.insertPosition);\n\n        observer.unobserve(entry.target);\n      }\n    }\n  }\n};\n","/**\n * Parses the document data.\n */\n\nimport { config } from '../config';\nimport { documentsData } from '../documents-data';\nimport { ReverseIterableMap } from '../lib/reverse-iterable-map';\nimport { SlidehubDocument } from './SlidehubDocument';\n\nexport { parseDocumentsData, parseDocumentsMarkup };\n\n/**\n * Parses the initial document data into a more managable data structure.\n * The resulting structure keeps track of a documents’ loaded state.\n *\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsData(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  documentsData.forEach(([name, imageCount]) => {\n    const doc = new SlidehubDocument(slidehub, name, imageCount);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n\n/**\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsMarkup(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  const documentNodes = slidehub.node.querySelectorAll(config.selector.doc);\n  documentNodes.forEach(docNode => {\n    const imageCount = docNode.querySelectorAll('img').length - 1;\n    const doc = new SlidehubDocument(slidehub, docNode.id, imageCount);\n    doc.setNode(docNode);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n","import { clamp } from '../util/clamp';\n\nexport { DocumentNavigator };\n\n/**\n * Document Navigator.\n *\n * **Usage**:\n *\n * ```\n * const navigateDocument = new DocumentNavigator(slidehub);\n * navigateDocument.up(3);\n * navigateDocument.down(1);\n * ```\n */\nclass DocumentNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @public\n   */\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.iterator = null;\n  }\n\n  /**\n   * Navigate document up (in reverse document loading order, if that makes sense).\n   *\n   * @param {Number} distance\n   * @public\n   */\n  up(distance) {\n    this.iterator = this.slidehub.documents.iteratorFor(this.slidehub.selectedDocument.name).reverse();\n    this.by(distance);\n  }\n\n  /**\n   * Navigate document down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  down(distance) {\n    this.iterator = this.slidehub.documents.iteratorFor(this.slidehub.selectedDocument.name);\n    this.by(distance);\n  }\n\n  /**\n   * Navigates through documents by a certain distance. With `distance = 3`,\n   * two documents would be skipped, arriving at the third document.\n   *\n   * @param {number} distance\n   * @private\n   */\n  by(distance) {\n    this.iterator.next();\n\n    let iteratorResult;\n    for (let i = 0; i < distance; i++) {\n      iteratorResult = this.iterator.next();\n      if (iteratorResult.done) {\n        return;\n      }\n    }\n\n    const targetDoc = iteratorResult.value[1];\n    this.slidehub.selectDocument(targetDoc);\n    this.scrollDocumentIntoView(targetDoc);\n  }\n\n  /**\n   * @param {SlidehubDocument} doc\n   */\n  scrollDocumentIntoView(doc) {\n    const offset = this.getVerticalOffsets(doc.node);\n    const extraPart = doc.node.clientHeight / 2;\n    if (offset.top < 0) {\n      window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\n    } else if (offset.bottom < 0) {\n      window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\n    }\n  }\n\n  /**\n   * Finds the target document given a navigation distance.\n   *\n   * @param {number} distance\n   * @returns {SlidehubDocument}\n   */\n  getTargetDoc(distance) {\n    const documentNodes = this.getDocumentNodes();\n    const targetDocumentPos = clamp(this.selectedDocPos + distance, 0, documentNodes.length - 1);\n    const targetDocumentNode = documentNodes.item(targetDocumentPos);\n\n    return this.slidehub.documents.get(targetDocumentNode.id);\n  }\n\n  /**\n   * Returns an object containing vertical offsets for an element with the\n   * viewport.\n   *\n   * @param {HTMLElement} element\n   * @returns {object}\n   */\n  getVerticalOffsets(element) {\n    const docEl = document.documentElement;\n    return {\n      top: element.offsetTop - window.scrollY,\n      bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\n    };\n  }\n\n  /**\n   * Returns all Slidehub documents as a HTMLCollection.\n   *\n   * @returns {HTMLCollection}\n   */\n  getDocumentNodes() {\n    return this.slidehub.selectedDocument.node.parentElement.children;\n  }\n};\n","export { debounce };\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @see https://davidwalsh.name/javascript-debounce-function\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean?} immediate\n * @returns {Function}\n */\nfunction debounce(func, wait, immediate = false) {\n  let timeout;\n\n  return function () {\n    const context = this, args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","export { getOuterWidth };\n\n/**\n * Calculates the outer width of an element. In the context of this\n * application, the outer width of an element is its `offsetWidth` plus\n * left and right margins.\n *\n * @param {HTMLElement} element\n * @returns {Number} the outer width of `element`.\n */\nfunction getOuterWidth(element) {\n  const style = window.getComputedStyle(element);\n  const marginLeft = parseInt(style.marginLeft);\n  const marginRight = parseInt(style.marginRight);\n\n  return marginLeft + element.offsetWidth + marginRight;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n  'use strict';\n\n  // Exits early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n  if (\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  ) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n    return;\n  }\n\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observering a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n  var registry = [];\n\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect;\n\n    // Calculates the intersection ratio.\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n    // Sets intersection ratio.\n    if (targetArea) {\n      this.intersectionRatio = intersectionArea / targetArea;\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    }\n\n    // Binds and throttles `this._checkForIntersections`.\n    this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this),\n      this.THROTTLE_TIMEOUT\n    );\n\n    // Private properties.\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n    // Public properties.\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues\n      .map(function(margin) {\n        return margin.value + margin.unit;\n      })\n      .join(' ');\n  }\n\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.observe = function(target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n    this._observationTargets.push({ element: target, entry: null });\n    this._monitorIntersections();\n    this._checkForIntersections();\n  };\n\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.unobserve = function(target) {\n    this._observationTargets = this._observationTargets.filter(function(item) {\n      return item.element != target;\n    });\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n      this._unregisterInstance();\n    }\n  };\n\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n  IntersectionObserver.prototype.disconnect = function() {\n    this._observationTargets = [];\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  };\n\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n  IntersectionObserver.prototype.takeRecords = function() {\n    var records = this._queuedEntries.slice();\n    this._queuedEntries = [];\n    return records;\n  };\n\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n  IntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n\n    return threshold.sort().filter(function(t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n      return t !== a[i - 1];\n    });\n  };\n\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n  IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function(margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n      return { value: parseFloat(parts[1]), unit: parts[2] };\n    });\n\n    // Handles shorthand.\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n\n    return margins;\n  };\n\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibilty state is visible.\n   * @private\n   */\n  IntersectionObserver.prototype._monitorIntersections = function() {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true;\n\n      // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if ('MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n  IntersectionObserver.prototype._unmonitorIntersections = function() {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n        this._domObserver = null;\n      }\n    }\n  };\n\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n  IntersectionObserver.prototype._checkForIntersections = function() {\n    var rootIsInDom = this._rootIsInDom();\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function(item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n      var rootContainsTarget = this._rootContainsTarget(target);\n      var oldEntry = item.entry;\n      var intersectionRect =\n        rootIsInDom &&\n        rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = (item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      }));\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function(target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\n\n      // If the parent isn't displayed, an intersection can't happen.\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (\n          parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible'\n        ) {\n          parentRect = getBoundingClientRect(parent);\n        }\n      }\n\n      // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n        if (!intersectionRect) break;\n      }\n      parent = getParentNode(parent);\n    }\n    return intersectionRect;\n  };\n\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n  IntersectionObserver.prototype._getRootRect = function() {\n    var rootRect;\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n    return this._expandRectByRootMargin(rootRect);\n  };\n\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n  IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n    var margins = this._rootMarginValues.map(function(margin, i) {\n      return margin.unit == 'px'\n        ? margin.value\n        : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n\n    return newRect;\n  };\n\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n  IntersectionObserver.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\n\n    // Ignore unchanged ratios\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i];\n\n      // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n      if (\n        threshold == oldRatio ||\n        threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio\n      ) {\n        return true;\n      }\n    }\n  };\n\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n  IntersectionObserver.prototype._rootIsInDom = function() {\n    return !this.root || containsDeep(document, this.root);\n  };\n\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n  IntersectionObserver.prototype._rootContainsTarget = function(target) {\n    return containsDeep(this.root || document, target);\n  };\n\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n  IntersectionObserver.prototype._registerInstance = function() {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n  IntersectionObserver.prototype._unregisterInstance = function() {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n\n  /**\n   * Throttles a function and delays its executiong, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function() {\n      if (!timer) {\n        timer = setTimeout(function() {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n\n    return (\n      width >= 0 &&\n      height >= 0 && {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        width: width,\n        height: height\n      }\n    );\n  }\n\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {\n      // Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect();\n\n    // Older IE\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n    return rect;\n  }\n\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  /**\n   * Checks to see if a parent element contains a child elemnt (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n  function containsDeep(parent, child) {\n    var node = child;\n    while (node) {\n      if (node == parent) return true;\n\n      node = getParentNode(node);\n    }\n    return false;\n  }\n\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n    return parent;\n  }\n\n  // Exposes the constructors globally.\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})(window, document);\n"],"sourceRoot":""}