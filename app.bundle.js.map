{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/config.js","webpack:///./src/js/documents-data.js","webpack:///./src/js/lib/reverse-iterable-map.js","webpack:///./src/js/util/clamp.js","webpack:///./src/js/core/ItemNavigator.js","webpack:///./src/js/core/SlidehubDocument.js","webpack:///./src/js/core/SlidehubImageLoader.js","webpack:///./src/js/util/passive-event-listener.js","webpack:///./src/js/core/SlidehubMouseInteraction.js","webpack:///./src/js/core/SlidehubKeyboardInteraction.js","webpack:///./src/js/core/Modal.js","webpack:///./src/js/core/SlidehubPlugin.js","webpack:///./src/js/plugins/DocumentSourceLinker.js","webpack:///./src/js/core/Slidehub.js","webpack:///./src/js/app.js","webpack:///./src/js/core/SlidehubDocumentLoader.js","webpack:///./src/js/util/getFragmentIdentifier.js","webpack:///./src/js/core/SlidehubParser.js","webpack:///./src/js/core/DocumentNavigator.js","webpack:///./src/js/util/debounce.js","webpack:///./src/js/util/getOuterWidth.js","webpack:///./src/js/lib/intersection-observer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","0","t","e","config","assets","documents","images","staticContent","metaSlide","keepSelectedPageInFirstColumn","preserveAspectRatio","selectColor","highlightColor","selector","slidehub","doc","scrollbox","itemContainer","item","documentsData","ReverseIterableMap","[object Object]","iterable","this","_map","Map","_first","_last","key","set","Symbol","toStringTag","first","node","last","size","clear","has","ReverseIterableMapNode","add","prev","next","delete","callback","thisArg","entries","reverse","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","done","_key","_value","_next","_prev","clamp","min","max","Math","ItemNavigator_ItemNavigator","_doc","_itemPos","_selectedItemPos","distance","by","vector","newSelectedItemPos","determineNewSelectedItemPos","selectedItemPos","updateSelectedItemPos","Number","isInteger","itemPos","updateItemPos","round","allItemsVisible","newItemPos","determineNewItemPos","scrollboxNode","scrollLeft","itemWidth","visibleItems","invalidItemPositions","itemCount","selectItem","items","numberOfVisibleItems","selectClassName","hoverClassName","SlidehubDocument_SlidehubDocument","imageCount","_name","_imageCount","_loaded","_node","_scrollboxNode","_items","_selectedItemNode","_hoveredItemNode","_itemNavigator","loaded","length","selectedItemNode","targetItemNode","parentElement","contains","classList","remove","document","activeElement","HTMLElement","blur","hoveredItemNode","unhoverItem","navigateItem","markup","createMarkup","docNode","getElementById","insertAdjacentHTML","setNode","scrollboxClassName","slice","itemContainerClassName","itemClassName","dummyPage","querySelector","querySelectorAll","selectedDocument","selectDocument","imageObservationHandler","observer","entry","isIntersecting","loadImage","target","unobserve","image","dataset","src","setAttribute","removeAttribute","addEventListener","closest","style","cssText","includes","aspectRatio","naturalWidth","naturalHeight","setProperty","toString","console","error","supportsPassive","opts","window","removeEventListener","listener","active","passive","scrolling","vertical","delta","horizontal","controlKeyNames","33","34","35","36","37","38","39","40","lastFocusedElement","createOpenButton","title","toLowerCase","closeModal","modal","body","closeOnEscape","trapTabKey","closeOnBackground","focus","event","keyCode","tabable","getFocusableElements","currentTarget","filter","element","tabIndex","preventDefault","shiftKey","ancestor","Array","from","focusableElementsSelector","SlidehubPlugin","description","enabled","toggleButton","TypeError","enable","disable","createToggleButton","handleToggleButton","bind","fieldset","toggleButtonMarkup","button","isPressed","getAttribute","String","triggerButtonAction","stateAttr","hasAttribute","warn","DocumentSourceLinker_DocumentSourceLinker","super","boundEnterHandler","enterHandler","boundDoubleClickHandler","doubleClickHandler","openInNewTab","ctrlKey","handleOpenIntent","itemNode","tag","tagName","potentiallyInteractive","disabled","offsetParent","openDocumentSource","itemIndex","page","fragment","itemSource","docSource","open","location","href","Slidehub_selectClassName","Slidehub_hoverClassName","_documents","_selectedDocument","_hoveredDocument","_documentNavigator","_itemWidth","_visibleItems","_scrollboxWidth","getNode","getDocuments","batchSize","prevIterator","nextIterator","IntersectionObserver","documentObservationHandler","insertDocumentFrames","loadTargetDocument","loadBatch","documentFramesMarkup","values","documentSource","fragmentIdentifier","url","hashPosition","indexOf","substring","documentName","documentElement","scrollTop","keys","slidehubWidth","clientWidth","elementFromPoint","innerHeight","id","iteratorFor","loadInitialDocument","iteratorResult","centerDocumentInView","loadDocument","docHeight","clientHeight","setTimeout","scrollBy","documentIterable","insertPosition","info","load","observe","start","loadPlugins","slidehubNode","createNode","createElement","appendChild","forEach","navigateDocument","targetDoc","scrollDocumentIntoView","offset","getVerticalOffsets","extraPart","top","abs","bottom","documentNodes","getDocumentNodes","targetDocumentPos","selectedDocPos","targetDocumentNode","docEl","offsetTop","scrollY","offsetHeight","children","exposeDocumentInfo","imageObserver","imageObserverOptions","root","rootMargin","observeExistingDocuments","observeNewDocuments","startImageObserver","mutationObserverOptions","childList","mutationObserver","MutationObserver","mutationHandler","mutationsList","mutation","addedNodes","enableModifier","initExistingDocuments","initMouseInteraction","handleWheelInteraction","handleClickSelect","handleMoveHover","scrollingDirection","deltaX","deltaY","sign","hoverDocument","hoverItem","onModifierDown","onModifierUp","onModifierBlur","hoveredDocument","controlKey","homeKey","trigger","left","endKey","right","arrowLeft","arrowRight","arrowUp","up","arrowDown","down","pageUp","pageDown","handleKeyboardInput","keyName","buttonArea","shortcutsOpenButton","featuresOpenButton","targetModal","enableModals","unhoverDocument","documentNavigator","scrollboxWidth","exposeItemWidth","exposeScrollboxWidth","exposeNumberOfVisibleItems","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","apply","itemOuterWidth","getComputedStyle","marginLeft","parseInt","marginRight","offsetWidth","floor","IntersectionObserverEntry","intersectionRatio","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","_observationTargets","some","nodeType","Error","_registerInstance","push","_monitorIntersections","_checkForIntersections","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","_initThresholds","opt_threshold","threshold","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","attributes","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","width","height","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","_callback","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","overflow","html","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","index","splice","targetArea","intersectionArea","opt_options","fn","timer","options","join","opt_useCapture","attachEvent","detatchEvent","el","err","child","parentNode","host"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,gBACAC,cACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,YAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAAoB,SAC3B,WAAiC,OAAApB,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAW,EAAAC,GAAsD,OAAAX,OAAAY,UAAAC,eAAApB,KAAAiB,EAAAC,IAGtDzB,EAAA4B,EAAA,GAIA5B,IAAA6B,EAAA,KAAAC,EAAA,SAAAC,EAAAC,EAAA5B,GAAA,aAAAA,EAAAe,EAAAa,GAAA5B,EAAA,IAAAA,EAAA,GCrCA,MAAA6B,GAEAC,QACAC,UAAA,yDACAC,OAAA,0DAIAC,iBAGAC,aAIAC,iCAGAC,uBAMAC,YAAA,KAGAC,eAAA,KAGAC,UACAC,SAAA,sBACAC,IAAA,OACAC,UAAA,iBACAC,cAAA,kBACAC,KAAA,UC9DAC,IACA,0BACA,0CACA,0BACA,uBACA,kCACA,yBACA,uBACA,sCACA,yBACA,+BACA,sCACA,+BACA,6BACA,0BACA,0BACA,0BACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,wCACA,wCACA,sCACA,sCAEA,wCACA,mCACA,mCACA,mCACA,4CACA,mCACA,kCACA,qCACA,mCACA,iCACA,sCACA,+BACA,gCACA,wCACA,mCACA,sCACA,sCACA,oCACA,wCACA,gCACA,mCACA,+BACA,iCACA,mCACA,kCACA,oCACA,oCACA,mCACA,iCACA,sCACA,mCACA,gCACA,qCACA,qCACA,qCACA,oCACA,uCACA,mCACA,oCACA,uCACA,6CACA,4CACA,wCACA,4CACA,gDACA,iDACA,gDACA,uBACA,sCACA,uCAEA,sCACA,sCACA,sCACA,sCACA,oCACA,gCACA,iCACA,0CACA,oCACA,gCACA,wCACA,6CACA,yCACA,oCACA,uCACA,qCACA,wCACA,wCACA,wBACA,wBACA,wBACA,4BACA,0BACA,iCACA,kCACA,iCACA,iCACA,wCACA,wCACA,mCACA,kCACA,uBACA,uCACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,qCACA,2CACA,gDACA,4CACA,+CACA,iDACA,8CACA,oCACA,wBACA,6CACA,yCACA,2CACA,0CACA,iCACA,iCACA,+BACA,uCACA,iCACA,iCACA,gCACA,mCACA,kCACA,yCACA,uCACA,wCACA,sCAEA,8BACA,kCACA,mCACA,mCACA,8BACA,uCACA,4CC1LAC,EASAC,YAAAC,EAAA,MAKA,GAJAC,KAAAC,KAAA,IAAAC,IACAF,KAAAG,OAAA,KACAH,KAAAI,MAAA,KAEAL,EACA,UAAAM,EAAAtC,KAAAgC,EACAC,KAAAM,IAAAD,EAAAtC,GAcAF,IAAA0C,OAAAC,eACA,2BASAC,YACA,OAAAT,KAAAG,OASAM,UAAAC,GACAV,KAAAG,OAAAO,EASAC,WACA,OAAAX,KAAAI,MASAO,SAAAD,GACAV,KAAAI,MAAAM,EAYAE,WACA,OAAAZ,KAAAC,KAAAW,KAWAd,QACAE,KAAAC,KAAAY,QACAb,K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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export { config };\r\n\r\n/**\r\n * @typedef {object} Config\r\n * @property {ConfigPropertyAssets} assets\r\n * @property {boolean} staticContent\r\n * @property {boolean} metaSlide\r\n * @property {boolean} keepSelectedPageInFirstColumn\r\n * @property {boolean} preserveAspectRatio\r\n * @property {string|null} selectColor\r\n * @property {string|null} highlightColor\r\n * @property {ConfigPropertySelector} selector\r\n *\r\n * @typedef {object} ConfigPropertyAssets\r\n * @property {string} documents\r\n * @property {string} images\r\n *\r\n * @typedef {object} ConfigPropertySelector\r\n * @property {string} slidehub\r\n * @property {string} doc\r\n * @property {string} scrollbox\r\n * @property {string} itemContainer\r\n * @property {string} item\r\n */\r\n\r\n/**\r\n * Global configuration object.\r\n *\r\n * @type {Config}\r\n */\r\nconst config = {\r\n  // Location of the data directory containing PDF/PNG assets\r\n  assets: {\r\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\r\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\r\n  },\r\n\r\n  // If set to true, it is assumed that the document markup is already present.\r\n  staticContent: false,\r\n\r\n  // Create a meta slide for each document?\r\n  metaSlide: true,\r\n\r\n  // Allows navigating pages so that the last page can be placed in the first\r\n  // column of a document container.\r\n  keepSelectedPageInFirstColumn: true,\r\n\r\n  // Preserve aspect ratio of document items?\r\n  preserveAspectRatio: false,\r\n\r\n  // Overrides the default select color.\r\n  // Takes string values that represent a valid CSS color value; for example:\r\n  // 'transparent', 'Highlight', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\r\n  // Setting `null` uses the default color.\r\n  selectColor: null,\r\n\r\n  // Overrides the default highlight color.\r\n  highlightColor: null,\r\n\r\n  // Selectors for UI components\r\n  selector: {\r\n    slidehub: '.slidehub-container',\r\n    doc: '.doc',\r\n    scrollbox: '.doc-scrollbox',\r\n    itemContainer: '.page-container',\r\n    item: '.page'\r\n  }\r\n};\r\n","export { documentsData };\r\n\r\n/** @type {Array<[string, number]>} */\r\nconst documentsData = [\r\n  ['acrostic-talk.pdf', 100],\r\n  ['argumentation-cross-domain-talk.pdf', 9],\r\n  ['cicling14-talk.pdf', 14],\r\n  ['cikm13-talk.pdf', 19],\r\n  ['eurovis15-plagvis-talk.pdf', 63],\r\n  ['ijcnlp13-talk.pdf', 13],\r\n  ['jufo13-talk.pdf', 22],\r\n  ['leipzig-colloquium15-talk.pdf', 118],\r\n  ['netspeak-talk.pdf', 45],\r\n  ['ral15-picapica-talk.pdf', 82],\r\n  ['republica17-clickbait-talk.pdf', 14],\r\n  ['ukj16-picapica-talk.pdf', 46],\r\n  ['webquality12-talk.pdf', 41],\r\n  ['potthast_2011b.pdf', 61],\r\n  ['potthast_2012a.pdf', 28],\r\n  ['potthast_2016c.pdf', 88],\r\n  ['stein_2005b.pdf', 24],\r\n  ['stein_2006j.pdf', 33],\r\n  ['stein_2006l.pdf', 20],\r\n  ['stein_2007b.pdf', 43],\r\n  ['stein_2007d.pdf', 21],\r\n  ['stein_2007m.pdf', 24],\r\n  ['stein_2008b.pdf', 7],\r\n  ['stein_2008d.pdf', 20],\r\n  ['stein_2008j.pdf', 64],\r\n  ['stein_2009e.pdf', 31],\r\n  ['stein_2010h.pdf', 55],\r\n  ['stein_2010r.pdf', 10],\r\n  ['stein_2010t.pdf', 27],\r\n  ['stein_2010u.pdf', 25],\r\n  ['stein_2011e.pdf', 39],\r\n  ['stein_2011f.pdf', 20],\r\n  ['stein_2011h.pdf', 36],\r\n  ['stein_2011j.pdf', 51],\r\n  ['stein_2011k.pdf', 76],\r\n  ['stein_2011l.pdf', 64],\r\n  ['stein_2011q.pdf', 30],\r\n  ['stein_2011t.pdf', 24],\r\n  ['stein_2011u.pdf', 16],\r\n  ['stein_2012c.pdf', 34],\r\n  ['stein_2012m.pdf', 13],\r\n  ['stein_2012o.pdf', 34],\r\n  ['stein_2012q.pdf', 46],\r\n  ['stein_2012t.pdf', 26],\r\n  ['stein_2012u.pdf', 24],\r\n  ['stein_2012w.pdf', 20],\r\n  ['stein_2013a.pdf', 15],\r\n  ['stein_2013b.pdf', 47],\r\n  ['stein_2013f.pdf', 52],\r\n  ['stein_2013g.pdf', 17],\r\n  ['stein_2013h.pdf', 29],\r\n  ['stein_2014b.pdf', 14],\r\n  ['stein_2014f.pdf', 24],\r\n  ['stein_2014j.pdf', 31],\r\n  ['stein_2014k.pdf', 27],\r\n  ['stein_2015b.pdf', 35],\r\n  ['stein_2015c.pdf', 47],\r\n  ['stein_2015n.pdf', 13],\r\n  ['stein_2015o.pdf', 48],\r\n  ['stein_2016a.pdf', 36],\r\n  ['stein_2016b.pdf', 2],\r\n  ['stein_2016c.pdf', 34],\r\n  ['stein_2016d.pdf', 49],\r\n  ['stein_2016i.pdf', 11],\r\n  ['stein_2016j.pdf', 26],\r\n  ['stein_2016k.pdf', 44],\r\n  ['stein_2016l.pdf', 31],\r\n  ['stein_2016m.pdf', 67],\r\n  ['stein_2016o.pdf', 63],\r\n  ['stein_2017a.pdf', 17],\r\n  ['stein_2017b.pdf', 10],\r\n  ['stein_2017c.pdf', 11],\r\n  ['unit-de-client-technologies1.pdf', 87],\r\n  ['unit-de-client-technologies2.pdf', 45],\r\n  ['unit-de-conceptual-design1.pdf', 31],\r\n  ['unit-de-conceptual-design2.pdf', 52],\r\n  // [\"unit-de-conceptual-design3.pdf\", 1],\r\n  ['unit-de-configuration-basics.pdf', 34],\r\n  ['unit-de-constraints-fd1.pdf', 43],\r\n  ['unit-de-constraints-fd2.pdf', 50],\r\n  ['unit-de-constraints-ifd.pdf', 18],\r\n  ['unit-de-constraints-introduction.pdf', 34],\r\n  ['unit-de-db-introduction.pdf', 50],\r\n  ['unit-de-db-organization.pdf', 9],\r\n  ['unit-de-design-and-models.pdf', 28],\r\n  ['unit-de-diagnosis-bayes.pdf', 28],\r\n  ['unit-de-diagnosis-cbr.pdf', 35],\r\n  ['unit-de-diagnosis-dempster.pdf', 34],\r\n  ['unit-de-doclang-css.pdf', 35],\r\n  ['unit-de-doclang-html.pdf', 53],\r\n  ['unit-de-doclang-introduction.pdf', 30],\r\n  ['unit-de-doclang-xml-api.pdf', 77],\r\n  ['unit-de-doclang-xml-basics.pdf', 74],\r\n  ['unit-de-doclang-xml-schema.pdf', 92],\r\n  ['unit-de-doclang-xml-xsl.pdf', 115],\r\n  ['unit-de-ensemble-classifiers.pdf', 32],\r\n  ['unit-de-fuzzy-basics.pdf', 44],\r\n  ['unit-de-fuzzy-inference.pdf', 29],\r\n  ['unit-de-index-terms.pdf', 20],\r\n  ['unit-de-ir-evaluation.pdf', 19],\r\n  ['unit-de-ir-introduction.pdf', 25],\r\n  ['unit-de-ir-organization.pdf', 6],\r\n  ['unit-de-kbs-applications.pdf', 31],\r\n  ['unit-de-kbs-introduction.pdf', 28],\r\n  ['unit-de-kbs-organization.pdf', 7],\r\n  ['unit-de-logics-algebra.pdf', 3],\r\n  ['unit-de-logics-organization.pdf', 5],\r\n  ['unit-de-model-formation.pdf', 14],\r\n  ['unit-de-model-system.pdf', 18],\r\n  ['unit-de-network-protocol1.pdf', 44],\r\n  ['unit-de-network-protocol2.pdf', 38],\r\n  ['unit-de-network-protocol3.pdf', 53],\r\n  ['unit-de-non-monotonicity.pdf', 21],\r\n  ['unit-de-planning-algorithms.pdf', 56],\r\n  ['unit-de-planning-basics.pdf', 40],\r\n  ['unit-de-predicate-basics.pdf', 36],\r\n  ['unit-de-predicate-complexity.pdf', 6],\r\n  ['unit-de-predicate-sat-syntactical.pdf', 27],\r\n  ['unit-de-predicate-transformation.pdf', 23],\r\n  ['unit-de-propositional-basics.pdf', 58],\r\n  ['unit-de-propositional-complexity.pdf', 18],\r\n  ['unit-de-propositional-sat-semantical.pdf', 22],\r\n  ['unit-de-propositional-sat-syntactical.pdf', 56],\r\n  ['unit-de-propositional-transformation.pdf', 33],\r\n  ['unit-de-psk.pdf', 12],\r\n  ['unit-de-relational-algebra.pdf', 67],\r\n  ['unit-de-relational-calculus.pdf', 85],\r\n  // [\"unit-de-relational-design0.pdf\", 1],\r\n  ['unit-de-relational-design1.pdf', 43],\r\n  ['unit-de-relational-design2.pdf', 62],\r\n  ['unit-de-relational-theory1.pdf', 71],\r\n  ['unit-de-relational-theory2.pdf', 50],\r\n  ['unit-de-retrieval-models.pdf', 18],\r\n  ['unit-de-rm-algebraic.pdf', 45],\r\n  ['unit-de-rm-term-based.pdf', 24],\r\n  ['unit-de-rule-systems-inference.pdf', 39],\r\n  ['unit-de-rule-systems-not.pdf', 20],\r\n  ['unit-de-rule-systems.pdf', 58],\r\n  ['unit-de-self-organizing-maps.pdf', 30],\r\n  ['unit-de-semantic-web-introduction.pdf', 30],\r\n  ['unit-de-semantic-web-ontology.pdf', 72],\r\n  ['unit-de-semantic-web-rdf.pdf', 79],\r\n  ['unit-de-semantic-web-rdfsem.pdf', 27],\r\n  ['unit-de-semantic-web-rdfs.pdf', 32],\r\n  ['unit-de-server-technologies1.pdf', 63],\r\n  ['unit-de-server-technologies2.pdf', 84],\r\n  ['unit-de-sql1.pdf', 96],\r\n  ['unit-de-sql2.pdf', 38],\r\n  ['unit-de-sql3.pdf', 16],\r\n  ['unit-de-stemming.pdf', 12],\r\n  ['unit-de-symbol.pdf', 32],\r\n  ['unit-de-verification1.pdf', 46],\r\n  ['unit-de-verification2.pdf', 132],\r\n  ['unit-de-verification3.pdf', 32],\r\n  ['unit-de-verification.pdf', 210],\r\n  ['unit-de-webis-architectures1.pdf', 35],\r\n  ['unit-de-webis-architectures2.pdf', 17],\r\n  ['unit-de-wt-introduction.pdf', 57],\r\n  ['unit-de-wt-organization.pdf', 7],\r\n  ['unit-de-xps.pdf', 26],\r\n  ['unit-en-association-analysis.pdf', 2],\r\n  ['unit-en-astar-formal1.pdf', 63],\r\n  ['unit-en-astar-formal2.pdf', 65],\r\n  ['unit-en-astar-relaxed1.pdf', 42],\r\n  ['unit-en-astar-relaxed2.pdf', 32],\r\n  ['unit-en-basic-search1.pdf', 68],\r\n  ['unit-en-basic-search2.pdf', 38],\r\n  ['unit-en-bayesian-learning.pdf', 23],\r\n  ['unit-en-cluster-analysis-basics.pdf', 21],\r\n  ['unit-en-cluster-analysis-constrained.pdf', 38],\r\n  ['unit-en-cluster-analysis-density.pdf', 59],\r\n  ['unit-en-cluster-analysis-evaluation.pdf', 72],\r\n  ['unit-en-cluster-analysis-hierarchical.pdf', 85],\r\n  ['unit-en-cluster-analysis-iterative.pdf', 26],\r\n  ['unit-en-concept-learning.pdf', 53],\r\n  ['unit-en-data.pdf', 27],\r\n  ['unit-en-decision-trees-algorithms.pdf', 26],\r\n  ['unit-en-decision-trees-basics.pdf', 32],\r\n  ['unit-en-decision-trees-impurity.pdf', 33],\r\n  ['unit-en-decision-trees-pruning.pdf', 20],\r\n  ['unit-en-diagnosis-gde.pdf', 56],\r\n  ['unit-en-diagnosis-tms.pdf', 38],\r\n  ['unit-en-dm-overview.pdf', 10],\r\n  ['unit-en-game-playing-basics.pdf', 41],\r\n  ['unit-en-informed-bf1.pdf', 102],\r\n  ['unit-en-informed-bf2.pdf', 117],\r\n  ['unit-en-informed-bf3.pdf', 21],\r\n  ['unit-en-ml-introduction.pdf', 33],\r\n  ['unit-en-ml-organization.pdf', 8],\r\n  ['unit-en-multilayer-perceptron.pdf', 22],\r\n  ['unit-en-perceptron-learning.pdf', 59],\r\n  ['unit-en-performance-measures.pdf', 21],\r\n  ['unit-en-probability-basics.pdf', 20],\r\n  // [\"unit-en-radial-basis-functions.pdf\", 1],\r\n  ['unit-en-regression.pdf', 44],\r\n  ['unit-en-relaxed-models.pdf', 24],\r\n  ['unit-en-representation1.pdf', 34],\r\n  ['unit-en-representation2.pdf', 52],\r\n  ['unit-en-rule-mining.pdf', 2],\r\n  ['unit-en-search-introduction.pdf', 36],\r\n  ['unit-en-search-organization.pdf', 4]\r\n];\r\n","export { ReverseIterableMap };\r\n\r\n/**\r\n * A reverse-iterable map implementation based on the built-in [`Map`][Map] object.\r\n *\r\n * It exposes its order via iterable iterators which can be used for both forwards and backwards\r\n * iteration. As per `Map`, the order of a `ReverseIterableMap` is the insertion order.\r\n *\r\n * [Map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\r\n *\r\n * @typedef {class} ReverseIterableMapType\r\n * @template K, V\r\n * @property {Map<K, V>} _map\r\n * @property {ReverseIterableMapNode} _first\r\n * @property {ReverseIterableMapNode} _last\r\n *\r\n * @type {ReverseIterableMapType}\r\n */\r\nclass ReverseIterableMap {\r\n  /**\r\n   * An [iterable][iterable] object whose elements are key-value pairs.\r\n   *\r\n   * [iterable]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\r\n   *\r\n   * @param {Iterable?} iterable\r\n   * @public\r\n   */\r\n  constructor(iterable = null) {\r\n    this._map = new Map();\r\n    this._first = null;\r\n    this._last = null;\r\n\r\n    if (iterable) {\r\n      for (const [key, value] of iterable) {\r\n        this.set(key, value);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The [`@@toStringTag`][toStr] property is used is used when `toString()` is called on a\r\n   * `ReverseIterableMap` object.\r\n   *\r\n   * [toStr]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\r\n   *\r\n   * @returns {string} The string tag of the `ReverseIterableMap` class.\r\n   * @public\r\n   */\r\n  get [Symbol.toStringTag]() {\r\n    return 'ReverseIterableMap';\r\n  }\r\n\r\n  /**\r\n   * Returns the first `ReverseIterableMapNode` from a `ReverseIterableMap` object.\r\n   *\r\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\r\n   * @private\r\n   */\r\n  get first() {\r\n    return this._first;\r\n  }\r\n\r\n  /**\r\n   * Sets the first `ReverseIterableMapNode` of a `ReverseIterableMap` object.\r\n   *\r\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\r\n   * @private\r\n   */\r\n  set first(node) {\r\n    this._first = node;\r\n  }\r\n\r\n  /**\r\n   * Returns the last `ReverseIterableMapNode` from a `ReverseIterableMap` object.\r\n   *\r\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\r\n   * @private\r\n   */\r\n  get last() {\r\n    return this._last;\r\n  }\r\n\r\n  /**\r\n   * Sets the last `ReverseIterableMapNode` of a `ReverseIterableMap` object.\r\n   *\r\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\r\n   * @private\r\n   */\r\n  set last(node) {\r\n    this._last = node;\r\n  }\r\n\r\n  /**\r\n   * The `size` accessor property returns the number of elements in a `ReverseIterableMap` object.\r\n   * Calls [`Map.prototype.size`][size].\r\n   *\r\n   * [size]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\r\n   *\r\n   * @returns {number} The size of the ReverseIterableMap.\r\n   * @public\r\n   */\r\n  get size() {\r\n    return this._map.size;\r\n  }\r\n\r\n  /**\r\n   * The `clear()` method removes all elements from a `ReverseIterableMap` object. Calls\r\n   * [`Map.prototype.clear`][clear].\r\n   *\r\n   * [clear]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\r\n   *\r\n   * @public\r\n   */\r\n  clear() {\r\n    this._map.clear();\r\n    this._first = null;\r\n    this._last = null;\r\n  }\r\n\r\n  /**\r\n   * The `has()` method returns a boolean indicating whether an element with the specified key\r\n   * exists or not. Calls [`Map.prototype.has`][has].\r\n   *\r\n   * [has]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\r\n   *\r\n   * @param {*} key\r\n   * @returns {boolean} `true` if an element with the specified key exists in a\r\n   * `ReverseIterableMap` object; otherwise `false`.\r\n   * @public\r\n   */\r\n  has(key) {\r\n    return this._map.has(key);\r\n  }\r\n\r\n  /**\r\n   * The `get()` method returns a specified element from a `ReverseIterableMap` object. Calls\r\n   * [`Map.prototype.get`][get].\r\n   *\r\n   * [get]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\r\n   *\r\n   * @param {*} key\r\n   * @returns {*|undefined}\r\n   * @public\r\n   */\r\n  get(key) {\r\n    return this._map.get(key).value;\r\n  }\r\n\r\n  /**\r\n   * The `getLast()` method returns the last element from a `ReverseIterableMap` object.\r\n   *\r\n   * @returns {*|null} The last element or `null` if the map is empty.\r\n   * @public\r\n   */\r\n  getLast() {\r\n    if (this.last) {\r\n      return this.last.value;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * The `getFirst()` method returns the first element from a `ReverseIterableMap` object.\r\n   *\r\n   * @returns {*|null} The first element or `null` if the map is empty.\r\n   * @public\r\n   */\r\n  getFirst() {\r\n    if (this.first) {\r\n      return this.first.value;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * The `add()` method adds a new element to the internal `Map` object. It does not link itself\r\n   * with its neighboring elements which is why this method must never be called directly.\r\n   *\r\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\r\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\r\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\r\n   * @private\r\n   */\r\n  add(key, value) {\r\n    let node = this._map.get(key);\r\n\r\n    if (node) {\r\n      node.value = value;\r\n    } else {\r\n      node = new ReverseIterableMapNode(key, value);\r\n\r\n      this._map.set(key, node);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * The `set()` method adds a new element to a `ReverseIterableMap` object in insertion order or\r\n   * updates the value of an existing element.\r\n   *\r\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\r\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\r\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\r\n   * @public\r\n   */\r\n  set(key, value) {\r\n    const node = this.add(key, value);\r\n\r\n    if (this.first === null && this.last === null) {\r\n      this.first = node;\r\n      this.last = node;\r\n    } else {\r\n      node.prev = this.last;\r\n      this.last.next = node;\r\n      this.last = node;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The `setFront()` method adds a new element to a `ReverseIterableMap` object in\r\n   * reverse insertion order or updates the value of an existing element.\r\n   *\r\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\r\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\r\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\r\n   * @public\r\n   */\r\n  setFirst(key, value) {\r\n    const node = this.add(key, value);\r\n\r\n    if (this.first === null && this.last === null) {\r\n      this.first = node;\r\n      this.last = node;\r\n    } else {\r\n      node.next = this.first;\r\n      this.first.prev = node;\r\n      this.first = node;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The `delete()` method removes the specified element from a\r\n   * `ReverseIterableMap` object. Calls [`Map.prototype.delete`][del].\r\n   *\r\n   * [del]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\r\n   *\r\n   * @param {*} key The key of the element to remove from the\r\n   * `ReverseIterableMap` object.\r\n   * @returns {boolean} `true` if an element in the `ReverseIterableMap` object\r\n   * existed and has been removed, or `false` if the element does not exist.\r\n   * @public\r\n   */\r\n  delete(key) {\r\n    if (this.has(key)) {\r\n      const node = this._map.get(key);\r\n\r\n      if (this.first === this.last) {\r\n        this.first = null;\r\n        this.last = null;\r\n      } else if (this.first === node) {\r\n        node.next.prev = null;\r\n        this.first = node.next;\r\n      } else if (this.last === node) {\r\n        node.prev.next = null;\r\n        this.last = node.prev;\r\n      } else {\r\n        node.prev.next = node.next;\r\n        node.next.prev = node.prev;\r\n      }\r\n\r\n      this._map.delete(key);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * The `forEach()` method executes a provided function once per each key/value pair in the\r\n   * `ReverseIterableMap` object, in insertion order. For reference, see\r\n   * [`Map.prototype.forEach`][fe].\r\n   *\r\n   * [fe]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\r\n   *\r\n   * @param {function} callback\r\n   * @param {*?} thisArg\r\n   * @public\r\n   */\r\n  forEach(callback, thisArg = undefined) {\r\n    for (const [key, value] of this.entries()) {\r\n      callback(value, key, thisArg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The `forEachReverse()` method executes a provided function once per each key/value pair in the\r\n   * `ReverseIterableMap` object, in reverse insertion order.\r\n   *\r\n   * @param {function} callback\r\n   * @param {*?} thisArg\r\n   * @public\r\n   */\r\n  forEachReverse(callback, thisArg = undefined) {\r\n    for (const [key, value] of this.entries().reverse()) {\r\n      callback(value, key, thisArg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The initial value of the @@iterator property is the same function object as the initial value\r\n   * of the entries property.\r\n   *\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\r\n   *\r\n   * @returns {IterableIterator}\r\n   * @public\r\n   */\r\n  [Symbol.iterator]() {\r\n    return this.entries();\r\n  }\r\n\r\n  /**\r\n   * Allows usage of the [iteration protocols][ip] for reverse iteration.\r\n   *\r\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n   *\r\n   * Examples:\r\n   *\r\n   * ```js\r\n   * const map = new ReverseIterableMap();\r\n   *\r\n   * [...map.reverse()];\r\n   *\r\n   * for (const [key, value] of map.reverse()) {\r\n   *   console.log(key, value);\r\n   * }\r\n   * ```\r\n   *\r\n   * @returns {IterableIterator}\r\n   * @public\r\n   */\r\n  reverse() {\r\n    return this.entries().reverse();\r\n  }\r\n\r\n  /**\r\n   * The `entries()` method returns a new [Iterator][it] object that contains the `[key, value]`\r\n   * pairs for each element in a `ReverseIterableMap` object in insertion order.\r\n   *\r\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\r\n   *\r\n   * @returns {IterableIterator}\r\n   * @public\r\n   */\r\n  entries() {\r\n    const getIteratorValue = function(node) {\r\n      return [node.key, node.value];\r\n    };\r\n\r\n    return this.iterableIterator(getIteratorValue);\r\n  }\r\n\r\n  /**\r\n   * The `keys()` method returns a new [Iterator][it] object that contains the keys for each\r\n   * element in a `ReverseIterableMap` object in insertion order.\r\n   *\r\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\r\n   *\r\n   * @returns {IterableIterator}\r\n   * @public\r\n   */\r\n  keys() {\r\n    const getIteratorValue = function(node) {\r\n      return node.key;\r\n    };\r\n\r\n    return this.iterableIterator(getIteratorValue);\r\n  }\r\n\r\n  /**\r\n   * The `values()` method returns a new [Iterator][it] object that contains the values for each\r\n   * element in a `ReverseIterableMap` object in insertion order.\r\n   *\r\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\r\n   *\r\n   * @returns {IterableIterator}\r\n   * @public\r\n   */\r\n  values() {\r\n    const getIteratorValue = function(node) {\r\n      return node.value;\r\n    };\r\n\r\n    return this.iterableIterator(getIteratorValue);\r\n  }\r\n\r\n  /**\r\n   * The `iteratorFor()` method returns a new [Iterator][it] object that contains the\r\n   * `[key, value]` pairs for each element in a `ReverseIterableMap` object in insertion order\r\n   *  **starting with the pair specified by the `key` parameter**.\r\n   *\r\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\r\n   *\r\n   * @param {*} key The key of the element to start iterating from.\r\n   * @returns {IterableIterator}\r\n   * @public\r\n   */\r\n  iteratorFor(key) {\r\n    let startNode = this._map.get(key);\r\n    const getIteratorValue = function(node) {\r\n      return [node.key, node.value];\r\n    };\r\n\r\n    return this.iterableIterator(getIteratorValue, startNode);\r\n  }\r\n\r\n  /**\r\n   * Returns an object which is both an iterable and an iterator. It fulfills the requirements of\r\n   * the [iteration protocols][ip] plus allowing reverse-iteration.\r\n   *\r\n   * - **Iterator requirements**: An object that implements a function `next`. This function\r\n   *   returns an object with two properties: `value` and `done`.\r\n   *\r\n   * - **Iterable requirements**: An object that implements a function `[Symbol.iterator]()`. This\r\n   *   function returns an iterator.\r\n   *\r\n   * - **Reverse-iterable requirements**: An object that implements a function `reverse()`. This\r\n   *   function returns an iterator with the special behavior of iterating in reverse insertion\r\n   *   order. This is non-standard behavior.\r\n   *\r\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n   *\r\n   * @param {function} getIteratorValue\r\n   * @param {ReverseIterableMapNode?} startNode\r\n   * @returns {IterableIterator}\r\n   * @private\r\n   */\r\n  iterableIterator(getIteratorValue, startNode = undefined) {\r\n    let currentNode = startNode ? startNode : this.first;\r\n    // Store the this.last node as inside the reverse() method, `this` will be\r\n    // bound to iterableIterator, not ReverseIterableMap. That’s on purpose.\r\n    const last = this.last;\r\n    let nextProp = 'next';\r\n\r\n    return {\r\n      reverse() {\r\n        currentNode = startNode ? startNode : last;\r\n        nextProp = 'prev';\r\n        return this;\r\n      },\r\n      [Symbol.iterator]() {\r\n        // Return the iterable itself.\r\n        return this;\r\n      },\r\n      next: function() {\r\n        let value;\r\n        if (currentNode) {\r\n          value = getIteratorValue(currentNode);\r\n          currentNode = currentNode[nextProp];\r\n        }\r\n        return iteratorResult(value);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * The `ReverseIterableMapNode` object represents an element in a `ReverseIterableMap` object.\r\n * Its main purpose is storing a `[key, value]` pair. Additionally, it keeps references to the\r\n * `ReverseIterableMapNode` objects appearing before and after itself in a `ReverseIterableMap`\r\n * object.\r\n *\r\n * @typedef {class} ReverseIterableMapNodeType\r\n * @template K, V\r\n * @property {K} _key\r\n * @property {V} _value\r\n * @property {ReverseIterableMapNode} _prev\r\n * @property {ReverseIterableMapNode} _next\r\n *\r\n * @type {ReverseIterableMapNodeType}\r\n * @protected\r\n */\r\nclass ReverseIterableMapNode {\r\n  /**\r\n   * A `[key, value]` pair that is part of a `ReverseIterableMap` object.\r\n   *\r\n   * @template K, V\r\n   * @param {K} key\r\n   * @param {V} value\r\n   */\r\n  constructor(key, value) {\r\n    this._key = key;\r\n    this._value = value;\r\n    this._next = null;\r\n    this._prev = null;\r\n  }\r\n\r\n  /**\r\n   * Returns the key from a `ReverseIterableMapNode` object.\r\n   *\r\n   * @returns {*} The key.\r\n   * @protected\r\n   */\r\n  get key() {\r\n    return this._key;\r\n  }\r\n\r\n  /**\r\n   * Returns the value from a `ReverseIterableMapNode` object.\r\n   *\r\n   * @returns {*} The value.\r\n   * @protected\r\n   */\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * Sets the value of a `ReverseIterableMapNode` object.\r\n   *\r\n   * @param {*} value The value.\r\n   * @protected\r\n   */\r\n  set value(value) {\r\n    this._value = value;\r\n  }\r\n\r\n  /**\r\n   * Returns the reference to the next node of a `ReverseIterableMapNode` object.\r\n   *\r\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\r\n   * @protected\r\n   */\r\n  get next() {\r\n    return this._next;\r\n  }\r\n\r\n  /**\r\n   * Sets the reference to the next node of a `ReverseIterableMapNode` object.\r\n   *\r\n   * @param {ReverseIterableMapNode} next The `ReverseIterableMapNode` object.\r\n   * @protected\r\n   */\r\n  set next(next) {\r\n    this._next = next;\r\n  }\r\n\r\n  /**\r\n   * Returns the reference to the previous node of a `ReverseIterableMapNode` object.\r\n   *\r\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\r\n   * @protected\r\n   */\r\n  get prev() {\r\n    return this._prev;\r\n  }\r\n\r\n  /**\r\n   * Sets the reference to the previous node of a `ReverseIterableMapNode` object.\r\n   *\r\n   * @param {ReverseIterableMapNode} prev The `ReverseIterableMapNode` object.\r\n   * @protected\r\n   */\r\n  set prev(prev) {\r\n    this._prev = prev;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an `IteratorResult` object as per the following rules:\r\n * - If `value` is not `undefined`, `done` is `false`.\r\n * - If `value` is `undefined`, `done` is `true`. In this case, `value` may be omitted.\r\n *\r\n * This function does not belong to `ReverseIterableMap` as it doesn’t need access to any\r\n * of its properties.\r\n *\r\n * @param {*|undefined} value\r\n * @returns {IteratorResult}\r\n */\r\nfunction iteratorResult(value) {\r\n  return {\r\n    value: value,\r\n    done: value === undefined\r\n  };\r\n}\r\n","export { clamp };\r\n\r\n/**\r\n * Clamps the given value between the min and max boundaries.\r\n *\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @returns {Number} - `value` if `min <= value <= max`\r\n *                   - `min` if `value < min`\r\n *                   - `max` if `value > max`\r\n */\r\nfunction clamp(value, min, max) {\r\n  return Math.max(min, Math.min(value, max));\r\n}\r\n","import { config } from '../config';\r\nimport { clamp } from '../util/clamp';\r\n\r\nexport { ItemNavigator };\r\n\r\n/**\r\n * Item Navigator\r\n *\r\n * **Usage**:\r\n *\r\n * ```\r\n * const navigateItem = new ItemNavigator(slidehub, doc);\r\n * navigateItem.by(3);\r\n * ```\r\n */\r\nclass ItemNavigator {\r\n  /**\r\n   * @param {Slidehub} slidehub\r\n   * @param {SlidehubDocument} doc\r\n   * @public\r\n   */\r\n  constructor(slidehub, doc) {\r\n    this.slidehub = slidehub;\r\n    this._doc = doc;\r\n    this._itemPos = 0;\r\n    this._selectedItemPos = 0;\r\n  }\r\n\r\n  /**\r\n   * Navigate item down.\r\n   *\r\n   * @param {Number} distance\r\n   * @public\r\n   */\r\n  left(distance) {\r\n    this.by(-distance);\r\n  }\r\n\r\n  /**\r\n   * Navigate item down.\r\n   *\r\n   * @param {Number} distance\r\n   * @public\r\n   */\r\n  right(distance) {\r\n    this.by(distance);\r\n  }\r\n\r\n  /**\r\n   * Main interface for item navigation. The algorithm works like this:\r\n   *\r\n   * 1. Determine the new position of the selected item.\r\n   *\r\n   *    1.1. If the new position is different than the current position, update it.\r\n   *\r\n   * 2. If the current item position is not aligned properly (i.e. is not an integer),\r\n   *    its position will be rounded to the next closest integer position.\r\n   *\r\n   * 3. If the `keepSelectedPageInFirstColumn` option is turned on\r\n   *    and all items are visible within their document, return.\r\n   *\r\n   * 4. Determine the new position of the item.\r\n   *\r\n   *    4.1. If the new position is the same as the current position, return.\r\n   *\r\n   *    4.2. Update the item position with the new value.\r\n   *\r\n   * @param {Number} vector\r\n   * @private\r\n   */\r\n  by(vector) {\r\n    const newSelectedItemPos = this.determineNewSelectedItemPos(vector);\r\n    if (newSelectedItemPos !== this.selectedItemPos) {\r\n      this.updateSelectedItemPos(newSelectedItemPos);\r\n    }\r\n\r\n    // If the current item position is not properly aligned …\r\n    if (!Number.isInteger(this.itemPos)) {\r\n      this.updateItemPos(Math.round(this.itemPos));\r\n    }\r\n\r\n    // If all items are already visible, we’re done here.\r\n    if (!config.keepSelectedPageInFirstColumn && this.allItemsVisible()) {\r\n      return;\r\n    }\r\n\r\n    const newItemPos = this.determineNewItemPos(vector);\r\n\r\n    // Nothing to do, current position is already the destination.\r\n    if (newItemPos === this.itemPos) {\r\n      return;\r\n    }\r\n\r\n    this.updateItemPos(newItemPos);\r\n  }\r\n\r\n  /**\r\n   * @returns {SlidehubDocument}\r\n   * @public\r\n   */\r\n  get doc() {\r\n    return this._doc;\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   * @public\r\n   */\r\n  get itemPos() {\r\n    return this._itemPos;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} itemPos\r\n   * @private\r\n   */\r\n  set itemPos(itemPos) {\r\n    this._itemPos = itemPos;\r\n  }\r\n\r\n  /**\r\n   * Updates the position of the item.\r\n   *\r\n   * @param {Number} newItemPos\r\n   * @private\r\n   */\r\n  updateItemPos(newItemPos) {\r\n    this.itemPos = newItemPos;\r\n    this.doc.scrollboxNode.scrollLeft = newItemPos * this.slidehub.itemWidth;\r\n  }\r\n\r\n  /**\r\n   * Determines the new position of the item based on a direction vector.\r\n   *\r\n   * @param {Number} vector\r\n   * @returns {Number}\r\n   * @private\r\n   */\r\n  determineNewItemPos(vector) {\r\n    const newItemPos = this.itemPos + vector;\r\n    const visibleItems = this.slidehub.visibleItems;\r\n\r\n    // For certain settings, some item positions don’t need to accessible because they are already\r\n    // visible\r\n    const invalidItemPositions = config.keepSelectedPageInFirstColumn ? 0 : visibleItems - 1;\r\n    const maxPos = this.doc.itemCount() - invalidItemPositions;\r\n\r\n    return clamp(newItemPos, 0, maxPos);\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   * @public\r\n   */\r\n  get selectedItemPos() {\r\n    return this._selectedItemPos;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} selectedItemPos\r\n   * @private\r\n   */\r\n  set selectedItemPos(selectedItemPos) {\r\n    this._selectedItemPos = selectedItemPos;\r\n  }\r\n\r\n  /**\r\n   * Updates the position of the selected item.\r\n   *\r\n   * @param {Number} newSelectedItemPos\r\n   * @private\r\n   */\r\n  updateSelectedItemPos(newSelectedItemPos) {\r\n    this.selectedItemPos = newSelectedItemPos;\r\n    this.doc.selectItem(this.doc.items.item(newSelectedItemPos));\r\n  }\r\n\r\n  /**\r\n   * Determines the new position of the selected item based on `distance`.\r\n   *\r\n   * @param {Number} vector\r\n   * @returns {Number}\r\n   * @private\r\n   */\r\n  determineNewSelectedItemPos(vector) {\r\n    const newSelectedItemPos = this.selectedItemPos + vector;\r\n    return clamp(newSelectedItemPos, 0, this.doc.itemCount());\r\n  }\r\n\r\n  /**\r\n   * Tests whether a document’s items are all visible.\r\n   *\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  allItemsVisible() {\r\n    return this.doc.itemCount < this.slidehub.numberOfVisibleItems;\r\n  }\r\n};\r\n","import { config } from '../config';\r\nimport { ItemNavigator } from './ItemNavigator';\r\n\r\nexport { SlidehubDocument };\r\n\r\nconst selectClassName = 'selected';\r\nconst hoverClassName = 'highlighted';\r\n\r\n/**\r\n * Slidehub Document\r\n */\r\nclass SlidehubDocument {\r\n  /**\r\n   * @param {String} name\r\n   * @param {Number} imageCount\r\n   */\r\n  constructor(slidehub, name, imageCount) {\r\n    this.slidehub = slidehub;\r\n\r\n    this._name = name;\r\n    this._imageCount = imageCount;\r\n    this._loaded = false;\r\n\r\n    this._node = null;\r\n    this._scrollboxNode = null;\r\n    this._items = null;\r\n    this._selectedItemNode = null;\r\n    this._hoveredItemNode = null;\r\n    this._itemNavigator = null;\r\n  }\r\n\r\n  /**\r\n   * @returns {String}\r\n   */\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   */\r\n  get imageCount() {\r\n    return this._imageCount;\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  get loaded() {\r\n    return this._loaded;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} loaded\r\n   */\r\n  set loaded(loaded) {\r\n    this._loaded = loaded;\r\n  }\r\n\r\n  get node() {\r\n    return this._node;\r\n  }\r\n\r\n  set node(node) {\r\n    this._node = node;\r\n  }\r\n\r\n  get scrollboxNode() {\r\n    return this._scrollboxNode;\r\n  }\r\n\r\n  get items() {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   */\r\n  itemCount() {\r\n    return this.items.length - 1;\r\n  }\r\n\r\n  get selectedItemNode() {\r\n    return this._selectedItemNode;\r\n  }\r\n\r\n  set selectedItemNode(item) {\r\n    this._selectedItemNode = item;\r\n  }\r\n\r\n  /**\r\n   * Sets a new selected item.\r\n   *\r\n   * @param {Element} targetItemNode\r\n   */\r\n  selectItem(targetItemNode) {\r\n    const itemContainer = targetItemNode.parentElement;\r\n    if (this.selectedItemNode && itemContainer.contains(this.selectedItemNode)) {\r\n      this.selectedItemNode.classList.remove(selectClassName);\r\n    }\r\n\r\n    this.selectedItemNode = targetItemNode;\r\n    this.selectedItemNode.classList.add(selectClassName);\r\n\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  get hoveredItemNode() {\r\n    return this._hoveredItemNode;\r\n  }\r\n\r\n  set hoveredItemNode(item) {\r\n    this._hoveredItemNode = item;\r\n  }\r\n\r\n  /**\r\n   * Sets a new hovered item.\r\n   *\r\n   * @param {Element} targetItemNode\r\n   */\r\n  hoverItem(targetItemNode) {\r\n    this.unhoverItem();\r\n\r\n    this.hoveredItemNode = targetItemNode;\r\n    this.hoveredItemNode.classList.add(hoverClassName);\r\n\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes the hover from the currently hovered item.\r\n   */\r\n  unhoverItem() {\r\n    if (this.hoveredItemNode) {\r\n      this.hoveredItemNode.classList.remove(hoverClassName);\r\n      this.hoveredItemNode = null;\r\n    }\r\n  }\r\n\r\n  get navigateItem() {\r\n    return this._itemNavigator;\r\n  }\r\n\r\n  load() {\r\n    const markup = this.createMarkup();\r\n    const docNode = document.getElementById(this.name);\r\n    docNode.insertAdjacentHTML('beforeend', markup);\r\n\r\n    this.setNode(docNode);\r\n\r\n    return docNode;\r\n  }\r\n\r\n  /**\r\n   * Creates the complete markup for a document under the following assumptions:\r\n   * - A file named `this.name` exists on the document assets path\r\n   * - The document’s item images are on the image assets path\r\n   *\r\n   * @returns {String}\r\n   */\r\n  createMarkup() {\r\n    const scrollboxClassName = config.selector.scrollbox.slice(1);\r\n    const itemContainerClassName = config.selector.itemContainer.slice(1);\r\n    const itemClassName = config.selector.item.slice(1);\r\n\r\n    let items = '';\r\n    for (var i = 0; i < this.imageCount; i++) {\r\n      const imageSource = `${config.assets.images}/${this.name}-${i}.png`;\r\n      items += `<div class=\"${itemClassName}\" data-page=\"${i + 1}\">\r\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\r\n      </div>`;\r\n    }\r\n\r\n    const documentSource = `${config.assets.documents}/${this.name}`;\r\n\r\n    const metaSlide = `<div class=\"${itemClassName} ${itemClassName}--text\" data-page=\"0\">\r\n      <div class=\"doc-meta\">\r\n        <h2 class=\"doc-meta__title\">\r\n          <a href=\"${documentSource}\">${this.name}</a>\r\n        </h2>\r\n        by author, ${this.imageCount} pages, 2018\r\n      </div>\r\n    </div>`;\r\n\r\n    const dummyPage = `<div\r\n      class=\"${itemClassName} dummy-page\"\r\n      aria-hidden=\"true\"\r\n      style=\"visibility: hidden;\"\r\n    ></div>`;\r\n\r\n    return `<div class=\"${scrollboxClassName}\">\r\n      <div class=\"${itemContainerClassName}\">\r\n        ${config.metaSlide ? metaSlide : ''}\r\n        ${items}\r\n        ${dummyPage}\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} node\r\n   */\r\n  setNode(node) {\r\n    this.node = node;\r\n    this._scrollboxNode = node.querySelector(config.selector.scrollbox);\r\n    this._items = node.querySelectorAll('[data-page]');\r\n    this._itemNavigator = new ItemNavigator(this.slidehub, this);\r\n\r\n    if (!this.slidehub.selectedDocument) {\r\n      this.slidehub.selectDocument(this);\r\n    }\r\n    this.selectItem(node.querySelector(config.selector.item));\r\n\r\n    this.loaded = true;\r\n  }\r\n};\r\n","import { config } from '../config';\r\n\r\nexport { SlidehubImageLoader };\r\n\r\n/**\r\n * Loads document images when needed (i.e. lazy-loading).\r\n */\r\nclass SlidehubImageLoader {\r\n  constructor(slidehub) {\r\n    this.slidehub = slidehub;\r\n    this.imageObserver = null;\r\n\r\n    if ('IntersectionObserver' in window) {\r\n      const imageObserverOptions = {\r\n        root: slidehub.node,\r\n        rootMargin: '500px 1000px'\r\n      };\r\n\r\n      this.imageObserver = new IntersectionObserver(imageObservationHandler, imageObserverOptions);\r\n    }\r\n  }\r\n\r\n  start() {\r\n    if (this.imageObserver) {\r\n      this.observeExistingDocuments();\r\n      this.observeNewDocuments();\r\n    } else {\r\n      const images = Array.from(this.slidehub.node.querySelectorAll('img[data-src]'));\r\n      images.forEach(image => loadImage(image));\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  observeExistingDocuments() {\r\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\r\n    documentNodes.forEach(docNode => this.startImageObserver(docNode));\r\n  }\r\n\r\n  /**\r\n   * Starts the image observer on all lazy-loading images.\r\n   *\r\n   * @param {HTMLElement} docNode\r\n   */\r\n  startImageObserver(docNode) {\r\n    const images = Array.from(docNode.querySelectorAll('img[data-src]'));\r\n    images.forEach(image => this.imageObserver.observe(image));\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  observeNewDocuments() {\r\n    const mutationObserverOptions = {\r\n      childList: true\r\n    };\r\n\r\n    const mutationObserver = new MutationObserver(this.mutationHandler.bind(this));\r\n\r\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\r\n    documentNodes.forEach(docNode => {\r\n      mutationObserver.observe(docNode, mutationObserverOptions);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {*} mutationsList\r\n   */\r\n  mutationHandler(mutationsList) {\r\n    for (const mutation of mutationsList) {\r\n      if (mutation.addedNodes.length !== 0) {\r\n        this.startImageObserver(mutation.target);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles lazy-loading document images.\r\n *\r\n * @param {*} entries\r\n * @param {IntersectionObserver} observer\r\n */\r\nfunction imageObservationHandler(entries, observer) {\r\n  for (const entry of entries) {\r\n    if (entry.isIntersecting) {\r\n      loadImage(entry.target);\r\n      observer.unobserve(entry.target);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Replaces the data-src attribute with the src attribute, causing the browser to load the image.\r\n *\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction loadImage(image) {\r\n  if (!image.dataset.src) {\r\n    console.error('Couldn’t load image due to missing data-src attribute.', image);\r\n    return;\r\n  }\r\n\r\n  image.setAttribute('src', image.dataset.src);\r\n  image.removeAttribute('data-src');\r\n  image.addEventListener('load', () => handleItemImageLoaded(image));\r\n}\r\n\r\n/**\r\n * Plain wrapper for triggering certain actions once an image has loaded.\r\n *\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction handleItemImageLoaded(image) {\r\n  if (config.preserveAspectRatio) {\r\n    setItemAspectRatio(image);\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the aspect ratio of an image and stores it in the DOM as a\r\n * custom CSS property.\r\n *\r\n * @param {HTMLImageElement} image\r\n */\r\nfunction setItemAspectRatio(image) {\r\n  const docNode = image.closest(config.selector.doc);\r\n\r\n  if (docNode && !docNode.style.cssText.includes('--page-aspect-ratio')) {\r\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\r\n    docNode.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\r\n  }\r\n}\r\n","export { listener };\r\n\r\n/**\r\n * Feature detection for passive event listeners as per:\r\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\r\n */\r\n\r\nlet supportsPassive = false;\r\n\r\ntry {\r\n  const opts = Object.defineProperty({}, 'passive', {\r\n    get: function () {\r\n      supportsPassive = true;\r\n    }\r\n  });\r\n\r\n  window.addEventListener('testPassive', null, opts);\r\n  window.removeEventListener('testPassive', null, opts);\r\n} catch (e) {}\r\n\r\n/**\r\n * @typedef {Object} AddEventListenerOptionsObject\r\n * @property {Boolean|AddEventListenerOptions} active\r\n * @property {Boolean|AddEventListenerOptions} passive\r\n */\r\n\r\n/**\r\n * Stores the third argument for `addEventListener` for both cases\r\n * @type {AddEventListenerOptionsObject}\r\n */\r\nconst listener = {\r\n  active: supportsPassive ? { passive: false } : false,\r\n  passive: supportsPassive ? { passive: true } : false\r\n};\r\n","import { config } from '../config';\r\nimport { listener } from '../util/passive-event-listener';\r\n\r\nexport { SlidehubMouseInteraction };\r\n\r\nconst scrolling = {\r\n  vertical: {\r\n    delta: 'deltaY'\r\n  },\r\n  horizontal: {\r\n    delta: 'deltaX'\r\n  }\r\n};\r\n\r\n/**\r\n * Mouse Interaction.\r\n */\r\nclass SlidehubMouseInteraction {\r\n  constructor(slidehub) {\r\n    this.slidehub = slidehub;\r\n  }\r\n\r\n  start() {\r\n    this.enableModifier();\r\n    this.initExistingDocuments();\r\n  }\r\n\r\n  initExistingDocuments() {\r\n    const documents = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\r\n    documents.forEach(docNode => this.initMouseInteraction(docNode));\r\n  }\r\n\r\n  /**\r\n   * @param {Element} docNode\r\n   */\r\n  initMouseInteraction(docNode) {\r\n    docNode.addEventListener('wheel', this.handleWheelInteraction.bind(this), listener.active);\r\n    docNode.addEventListener('click', this.handleClickSelect.bind(this), listener.passive);\r\n    docNode.addEventListener('mousemove', this.handleMoveHover.bind(this), listener.passive);\r\n  }\r\n\r\n  /**\r\n   * Handles wheel navigation.\r\n   *\r\n   * @param {WheelEvent} event\r\n   */\r\n  handleWheelInteraction(event) {\r\n    // Don’t handle scrolling on elements that are not inside a document\r\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\r\n\r\n    if (!doc.loaded) {\r\n      return;\r\n    }\r\n\r\n    const ratio = Math.abs(event.deltaX / event.deltaY);\r\n    const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\r\n\r\n    // When scrolling vertically, only trigger navigation when modifier is pressed\r\n    if (scrollingDirection === scrolling.vertical && event.shiftKey) {\r\n      // Prevent vertical scrolling\r\n      event.preventDefault();\r\n\r\n      const delta = event[scrollingDirection.delta];\r\n\r\n      doc.navigateItem.by(Math.sign(delta));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects documents/items on click.\r\n   *\r\n   * @param {MouseEvent} event\r\n   */\r\n  handleClickSelect(event) {\r\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\r\n\r\n    if (!doc.loaded) {\r\n      return;\r\n    }\r\n\r\n    this.slidehub.selectDocument(doc);\r\n\r\n    if (config.keepSelectedPageInFirstColumn) {\r\n      return;\r\n    }\r\n\r\n    const item = event.target.closest(config.selector.item);\r\n    if (item) {\r\n      doc.selectItem(item);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Highlights documents/items on hover.\r\n   *\r\n   * @param {MouseEvent} event\r\n   */\r\n  handleMoveHover(event) {\r\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\r\n\r\n    if (!doc.loaded) {\r\n      return;\r\n    }\r\n\r\n    this.slidehub.hoverDocument(doc);\r\n\r\n    if (config.keepSelectedPageInFirstColumn) {\r\n      return;\r\n    }\r\n\r\n    const item = event.target.closest(config.selector.item);\r\n    if (item) {\r\n      doc.hoverItem(item);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wrapper for enabling all event listeners related to modifier handling.\r\n   */\r\n  enableModifier() {\r\n    document.addEventListener('keydown', this.onModifierDown.bind(this), listener.passive);\r\n    document.addEventListener('keyup', this.onModifierUp.bind(this), listener.passive);\r\n    window.addEventListener('blur', this.onModifierBlur.bind(this), listener.passive);\r\n  }\r\n\r\n  /**\r\n   * Displays a special cursor when the modifier is pressed.\r\n   *\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  onModifierDown(event) {\r\n    const doc = this.slidehub.hoveredDocument;\r\n    if (doc && event.keyCode === 16) {\r\n      doc.node.style.setProperty('cursor', 'ew-resize');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes the special cursor when the modifier is no longer pressed.\r\n   *\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  onModifierUp(event) {\r\n    const doc = this.slidehub.hoveredDocument;\r\n    if (doc && event.keyCode === 16) {\r\n      doc.node.style.setProperty('cursor', 'auto');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes the special cursor when the user somehow leaves the page.\r\n   */\r\n  onModifierBlur() {\r\n    const doc = this.slidehub.hoveredDocument;\r\n    if (doc) {\r\n      doc.node.style.setProperty('cursor', 'auto');\r\n    }\r\n  }\r\n};\r\n","import { listener } from '../util/passive-event-listener';\r\n\r\nexport { SlidehubKeyboardInteraction };\r\n\r\nconst controlKeyNames = {\r\n  33: 'pageUp',\r\n  34: 'pageDown',\r\n  35: 'endKey',\r\n  36: 'homeKey',\r\n  37: 'arrowLeft',\r\n  38: 'arrowUp',\r\n  39: 'arrowRight',\r\n  40: 'arrowDown'\r\n};\r\n\r\n/**\r\n * Keyboard Interaction.\r\n */\r\nclass SlidehubKeyboardInteraction {\r\n  constructor(slidehub) {\r\n    this.slidehub = slidehub;\r\n\r\n    this.controlKey = {\r\n      homeKey: {\r\n        trigger: () => {\r\n          this.slidehub.selectedDocument.navigateItem.left(\r\n            this.slidehub.selectedDocument.itemCount()\r\n          );\r\n        }\r\n      },\r\n      endKey: {\r\n        trigger: () => {\r\n          this.slidehub.selectedDocument.navigateItem.right(\r\n            this.slidehub.selectedDocument.itemCount()\r\n          );\r\n        }\r\n      },\r\n      arrowLeft: {\r\n        trigger: event => {\r\n          this.slidehub.selectedDocument.navigateItem.left(event.shiftKey ? 3 : 1);\r\n        }\r\n      },\r\n      arrowRight: {\r\n        trigger: event => {\r\n          this.slidehub.selectedDocument.navigateItem.right(event.shiftKey ? 3 : 1);\r\n        }\r\n      },\r\n      arrowUp: {\r\n        trigger: event => {\r\n          this.slidehub.navigateDocument.up(event.shiftKey ? 3 : 1);\r\n        }\r\n      },\r\n      arrowDown: {\r\n        trigger: event => {\r\n          this.slidehub.navigateDocument.down(event.shiftKey ? 3 : 1);\r\n        }\r\n      },\r\n      pageUp: {\r\n        trigger: () => {\r\n          this.slidehub.navigateDocument.up(3);\r\n        }\r\n      },\r\n      pageDown: {\r\n        trigger: () => {\r\n          this.slidehub.navigateDocument.down(3);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  start() {\r\n    document.addEventListener('keydown', this.handleKeyboardInput.bind(this), listener.active);\r\n  }\r\n\r\n  /**\r\n   * Handles keyboard interactions with documents and items.\r\n   *\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  handleKeyboardInput(event) {\r\n    if (event.keyCode in controlKeyNames) {\r\n      event.preventDefault();\r\n      const keyName = controlKeyNames[event.keyCode];\r\n      this.controlKey[keyName].trigger(event);\r\n    }\r\n  }\r\n};\r\n","import { listener } from '../util/passive-event-listener';\r\n\r\nexport { enableModals };\r\n\r\n/**\r\n * Modal window.\r\n *\r\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\r\n * https://github.com/gdkraus/accessible-modal-dialog\r\n */\r\n\r\nlet lastFocusedElement;\r\n\r\nfunction enableModals() {\r\n  const buttonArea = document.querySelector('[data-slidehub-modal-buttons]');\r\n\r\n  if (!buttonArea) {\r\n    return;\r\n  }\r\n\r\n  const shortcutsOpenButton = createOpenButton('Shortcuts');\r\n  buttonArea.insertAdjacentHTML('beforeend', shortcutsOpenButton);\r\n  const featuresOpenButton = createOpenButton('Features');\r\n  buttonArea.insertAdjacentHTML('beforeend', featuresOpenButton);\r\n\r\n  const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\r\n  modalOpenButtons.forEach(button => {\r\n    button.addEventListener('click', event => {\r\n      const targetModal = event.currentTarget.dataset.targetModal;\r\n      const modal = document.querySelector(`[data-modal-${targetModal}]`);\r\n      openModal(modal);\r\n    });\r\n  });\r\n\r\n  const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\r\n  modalCloseButtons.forEach(button => {\r\n    button.addEventListener('click', event => {\r\n      const modal = event.currentTarget.closest('.modal');\r\n      closeModal(modal);\r\n    });\r\n  });\r\n}\r\n\r\nfunction createOpenButton(title) {\r\n  return `<button data-target-modal=\"${title.toLowerCase()}\">\r\n    ${title}\r\n  </button>`;\r\n}\r\n\r\n/**\r\n * Opens the modal.\r\n *\r\n * @param {Element} modal\r\n */\r\nfunction openModal(modal) {\r\n  if (modal === null) {\r\n    return;\r\n  }\r\n\r\n  // Store last focused element\r\n  lastFocusedElement = document.activeElement;\r\n\r\n  document.body.setAttribute('aria-hidden', 'true');\r\n  modal.setAttribute('aria-hidden', 'false');\r\n\r\n  moveFocusToModal(modal);\r\n\r\n  // Setup event listeners\r\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\r\n  modal.addEventListener('keydown', trapTabKey, listener.active);\r\n  modal.addEventListener('click', closeOnBackground, listener.passive);\r\n}\r\n\r\n/**\r\n * Move focus to the first focusable element inside the modal.\r\n *\r\n * @param {Element} modal\r\n */\r\nfunction moveFocusToModal(modal) {\r\n  const focusable = getFocusableElements(modal);\r\n  focusable[0].focus();\r\n}\r\n\r\n/**\r\n * Closes the modal.\r\n *\r\n * @param {Element} modal\r\n */\r\nfunction closeModal(modal) {\r\n  if (modal === null) {\r\n    return;\r\n  }\r\n\r\n  document.body.setAttribute('aria-hidden', 'false');\r\n  modal.setAttribute('aria-hidden', 'true');\r\n\r\n  // Clean up event listeners\r\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\r\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\r\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\r\n\r\n  // Restore previously focused element\r\n  lastFocusedElement.focus();\r\n}\r\n\r\n/**\r\n * Closes the modal when clicking on the background.\r\n *\r\n * @param {MouseEvent} event\r\n */\r\nfunction closeOnBackground(event) {\r\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\r\n  if (modal === event.target) {\r\n    closeModal(modal);\r\n  }\r\n}\r\n\r\n/**\r\n * Closes the modal when pressing the <kbd>Esc</kbd>.\r\n *\r\n * @param {KeyboardEvent} event\r\n */\r\nfunction closeOnEscape(event) {\r\n  if (event.keyCode === 27) {\r\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\r\n  }\r\n}\r\n\r\n/**\r\n * Make it impossible to focus an element outside the modal\r\n *\r\n * @param {KeyboardEvent} event\r\n */\r\nfunction trapTabKey(event) {\r\n  if (event.keyCode !== 9) {\r\n    return;\r\n  }\r\n\r\n  const activeElement = document.activeElement;\r\n  const focusable = getFocusableElements(event.currentTarget);\r\n  const tabable = focusable.filter(element => element.tabIndex > -1);\r\n\r\n  if (tabable.length < 2) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n\r\n  if (event.shiftKey) {\r\n    if (activeElement === tabable[0]) {\r\n      tabable[tabable.length - 1].focus();\r\n      event.preventDefault();\r\n    }\r\n  } else {\r\n    if (activeElement === tabable[tabable.length - 1]) {\r\n      tabable[0].focus();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Selects all focusable elements currently present in the DOM/\r\n *\r\n * @param {Element|document} ancestor\r\n * @returns {Array}\r\n */\r\nfunction getFocusableElements(ancestor = document) {\r\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\r\n}\r\n\r\nconst focusableElementsSelector =\r\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\r\n","export { SlidehubPlugin };\r\n\r\n/**\r\n * Abstract base class for Slidehub plugins.\r\n *\r\n * Ensures that classes extending `SlidehubPlugin` implement an `enable()` and\r\n * `disable()` method.\r\n *\r\n * **Usage**:\r\n *\r\n * ```\r\n * import { SlidehubPlugin } from '../core/SlidehubPlugin';\r\n *\r\n * class MyPlugin extends SlidehubPlugin {\r\n *    constructor(slidehub) {\r\n *      super(\r\n *        slidehub,\r\n *        'MyPlugin',\r\n *        'Description of your plugin'\r\n *      );\r\n *    }\r\n *\r\n *    enable() {\r\n *      // Implement an enable routine\r\n *    }\r\n *\r\n *    disable() {\r\n *      // Implement an disable routine\r\n *    }\r\n * };\r\n * ```\r\n */\r\nclass SlidehubPlugin {\r\n  constructor(slidehub, name, description) {\r\n    this.slidehub = slidehub;\r\n    this.name = name;\r\n    this.description = description;\r\n    this.enabled = false;\r\n    this.toggleButton = null;\r\n\r\n    if (new.target === SlidehubPlugin) {\r\n      throw new TypeError('Cannot construct SlidehubPlugin instances directly');\r\n    }\r\n\r\n    if (this.enable === SlidehubPlugin.prototype.enable) {\r\n      throw new TypeError('A SlidehubPlugin has to implement its own enable method.');\r\n    }\r\n\r\n    if (this.disable === SlidehubPlugin.prototype.disable) {\r\n      throw new TypeError('A SlidehubPlugin has to implement its own disable method.');\r\n    }\r\n  }\r\n\r\n  enable() {\r\n    this.enabled = true;\r\n\r\n    if (!this.toggleButton) {\r\n      this.toggleButton = this.createToggleButton();\r\n      if (this.toggleButton) {\r\n        this.toggleButton.addEventListener('click', this.handleToggleButton.bind(this));\r\n      }\r\n    }\r\n  }\r\n\r\n  disable() {\r\n    this.enabled = false;\r\n  }\r\n\r\n  /**\r\n   * Creates a feature toggle button in the user interface.\r\n   *\r\n   * @returns {Element|null}\r\n   */\r\n  createToggleButton() {\r\n    const fieldset = document.querySelector('.features-fieldset');\r\n\r\n    if (!fieldset) {\r\n      return null;\r\n    }\r\n\r\n    const toggleButtonMarkup = `\r\n      <div class=\"form-group form-group--switch\">\r\n        <span class=\"form-label\" id=\"${this.name}-label\">${this.description}</span>\r\n        <button\r\n          role=\"switch\"\r\n          aria-checked=\"false\"\r\n          aria-labelledby=\"${this.name}-label\"\r\n          data-feature=\"${this.name}\"\r\n        >\r\n          <span class=\"state state--true\" aria-label=\"on\"></span>\r\n          <span class=\"state state--false\" aria-label=\"off\"></span>\r\n        </button>\r\n      </div>\r\n    `;\r\n\r\n    fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\r\n\r\n    const button = fieldset.querySelector(`[data-feature=\"${this.name}\"]`);\r\n    button.setAttribute('aria-checked', this.enabled.toString());\r\n\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * Toggles a toggle button and triggers its associated action.\r\n   *\r\n   * @param {MouseEvent} event\r\n   */\r\n  handleToggleButton(event) {\r\n    const button = event.currentTarget;\r\n\r\n    if (button instanceof HTMLElement) {\r\n      const isPressed = button.getAttribute('aria-checked') === 'true';\r\n      button.setAttribute('aria-checked', String(!isPressed));\r\n\r\n      this.triggerButtonAction(button, 'aria-checked');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggers the associated action of a toggle button.\r\n   *\r\n   * @param {HTMLElement} button\r\n   * @param {'aria-checked'|'aria-pressed'} stateAttr\r\n   */\r\n  triggerButtonAction(button, stateAttr) {\r\n    switch (true) {\r\n      case button.hasAttribute('data-feature'):\r\n        if (button.getAttribute(stateAttr) === 'true') {\r\n          this.enable();\r\n        } else {\r\n          this.disable();\r\n        }\r\n        break;\r\n\r\n      default:\r\n        console.warn('No action is associated with the control', button);\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\n/* class MyPlugin extends SlidehubPlugin {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  enable() {\r\n    console.log('MyPlugin.enable');\r\n    super.enable();\r\n  }\r\n\r\n  disable() {\r\n    console.log('MyPlugin.disable');\r\n    super.disable();\r\n  }\r\n};\r\n\r\nconst x = new MyPlugin();\r\nx.enable(); */\r\n","import { SlidehubPlugin } from '../core/SlidehubPlugin';\r\nimport { listener } from '../util/passive-event-listener';\r\nimport { config } from '../config';\r\n\r\nexport { DocumentSourceLinker };\r\n\r\n/**\r\n * Item Linking.\r\n *\r\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\r\n * or double-clicking with a pointer device.\r\n */\r\nclass DocumentSourceLinker extends SlidehubPlugin {\r\n  constructor(slidehub) {\r\n    const description = 'Links documents to their source document';\r\n    super(slidehub, 'DocumentSourceLinker', description);\r\n\r\n    this.boundEnterHandler = this.enterHandler.bind(this);\r\n    this.boundDoubleClickHandler = this.doubleClickHandler.bind(this);\r\n  }\r\n\r\n  enable() {\r\n    document.addEventListener('keydown', this.boundEnterHandler, listener.passive);\r\n    document.addEventListener('dblclick', this.boundDoubleClickHandler, listener.passive);\r\n    super.enable();\r\n  }\r\n\r\n  disable() {\r\n    document.removeEventListener('keydown', this.boundEnterHandler);\r\n    document.removeEventListener('dblclick', this.boundDoubleClickHandler);\r\n    super.disable();\r\n  }\r\n\r\n  /**\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  enterHandler(event) {\r\n    if (event.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    const openInNewTab = event.ctrlKey;\r\n    const doc = this.slidehub.selectedDocument;\r\n    DocumentSourceLinker.handleOpenIntent(doc.node, doc.selectedItemNode, openInNewTab);\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event\r\n   */\r\n  doubleClickHandler(event) {\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    const itemNode = event.target.closest(config.selector.item);\r\n    const docNode = itemNode.closest(config.selector.doc);\r\n    if (docNode) {\r\n      const openInNewTab = true;\r\n      DocumentSourceLinker.handleOpenIntent(docNode, itemNode, openInNewTab);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLElement} docNode\r\n   * @param {HTMLElement} item\r\n   * @param {boolean} openInNewTab\r\n   */\r\n  static handleOpenIntent(docNode, item, openInNewTab) {\r\n    // Focusable elements have a default behavior (e.g. activating a link)\r\n    // That behavior shall not be altered/extended.\r\n    if (isInteractive(item)) {\r\n      return;\r\n    }\r\n\r\n    DocumentSourceLinker.openDocumentSource(docNode, item, openInNewTab);\r\n  }\r\n\r\n  /**\r\n   * Opens the document source for the current selected document in the browser.\r\n   *\r\n   * @param {HTMLElement} docNode\r\n   * @param {HTMLElement} item\r\n   * @param {boolean} openInNewTab\r\n   */\r\n  static openDocumentSource(docNode, item, openInNewTab) {\r\n    const itemIndex = item.dataset.page;\r\n    const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\r\n    const itemSource = docNode.dataset.docSource + fragment;\r\n\r\n    if (openInNewTab) {\r\n      window.open(itemSource);\r\n    } else {\r\n      window.location.href = itemSource;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns true if element is interactive, false otherwise.\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {boolean}\r\n */\r\nfunction isInteractive(element) {\r\n  const tag = element.tagName.toLowerCase();\r\n  let potentiallyInteractive = false;\r\n\r\n  switch (true) {\r\n    case ['a', 'area'].includes(tag):\r\n      if (!element.hasAttribute('href')) {\r\n        return false;\r\n      }\r\n\r\n      potentiallyInteractive = true;\r\n      break;\r\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\r\n      if (element.disabled) {\r\n        return false;\r\n      }\r\n\r\n      potentiallyInteractive = true;\r\n      break;\r\n    case ['iframe', 'object', 'embed'].includes(tag):\r\n      potentiallyInteractive = true;\r\n      break;\r\n    default:\r\n      if (element.hasAttribute('contenteditable')) {\r\n        potentiallyInteractive = true;\r\n      }\r\n      break;\r\n  }\r\n\r\n  if (potentiallyInteractive && element.offsetParent !== null) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { config } from '../config';\r\nimport { parseDocumentsData, parseDocumentsMarkup } from './SlidehubParser';\r\nimport { SlidehubDocumentLoader } from './SlidehubDocumentLoader';\r\nimport { SlidehubImageLoader } from './SlidehubImageLoader';\r\nimport { SlidehubMouseInteraction } from './SlidehubMouseInteraction';\r\nimport { SlidehubKeyboardInteraction } from './SlidehubKeyboardInteraction';\r\nimport { DocumentNavigator } from './DocumentNavigator';\r\nimport { enableModals } from './Modal';\r\n\r\nimport * as plugin from '../plugins/namespace';\r\n\r\nimport { debounce } from '../util/debounce';\r\nimport { getOuterWidth } from '../util/getOuterWidth';\r\n\r\nexport { Slidehub };\r\n\r\nconst selectClassName = 'selected';\r\nconst hoverClassName = 'highlighted';\r\n\r\nclass Slidehub {\r\n  /**\r\n   * @public\r\n   */\r\n  constructor() {\r\n    this._node = null;\r\n    this._documents = null;\r\n    this._selectedDocument = null;\r\n    this._hoveredDocument = null;\r\n    this._documentNavigator = null;\r\n\r\n    this._itemWidth = null;\r\n    this._visibleItems = null;\r\n    this._scrollboxWidth = null;\r\n\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      this._node = this.getNode();\r\n      this._documents = this.getDocuments();\r\n\r\n      if (!config.staticContent) {\r\n        const documentLoader = new SlidehubDocumentLoader(this);\r\n        documentLoader.start();\r\n      }\r\n\r\n      this.start();\r\n      this.loadPlugins();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets up the main Slidehub HTML element.\r\n   *\r\n   * @returns {HTMLElement} the Slidehub DOM node.\r\n   * @private\r\n   */\r\n  getNode() {\r\n    const existingNode = document.querySelector(config.selector.slidehub);\r\n    const slidehubNode = existingNode ? existingNode : this.createNode();\r\n\r\n    // Expose select/highlight color overrides to the DOM.\r\n    // This allows CSS to use inside of a rule declaration.\r\n    if (config.selectColor && config.selectColor !== '') {\r\n      slidehubNode.style.setProperty('--c-selected', config.selectColor);\r\n    }\r\n\r\n    if (config.highlightColor && config.highlightColor !== '') {\r\n      slidehubNode.style.setProperty('--c-highlighted', config.highlightColor);\r\n    }\r\n\r\n    return slidehubNode;\r\n  }\r\n\r\n  /**\r\n   * Hooks the Slidehub container element into the DOM.\r\n   *\r\n   * Requires an element with a custom attribute `data-slidehub` to be present\r\n   * in the DOM. A new <div> element will be created inside of it. No existing\r\n   * markup will be changed or removed.\r\n   *\r\n   * @returns {HTMLDivElement} the empty Slidehub DOM node.\r\n   * @private\r\n   */\r\n  createNode() {\r\n    const slidehubNode = document.createElement('div');\r\n    slidehubNode.classList.add(config.selector.slidehub.slice(1));\r\n\r\n    document.querySelector('[data-slidehub]').appendChild(slidehubNode);\r\n\r\n    return slidehubNode;\r\n  }\r\n\r\n  /**\r\n   * @returns {ReverseIterableMap} the internal documents data structure.\r\n   */\r\n  getDocuments() {\r\n    return config.staticContent ? parseDocumentsMarkup(this) : parseDocumentsData(this);\r\n  }\r\n\r\n  /**\r\n   * Initializes all core functionality.\r\n   *\r\n   * @private\r\n   */\r\n  start() {\r\n    this.navigateDocument = new DocumentNavigator(this);\r\n\r\n    this.exposeDocumentInfo();\r\n\r\n    const imageLoader = new SlidehubImageLoader(this);\r\n    imageLoader.start();\r\n\r\n    const mouseInteraction = new SlidehubMouseInteraction(this);\r\n    mouseInteraction.start();\r\n\r\n    const keyboardInteraction = new SlidehubKeyboardInteraction(this);\r\n    keyboardInteraction.start();\r\n\r\n    enableModals();\r\n  }\r\n\r\n  /**\r\n   * Loads optional plugins.\r\n   *\r\n   * @private\r\n   */\r\n  loadPlugins() {\r\n    const documentSourceLinker = new plugin.DocumentSourceLinker(this);\r\n    documentSourceLinker.enable();\r\n  }\r\n\r\n  /**\r\n   * @returns {HTMLElement} the Slidehub DOM node.\r\n   * @public\r\n   */\r\n  get node() {\r\n    return this._node;\r\n  }\r\n\r\n  /**\r\n   * @returns {ReverseIterableMap} the Slidehub documents data structure.\r\n   * @public\r\n   */\r\n  get documents() {\r\n    return this._documents;\r\n  }\r\n\r\n  /**\r\n   * @returns {SlidehubDocument} the currently selected document.\r\n   * @public\r\n   */\r\n  get selectedDocument() {\r\n    return this._selectedDocument;\r\n  }\r\n\r\n  /**\r\n   * @param {SlidehubDocument} doc the new selected document.\r\n   * @private\r\n   */\r\n  set selectedDocument(doc) {\r\n    this._selectedDocument = doc;\r\n  }\r\n\r\n  /**\r\n   * Sets a new selected document.\r\n   *\r\n   * @param {SlidehubDocument} doc\r\n   * @public\r\n   */\r\n  selectDocument(doc) {\r\n    // Remove selected class from currently selected document\r\n    if (this.selectedDocument) {\r\n      this.selectedDocument.node.classList.remove(selectClassName);\r\n    }\r\n\r\n    // Set new selected document\r\n    this.selectedDocument = doc;\r\n    this.selectedDocument.node.classList.add(selectClassName);\r\n\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {SlidehubDocument} the currently hovered document.\r\n   * @public\r\n   */\r\n  get hoveredDocument() {\r\n    return this._hoveredDocument;\r\n  }\r\n\r\n  /**\r\n   * @param {SlidehubDocument} doc the new hovered document.\r\n   * @private\r\n   */\r\n  set hoveredDocument(doc) {\r\n    this._hoveredDocument = doc;\r\n  }\r\n\r\n  /**\r\n   * Sets a new hovered document after unsetting the old one.\r\n   *\r\n   * @param {SlidehubDocument} doc the new hovered document.\r\n   * @public\r\n   */\r\n  hoverDocument(doc) {\r\n    this.unhoverDocument();\r\n\r\n    // Set new hovered document\r\n    this.hoveredDocument = doc;\r\n    this.hoveredDocument.node.classList.add(hoverClassName);\r\n\r\n    if (document.activeElement instanceof HTMLElement) {\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes the hover from the currently hovered document.\r\n   *\r\n   * **Side effect**: Also removes the hover from the currently hovered item\r\n   * within that document.\r\n   *\r\n   * @public\r\n   */\r\n  unhoverDocument() {\r\n    // Remove hovered class from currently hovered document\r\n    if (this.hoveredDocument) {\r\n      this.hoveredDocument.unhoverItem();\r\n      this.hoveredDocument.node.classList.remove(hoverClassName);\r\n      this.hoveredDocument = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {DocumentNavigator} the document navigator object.\r\n   * @public\r\n   */\r\n  get navigateDocument() {\r\n    return this._documentNavigator;\r\n  }\r\n\r\n  /**\r\n   * @param {DocumentNavigator} documentNavigator\r\n   * @private\r\n   */\r\n  set navigateDocument(documentNavigator) {\r\n    this._documentNavigator = documentNavigator;\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   * @public\r\n   */\r\n  get itemWidth() {\r\n    return this._itemWidth;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} itemWidth\r\n   * @private\r\n   */\r\n  set itemWidth(itemWidth) {\r\n    this._itemWidth = itemWidth;\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   * @public\r\n   */\r\n  get visibleItems() {\r\n    return this._visibleItems;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} visibleItems\r\n   * @private\r\n   */\r\n  set visibleItems(visibleItems) {\r\n    this._visibleItems = visibleItems;\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   * @public\r\n   */\r\n  get scrollboxWidth() {\r\n    return this._scrollboxWidth;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} scrollboxWidth\r\n   * @private\r\n   */\r\n  set scrollboxWidth(scrollboxWidth) {\r\n    this._scrollboxWidth = scrollboxWidth;\r\n  }\r\n\r\n  /**\r\n   * Wrapper method for all expose methods.\r\n   *\r\n   * @private\r\n   */\r\n  exposeDocumentInfo() {\r\n    this.exposeItemWidth();\r\n    this.exposeScrollboxWidth();\r\n    this.exposeNumberOfVisibleItems();\r\n\r\n    // Recalculate the scrollbox width on resize.\r\n    window.addEventListener('resize', debounce(() => {\r\n      this.exposeItemWidth();\r\n      this.exposeScrollboxWidth();\r\n      this.exposeNumberOfVisibleItems();\r\n    }, 200));\r\n  }\r\n\r\n  /**\r\n   * Exposes the current outer width of an item to the DOM.\r\n   *\r\n   * @private\r\n   */\r\n  exposeItemWidth() {\r\n    const item = this.selectedDocument.node.querySelector(config.selector.item);\r\n    const itemOuterWidth = getOuterWidth(item);\r\n\r\n    if (this.itemWidth !== itemOuterWidth) {\r\n      this.itemWidth = itemOuterWidth;\r\n\r\n      this.node.style.setProperty('--page-outer-width', this.itemWidth + 'px');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Exposes the current `clientWidth` of the selected scrollbox to the DOM.\r\n   *\r\n   * @private\r\n   */\r\n  exposeScrollboxWidth() {\r\n    const scrollboxNode = this.selectedDocument.node.querySelector(config.selector.scrollbox);\r\n\r\n    if (this.scrollboxWidth !== scrollboxNode.clientWidth) {\r\n      this.scrollboxWidth = scrollboxNode.clientWidth;\r\n\r\n      this.node.style.setProperty('--scrollbox-width', this.scrollboxWidth + 'px');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Exposes the current number of visible items in a document to the DOM.\r\n   *\r\n   * @private\r\n   */\r\n  exposeNumberOfVisibleItems() {\r\n    this.visibleItems = Math.floor(this.scrollboxWidth / this.itemWidth);\r\n  }\r\n};\r\n","/**\r\n * Application entry point.\r\n */\r\n\r\nimport './lib/intersection-observer';\r\n\r\nimport { Slidehub } from './core/Slidehub';\r\n\r\n/**\r\n * An Immediately Invoked Function Expression, called like that because it’s\r\n * immediately executed when a JavaScript file like this is sourced.\r\n *\r\n * Starts the engines for Slidehub.\r\n */\r\n(function () {\r\n  new Slidehub();\r\n})();\r\n","import { config } from '../config';\r\nimport { getFragmentIdentifier } from '../util/getFragmentIdentifier';\r\n\r\nexport { SlidehubDocumentLoader };\r\n\r\n/**\r\n * Document Loader.\r\n *\r\n * Loads documents dynamically when needed.\r\n */\r\nclass SlidehubDocumentLoader {\r\n  constructor(slidehub) {\r\n    this.slidehub = slidehub;\r\n    this.batchSize = 5;\r\n    this.prevIterator = null;\r\n    this.nextIterator = null;\r\n    this.observer = new IntersectionObserver(this.documentObservationHandler.bind(this));\r\n  }\r\n\r\n  start() {\r\n    this.insertDocumentFrames();\r\n\r\n    this.loadTargetDocument();\r\n\r\n    // Load one batch in both directions\r\n    this.loadBatch(this.nextIterator, 'beforeend', this.batchSize);\r\n    this.loadBatch(this.prevIterator, 'afterbegin', this.batchSize);\r\n  }\r\n\r\n  /**\r\n   * Prepares the DOM with empty frames for all documents.\r\n   *\r\n   * @private\r\n   */\r\n  insertDocumentFrames() {\r\n    let documentFramesMarkup = '';\r\n\r\n    for (const doc of this.slidehub.documents.values()) {\r\n      const documentSource = `${config.assets.documents}/${doc.name}`;\r\n      documentFramesMarkup += `<div\r\n        class=\"${config.selector.doc.slice(1)}\"\r\n        id=\"${doc.name}\"\r\n        data-doc-source=\"${documentSource}\"\r\n        style=\"--pages: ${doc.imageCount + (config.metaSlide ? 1 : 0)}\"\r\n      ></div>`;\r\n    }\r\n\r\n    this.slidehub.node.insertAdjacentHTML('beforeend', documentFramesMarkup);\r\n  }\r\n\r\n  /**\r\n   * Starts off the document loading process. Determines which document should be\r\n   * loaded and sets up two iterators. They will be used to load new documents\r\n   * when needed.\r\n   *\r\n   * @returns {SlidehubDocument}\r\n   */\r\n  loadTargetDocument() {\r\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\r\n\r\n    let documentName;\r\n\r\n    if (this.slidehub.documents.has(fragmentIdentifier)) {\r\n      // Prioritize the fragment identifier\r\n      documentName = fragmentIdentifier;\r\n    } else if (document.documentElement.scrollTop === 0) {\r\n      // If the viewport was not scrolled already, just start from the top\r\n      documentName = this.slidehub.documents.keys().next().value;\r\n    } else {\r\n      // The page was scrolled (e.g. the page was reloaded with a non-zero scroll position)\r\n      // In this case, Slidehub attempts to load the document in the center of the view.\r\n      const slidehubWidth = this.slidehub.node.clientWidth;\r\n      const centerDocument = document.elementFromPoint(slidehubWidth / 2, window.innerHeight / 2);\r\n      documentName = centerDocument.id;\r\n    }\r\n\r\n    // Obtain two iterators as pointers for which documents need to be\r\n    // loaded next.\r\n    this.prevIterator = this.slidehub.documents.iteratorFor(documentName).reverse();\r\n    this.nextIterator = this.slidehub.documents.iteratorFor(documentName);\r\n\r\n    // The target document will be loaded next by retrieving the iterator result\r\n    // from nextIterator. Since prevIterator points to the same document, it\r\n    // needs to be advanced manually, so it can’t be used to load that document\r\n    // again.\r\n    this.prevIterator.next();\r\n\r\n    return this.loadInitialDocument(this.nextIterator.next(), this.slidehub.documents.has(fragmentIdentifier));\r\n  }\r\n\r\n  /**\r\n   * Manages loading the very first Slidehub document.\r\n   *\r\n   * @param {IteratorResult} iteratorResult\r\n   * @param {boolean} centerDocumentInView\r\n   * @returns {SlidehubDocument}\r\n   */\r\n  loadInitialDocument(iteratorResult, centerDocumentInView) {\r\n    const doc = this.loadDocument(iteratorResult, 'beforeend');\r\n\r\n    this.slidehub.selectDocument(doc);\r\n\r\n    if (centerDocumentInView) {\r\n      const docHeight = doc.node.clientHeight;\r\n      // After a short while, scroll the viewport to center the document\r\n      // In the future, `Element.scrollIntoView({ block: 'center' })` should work\r\n      setTimeout(() => window.scrollBy(0, -(window.innerHeight / 2 - docHeight / 2)), 200);\r\n    }\r\n\r\n    return doc;\r\n  }\r\n\r\n  /**\r\n   * A wrapper for calling loadDocument multiple times.\r\n   *\r\n   * @param {IterableIterator} documentIterable\r\n   * @param {'afterbegin'|'beforeend'} insertPosition\r\n   * @param {number} batchSize\r\n   */\r\n  loadBatch(documentIterable, insertPosition, batchSize) {\r\n    while (batchSize--) {\r\n      this.loadDocument(documentIterable.next(), insertPosition);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads a new document by creating and injecting the markup into the DOM.\r\n   * Once this is done, the document is marked as loaded.\r\n   *\r\n   * @param {IteratorResult} iteratorResult\r\n   * @param {'afterbegin'|'beforeend'} insertPosition\r\n   * @returns {SlidehubDocument}\r\n   */\r\n  loadDocument(iteratorResult, insertPosition) {\r\n    if (iteratorResult.done) {\r\n      return;\r\n    }\r\n\r\n    const doc = iteratorResult.value[1];\r\n    if (doc.loaded) {\r\n      console.warn(doc.name, 'was already loaded. Skipping.');\r\n      return;\r\n    }\r\n\r\n    doc.insertPosition = insertPosition;\r\n    if (doc.insertPosition === 'afterbegin') {\r\n      doc.iterator = this.prevIterator;\r\n    } else {\r\n      doc.iterator = this.nextIterator;\r\n    }\r\n\r\n    console.info(`Loading ${doc.name}.`);\r\n\r\n    doc.load();\r\n\r\n    this.observer.observe(doc.node);\r\n\r\n    return doc;\r\n  }\r\n\r\n  /**\r\n   * Handles lazy-loading documents.\r\n   *\r\n   * @param {Array<IntersectionObserverEntry>} entries\r\n   * @param {IntersectionObserver} observer\r\n   */\r\n  documentObservationHandler(entries, observer) {\r\n    for (const entry of entries) {\r\n      if (entry.isIntersecting) {\r\n        const doc = this.slidehub.documents.get(entry.target.id);\r\n        this.loadDocument(doc.iterator.next(), doc.insertPosition);\r\n\r\n        observer.unobserve(entry.target);\r\n      }\r\n    }\r\n  }\r\n};\r\n","export { getFragmentIdentifier };\r\n\r\n/**\r\n * Returns the fragment identifier of a URL if it is present.\r\n *\r\n * @param {String} url\r\n * @returns {String|null} the fragment identifier of a URL if it is present,\r\n *                        `null` otherwise.\r\n */\r\nfunction getFragmentIdentifier(url) {\r\n  const hashPosition = url.indexOf('#');\r\n  if (hashPosition > 0) {\r\n    return url.substring(hashPosition + 1);\r\n  }\r\n\r\n  return null;\r\n}\r\n","/**\r\n * Parses the document data.\r\n */\r\n\r\nimport { config } from '../config';\r\nimport { documentsData } from '../documents-data';\r\nimport { ReverseIterableMap } from '../lib/reverse-iterable-map';\r\nimport { SlidehubDocument } from './SlidehubDocument';\r\n\r\nexport { parseDocumentsData, parseDocumentsMarkup };\r\n\r\n/**\r\n * Parses the initial document data into a more managable data structure.\r\n * The resulting structure keeps track of a documents’ loaded state.\r\n *\r\n * @param {Slidehub} slidehub\r\n * @returns {ReverseIterableMap}\r\n */\r\nfunction parseDocumentsData(slidehub) {\r\n  const documents = new ReverseIterableMap();\r\n\r\n  documentsData.forEach(([name, imageCount]) => {\r\n    const doc = new SlidehubDocument(slidehub, name, imageCount);\r\n    documents.set(doc.name, doc);\r\n  });\r\n\r\n  return documents;\r\n}\r\n\r\n/**\r\n * @param {Slidehub} slidehub\r\n * @returns {ReverseIterableMap}\r\n */\r\nfunction parseDocumentsMarkup(slidehub) {\r\n  const documents = new ReverseIterableMap();\r\n\r\n  const documentNodes = slidehub.node.querySelectorAll(config.selector.doc);\r\n  documentNodes.forEach(docNode => {\r\n    const imageCount = docNode.querySelectorAll('img').length - 1;\r\n    const doc = new SlidehubDocument(slidehub, docNode.id, imageCount);\r\n    doc.setNode(docNode);\r\n    documents.set(doc.name, doc);\r\n  });\r\n\r\n  return documents;\r\n}\r\n","import { clamp } from '../util/clamp';\r\n\r\nexport { DocumentNavigator };\r\n\r\n/**\r\n * Document Navigator.\r\n *\r\n * **Usage**:\r\n *\r\n * ```\r\n * const navigateDocument = new DocumentNavigator(slidehub);\r\n * navigateDocument.up(3);\r\n * navigateDocument.down(1);\r\n * ```\r\n */\r\nclass DocumentNavigator {\r\n  /**\r\n   * @param {Slidehub} slidehub\r\n   * @public\r\n   */\r\n  constructor(slidehub) {\r\n    this.slidehub = slidehub;\r\n    this.iterator = null;\r\n  }\r\n\r\n  /**\r\n   * Navigate document up (in reverse document loading order, if that makes sense).\r\n   *\r\n   * @param {Number} distance\r\n   * @public\r\n   */\r\n  up(distance) {\r\n    this.iterator = this.slidehub.documents.iteratorFor(this.slidehub.selectedDocument.name).reverse();\r\n    this.by(distance);\r\n  }\r\n\r\n  /**\r\n   * Navigate document down.\r\n   *\r\n   * @param {Number} distance\r\n   * @public\r\n   */\r\n  down(distance) {\r\n    this.iterator = this.slidehub.documents.iteratorFor(this.slidehub.selectedDocument.name);\r\n    this.by(distance);\r\n  }\r\n\r\n  /**\r\n   * Navigates through documents by a certain distance. With `distance = 3`,\r\n   * two documents would be skipped, arriving at the third document.\r\n   *\r\n   * @param {number} distance\r\n   * @private\r\n   */\r\n  by(distance) {\r\n    this.iterator.next();\r\n\r\n    let iteratorResult;\r\n    for (let i = 0; i < distance; i++) {\r\n      iteratorResult = this.iterator.next();\r\n      if (iteratorResult.done) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const targetDoc = iteratorResult.value[1];\r\n    this.slidehub.selectDocument(targetDoc);\r\n    this.scrollDocumentIntoView(targetDoc);\r\n  }\r\n\r\n  /**\r\n   * @param {SlidehubDocument} doc\r\n   */\r\n  scrollDocumentIntoView(doc) {\r\n    const offset = this.getVerticalOffsets(doc.node);\r\n    const extraPart = doc.node.clientHeight / 2;\r\n    if (offset.top < 0) {\r\n      window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\r\n    } else if (offset.bottom < 0) {\r\n      window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds the target document given a navigation distance.\r\n   *\r\n   * @param {number} distance\r\n   * @returns {SlidehubDocument}\r\n   */\r\n  getTargetDoc(distance) {\r\n    const documentNodes = this.getDocumentNodes();\r\n    const targetDocumentPos = clamp(this.selectedDocPos + distance, 0, documentNodes.length - 1);\r\n    const targetDocumentNode = documentNodes.item(targetDocumentPos);\r\n\r\n    return this.slidehub.documents.get(targetDocumentNode.id);\r\n  }\r\n\r\n  /**\r\n   * Returns an object containing vertical offsets for an element with the\r\n   * viewport.\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @returns {object}\r\n   */\r\n  getVerticalOffsets(element) {\r\n    const docEl = document.documentElement;\r\n    return {\r\n      top: element.offsetTop - window.scrollY,\r\n      bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns all Slidehub documents as a HTMLCollection.\r\n   *\r\n   * @returns {HTMLCollection}\r\n   */\r\n  getDocumentNodes() {\r\n    return this.slidehub.selectedDocument.node.parentElement.children;\r\n  }\r\n};\r\n","export { debounce };\r\n\r\n/**\r\n * Returns a function, that, as long as it continues to be invoked, will not\r\n * be triggered. The function will be called after it stops being called for\r\n * N milliseconds. If `immediate` is passed, trigger the function on the\r\n * leading edge, instead of the trailing.\r\n *\r\n * @see https://davidwalsh.name/javascript-debounce-function\r\n * @param {Function} func\r\n * @param {Number} wait\r\n * @param {Boolean?} immediate\r\n * @returns {Function}\r\n */\r\nfunction debounce(func, wait, immediate = false) {\r\n  let timeout;\r\n\r\n  return function () {\r\n    const context = this, args = arguments;\r\n    const later = function () {\r\n      timeout = null;\r\n      if (!immediate) {\r\n        func.apply(context, args);\r\n      }\r\n    };\r\n\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n\r\n    if (callNow) {\r\n      func.apply(context, args);\r\n    }\r\n  };\r\n};\r\n","export { getOuterWidth };\r\n\r\n/**\r\n * Calculates the outer width of an element. In the context of this\r\n * application, the outer width of an element is its `offsetWidth` plus\r\n * left and right margins.\r\n *\r\n * @param {HTMLElement} element\r\n * @returns {Number} the outer width of `element`.\r\n */\r\nfunction getOuterWidth(element) {\r\n  const style = window.getComputedStyle(element);\r\n  const marginLeft = parseInt(style.marginLeft);\r\n  const marginRight = parseInt(style.marginRight);\r\n\r\n  return marginLeft + element.offsetWidth + marginRight;\r\n}\r\n","/**\r\n * Copyright 2016 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\r\n *\r\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\r\n *\r\n */\r\n\r\n(function(window, document) {\r\n  'use strict';\r\n\r\n  // Exits early if all IntersectionObserver and IntersectionObserverEntry\r\n  // features are natively supported.\r\n  if (\r\n    'IntersectionObserver' in window &&\r\n    'IntersectionObserverEntry' in window &&\r\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\r\n  ) {\r\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\r\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\r\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\r\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\r\n        get: function() {\r\n          return this.intersectionRatio > 0;\r\n        }\r\n      });\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * An IntersectionObserver registry. This registry exists to hold a strong\r\n   * reference to IntersectionObserver instances currently observering a target\r\n   * element. Without this registry, instances without another reference may be\r\n   * garbage collected.\r\n   */\r\n  var registry = [];\r\n\r\n  /**\r\n   * Creates the global IntersectionObserverEntry constructor.\r\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\r\n   * @param {Object} entry A dictionary of instance properties.\r\n   * @constructor\r\n   */\r\n  function IntersectionObserverEntry(entry) {\r\n    this.time = entry.time;\r\n    this.target = entry.target;\r\n    this.rootBounds = entry.rootBounds;\r\n    this.boundingClientRect = entry.boundingClientRect;\r\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\r\n    this.isIntersecting = !!entry.intersectionRect;\r\n\r\n    // Calculates the intersection ratio.\r\n    var targetRect = this.boundingClientRect;\r\n    var targetArea = targetRect.width * targetRect.height;\r\n    var intersectionRect = this.intersectionRect;\r\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\r\n\r\n    // Sets intersection ratio.\r\n    if (targetArea) {\r\n      this.intersectionRatio = intersectionArea / targetArea;\r\n    } else {\r\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\r\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the global IntersectionObserver constructor.\r\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\r\n   * @param {Function} callback The function to be invoked after intersection\r\n   *     changes have queued. The function is not invoked if the queue has\r\n   *     been emptied by calling the `takeRecords` method.\r\n   * @param {Object=} opt_options Optional configuration options.\r\n   * @constructor\r\n   */\r\n  function IntersectionObserver(callback, opt_options) {\r\n    var options = opt_options || {};\r\n\r\n    if (typeof callback != 'function') {\r\n      throw new Error('callback must be a function');\r\n    }\r\n\r\n    if (options.root && options.root.nodeType != 1) {\r\n      throw new Error('root must be an Element');\r\n    }\r\n\r\n    // Binds and throttles `this._checkForIntersections`.\r\n    this._checkForIntersections = throttle(\r\n      this._checkForIntersections.bind(this),\r\n      this.THROTTLE_TIMEOUT\r\n    );\r\n\r\n    // Private properties.\r\n    this._callback = callback;\r\n    this._observationTargets = [];\r\n    this._queuedEntries = [];\r\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\r\n\r\n    // Public properties.\r\n    this.thresholds = this._initThresholds(options.threshold);\r\n    this.root = options.root || null;\r\n    this.rootMargin = this._rootMarginValues\r\n      .map(function(margin) {\r\n        return margin.value + margin.unit;\r\n      })\r\n      .join(' ');\r\n  }\r\n\r\n  /**\r\n   * The minimum interval within which the document will be checked for\r\n   * intersection changes.\r\n   */\r\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\r\n\r\n  /**\r\n   * The frequency in which the polyfill polls for intersection changes.\r\n   * this can be updated on a per instance basis and must be set prior to\r\n   * calling `observe` on the first target.\r\n   */\r\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\r\n\r\n  /**\r\n   * Starts observing a target element for intersection changes based on\r\n   * the thresholds values.\r\n   * @param {Element} target The DOM element to observe.\r\n   */\r\n  IntersectionObserver.prototype.observe = function(target) {\r\n    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\r\n      return item.element == target;\r\n    });\r\n\r\n    if (isTargetAlreadyObserved) {\r\n      return;\r\n    }\r\n\r\n    if (!(target && target.nodeType == 1)) {\r\n      throw new Error('target must be an Element');\r\n    }\r\n\r\n    this._registerInstance();\r\n    this._observationTargets.push({ element: target, entry: null });\r\n    this._monitorIntersections();\r\n    this._checkForIntersections();\r\n  };\r\n\r\n  /**\r\n   * Stops observing a target element for intersection changes.\r\n   * @param {Element} target The DOM element to observe.\r\n   */\r\n  IntersectionObserver.prototype.unobserve = function(target) {\r\n    this._observationTargets = this._observationTargets.filter(function(item) {\r\n      return item.element != target;\r\n    });\r\n    if (!this._observationTargets.length) {\r\n      this._unmonitorIntersections();\r\n      this._unregisterInstance();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Stops observing all target elements for intersection changes.\r\n   */\r\n  IntersectionObserver.prototype.disconnect = function() {\r\n    this._observationTargets = [];\r\n    this._unmonitorIntersections();\r\n    this._unregisterInstance();\r\n  };\r\n\r\n  /**\r\n   * Returns any queue entries that have not yet been reported to the\r\n   * callback and clears the queue. This can be used in conjunction with the\r\n   * callback to obtain the absolute most up-to-date intersection information.\r\n   * @return {Array} The currently queued entries.\r\n   */\r\n  IntersectionObserver.prototype.takeRecords = function() {\r\n    var records = this._queuedEntries.slice();\r\n    this._queuedEntries = [];\r\n    return records;\r\n  };\r\n\r\n  /**\r\n   * Accepts the threshold value from the user configuration object and\r\n   * returns a sorted array of unique threshold values. If a value is not\r\n   * between 0 and 1 and error is thrown.\r\n   * @private\r\n   * @param {Array|number=} opt_threshold An optional threshold value or\r\n   *     a list of threshold values, defaulting to [0].\r\n   * @return {Array} A sorted list of unique and valid threshold values.\r\n   */\r\n  IntersectionObserver.prototype._initThresholds = function(opt_threshold) {\r\n    var threshold = opt_threshold || [0];\r\n    if (!Array.isArray(threshold)) threshold = [threshold];\r\n\r\n    return threshold.sort().filter(function(t, i, a) {\r\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\r\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\r\n      }\r\n      return t !== a[i - 1];\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Accepts the rootMargin value from the user configuration object\r\n   * and returns an array of the four margin values as an object containing\r\n   * the value and unit properties. If any of the values are not properly\r\n   * formatted or use a unit other than px or %, and error is thrown.\r\n   * @private\r\n   * @param {string=} opt_rootMargin An optional rootMargin value,\r\n   *     defaulting to '0px'.\r\n   * @return {Array<Object>} An array of margin objects with the keys\r\n   *     value and unit.\r\n   */\r\n  IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\r\n    var marginString = opt_rootMargin || '0px';\r\n    var margins = marginString.split(/\\s+/).map(function(margin) {\r\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\r\n      if (!parts) {\r\n        throw new Error('rootMargin must be specified in pixels or percent');\r\n      }\r\n      return { value: parseFloat(parts[1]), unit: parts[2] };\r\n    });\r\n\r\n    // Handles shorthand.\r\n    margins[1] = margins[1] || margins[0];\r\n    margins[2] = margins[2] || margins[0];\r\n    margins[3] = margins[3] || margins[1];\r\n\r\n    return margins;\r\n  };\r\n\r\n  /**\r\n   * Starts polling for intersection changes if the polling is not already\r\n   * happening, and if the page's visibilty state is visible.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._monitorIntersections = function() {\r\n    if (!this._monitoringIntersections) {\r\n      this._monitoringIntersections = true;\r\n\r\n      // If a poll interval is set, use polling instead of listening to\r\n      // resize and scroll events or DOM mutations.\r\n      if (this.POLL_INTERVAL) {\r\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\r\n      } else {\r\n        addEvent(window, 'resize', this._checkForIntersections, true);\r\n        addEvent(document, 'scroll', this._checkForIntersections, true);\r\n\r\n        if ('MutationObserver' in window) {\r\n          this._domObserver = new MutationObserver(this._checkForIntersections);\r\n          this._domObserver.observe(document, {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Stops polling for intersection changes.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._unmonitorIntersections = function() {\r\n    if (this._monitoringIntersections) {\r\n      this._monitoringIntersections = false;\r\n\r\n      clearInterval(this._monitoringInterval);\r\n      this._monitoringInterval = null;\r\n\r\n      removeEvent(window, 'resize', this._checkForIntersections, true);\r\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\r\n\r\n      if (this._domObserver) {\r\n        this._domObserver.disconnect();\r\n        this._domObserver = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Scans each observation target for intersection changes and adds them\r\n   * to the internal entries queue. If new entries are found, it\r\n   * schedules the callback to be invoked.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._checkForIntersections = function() {\r\n    var rootIsInDom = this._rootIsInDom();\r\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\r\n\r\n    this._observationTargets.forEach(function(item) {\r\n      var target = item.element;\r\n      var targetRect = getBoundingClientRect(target);\r\n      var rootContainsTarget = this._rootContainsTarget(target);\r\n      var oldEntry = item.entry;\r\n      var intersectionRect =\r\n        rootIsInDom &&\r\n        rootContainsTarget &&\r\n        this._computeTargetAndRootIntersection(target, rootRect);\r\n\r\n      var newEntry = (item.entry = new IntersectionObserverEntry({\r\n        time: now(),\r\n        target: target,\r\n        boundingClientRect: targetRect,\r\n        rootBounds: rootRect,\r\n        intersectionRect: intersectionRect\r\n      }));\r\n\r\n      if (!oldEntry) {\r\n        this._queuedEntries.push(newEntry);\r\n      } else if (rootIsInDom && rootContainsTarget) {\r\n        // If the new entry intersection ratio has crossed any of the\r\n        // thresholds, add a new entry.\r\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\r\n          this._queuedEntries.push(newEntry);\r\n        }\r\n      } else {\r\n        // If the root is not in the DOM or target is not contained within\r\n        // root but the previous entry for this target had an intersection,\r\n        // add a new record indicating removal.\r\n        if (oldEntry && oldEntry.isIntersecting) {\r\n          this._queuedEntries.push(newEntry);\r\n        }\r\n      }\r\n    }, this);\r\n\r\n    if (this._queuedEntries.length) {\r\n      this._callback(this.takeRecords(), this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Accepts a target and root rect computes the intersection between then\r\n   * following the algorithm in the spec.\r\n   * TODO(philipwalton): at this time clip-path is not considered.\r\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\r\n   * @param {Element} target The target DOM element\r\n   * @param {Object} rootRect The bounding rect of the root after being\r\n   *     expanded by the rootMargin value.\r\n   * @return {?Object} The final intersection rect object or undefined if no\r\n   *     intersection is found.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function(target, rootRect) {\r\n    // If the element isn't displayed, an intersection can't happen.\r\n    if (window.getComputedStyle(target).display == 'none') return;\r\n\r\n    var targetRect = getBoundingClientRect(target);\r\n    var intersectionRect = targetRect;\r\n    var parent = getParentNode(target);\r\n    var atRoot = false;\r\n\r\n    while (!atRoot) {\r\n      var parentRect = null;\r\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\r\n\r\n      // If the parent isn't displayed, an intersection can't happen.\r\n      if (parentComputedStyle.display == 'none') return;\r\n\r\n      if (parent == this.root || parent == document) {\r\n        atRoot = true;\r\n        parentRect = rootRect;\r\n      } else {\r\n        // If the element has a non-visible overflow, and it's not the <body>\r\n        // or <html> element, update the intersection rect.\r\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\r\n        // the document rect, so no need to compute a new intersection.\r\n        if (\r\n          parent != document.body &&\r\n          parent != document.documentElement &&\r\n          parentComputedStyle.overflow != 'visible'\r\n        ) {\r\n          parentRect = getBoundingClientRect(parent);\r\n        }\r\n      }\r\n\r\n      // If either of the above conditionals set a new parentRect,\r\n      // calculate new intersection data.\r\n      if (parentRect) {\r\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\r\n\r\n        if (!intersectionRect) break;\r\n      }\r\n      parent = getParentNode(parent);\r\n    }\r\n    return intersectionRect;\r\n  };\r\n\r\n  /**\r\n   * Returns the root rect after being expanded by the rootMargin value.\r\n   * @return {Object} The expanded root rect.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._getRootRect = function() {\r\n    var rootRect;\r\n    if (this.root) {\r\n      rootRect = getBoundingClientRect(this.root);\r\n    } else {\r\n      // Use <html>/<body> instead of window since scroll bars affect size.\r\n      var html = document.documentElement;\r\n      var body = document.body;\r\n      rootRect = {\r\n        top: 0,\r\n        left: 0,\r\n        right: html.clientWidth || body.clientWidth,\r\n        width: html.clientWidth || body.clientWidth,\r\n        bottom: html.clientHeight || body.clientHeight,\r\n        height: html.clientHeight || body.clientHeight\r\n      };\r\n    }\r\n    return this._expandRectByRootMargin(rootRect);\r\n  };\r\n\r\n  /**\r\n   * Accepts a rect and expands it by the rootMargin value.\r\n   * @param {Object} rect The rect object to expand.\r\n   * @return {Object} The expanded rect.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\r\n    var margins = this._rootMarginValues.map(function(margin, i) {\r\n      return margin.unit == 'px'\r\n        ? margin.value\r\n        : margin.value * (i % 2 ? rect.width : rect.height) / 100;\r\n    });\r\n    var newRect = {\r\n      top: rect.top - margins[0],\r\n      right: rect.right + margins[1],\r\n      bottom: rect.bottom + margins[2],\r\n      left: rect.left - margins[3]\r\n    };\r\n    newRect.width = newRect.right - newRect.left;\r\n    newRect.height = newRect.bottom - newRect.top;\r\n\r\n    return newRect;\r\n  };\r\n\r\n  /**\r\n   * Accepts an old and new entry and returns true if at least one of the\r\n   * threshold values has been crossed.\r\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\r\n   *    particular target element or null if no previous entry exists.\r\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\r\n   *    particular target element.\r\n   * @return {boolean} Returns true if a any threshold has been crossed.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {\r\n    // To make comparing easier, an entry that has a ratio of 0\r\n    // but does not actually intersect is given a value of -1\r\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\r\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\r\n\r\n    // Ignore unchanged ratios\r\n    if (oldRatio === newRatio) return;\r\n\r\n    for (var i = 0; i < this.thresholds.length; i++) {\r\n      var threshold = this.thresholds[i];\r\n\r\n      // Return true if an entry matches a threshold or if the new ratio\r\n      // and the old ratio are on the opposite sides of a threshold.\r\n      if (\r\n        threshold == oldRatio ||\r\n        threshold == newRatio ||\r\n        threshold < oldRatio !== threshold < newRatio\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns whether or not the root element is an element and is in the DOM.\r\n   * @return {boolean} True if the root element is an element and is in the DOM.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._rootIsInDom = function() {\r\n    return !this.root || containsDeep(document, this.root);\r\n  };\r\n\r\n  /**\r\n   * Returns whether or not the target element is a child of root.\r\n   * @param {Element} target The target element to check.\r\n   * @return {boolean} True if the target element is a child of root.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._rootContainsTarget = function(target) {\r\n    return containsDeep(this.root || document, target);\r\n  };\r\n\r\n  /**\r\n   * Adds the instance to the global IntersectionObserver registry if it isn't\r\n   * already present.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._registerInstance = function() {\r\n    if (registry.indexOf(this) < 0) {\r\n      registry.push(this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes the instance from the global IntersectionObserver registry.\r\n   * @private\r\n   */\r\n  IntersectionObserver.prototype._unregisterInstance = function() {\r\n    var index = registry.indexOf(this);\r\n    if (index != -1) registry.splice(index, 1);\r\n  };\r\n\r\n  /**\r\n   * Returns the result of the performance.now() method or null in browsers\r\n   * that don't support the API.\r\n   * @return {number} The elapsed time since the page was requested.\r\n   */\r\n  function now() {\r\n    return window.performance && performance.now && performance.now();\r\n  }\r\n\r\n  /**\r\n   * Throttles a function and delays its executiong, so it's only called at most\r\n   * once within a given time period.\r\n   * @param {Function} fn The function to throttle.\r\n   * @param {number} timeout The amount of time that must pass before the\r\n   *     function can be called again.\r\n   * @return {Function} The throttled function.\r\n   */\r\n  function throttle(fn, timeout) {\r\n    var timer = null;\r\n    return function() {\r\n      if (!timer) {\r\n        timer = setTimeout(function() {\r\n          fn();\r\n          timer = null;\r\n        }, timeout);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\r\n   * @param {Node} node The DOM node to add the event handler to.\r\n   * @param {string} event The event name.\r\n   * @param {Function} fn The event handler to add.\r\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\r\n   *     phase. Note: this only works in modern browsers.\r\n   */\r\n  function addEvent(node, event, fn, opt_useCapture) {\r\n    if (typeof node.addEventListener == 'function') {\r\n      node.addEventListener(event, fn, opt_useCapture || false);\r\n    } else if (typeof node.attachEvent == 'function') {\r\n      node.attachEvent('on' + event, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a previously added event handler from a DOM node.\r\n   * @param {Node} node The DOM node to remove the event handler from.\r\n   * @param {string} event The event name.\r\n   * @param {Function} fn The event handler to remove.\r\n   * @param {boolean} opt_useCapture If the event handler was added with this\r\n   *     flag set to true, it should be set to true here in order to remove it.\r\n   */\r\n  function removeEvent(node, event, fn, opt_useCapture) {\r\n    if (typeof node.removeEventListener == 'function') {\r\n      node.removeEventListener(event, fn, opt_useCapture || false);\r\n    } else if (typeof node.detatchEvent == 'function') {\r\n      node.detatchEvent('on' + event, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the intersection between two rect objects.\r\n   * @param {Object} rect1 The first rect.\r\n   * @param {Object} rect2 The second rect.\r\n   * @return {?Object} The intersection rect or undefined if no intersection\r\n   *     is found.\r\n   */\r\n  function computeRectIntersection(rect1, rect2) {\r\n    var top = Math.max(rect1.top, rect2.top);\r\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\r\n    var left = Math.max(rect1.left, rect2.left);\r\n    var right = Math.min(rect1.right, rect2.right);\r\n    var width = right - left;\r\n    var height = bottom - top;\r\n\r\n    return (\r\n      width >= 0 &&\r\n      height >= 0 && {\r\n        top: top,\r\n        bottom: bottom,\r\n        left: left,\r\n        right: right,\r\n        width: width,\r\n        height: height\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Shims the native getBoundingClientRect for compatibility with older IE.\r\n   * @param {Element} el The element whose bounding rect to get.\r\n   * @return {Object} The (possibly shimmed) rect of the element.\r\n   */\r\n  function getBoundingClientRect(el) {\r\n    var rect;\r\n\r\n    try {\r\n      rect = el.getBoundingClientRect();\r\n    } catch (err) {\r\n      // Ignore Windows 7 IE11 \"Unspecified error\"\r\n      // https://github.com/w3c/IntersectionObserver/pull/205\r\n    }\r\n\r\n    if (!rect) return getEmptyRect();\r\n\r\n    // Older IE\r\n    if (!(rect.width && rect.height)) {\r\n      rect = {\r\n        top: rect.top,\r\n        right: rect.right,\r\n        bottom: rect.bottom,\r\n        left: rect.left,\r\n        width: rect.right - rect.left,\r\n        height: rect.bottom - rect.top\r\n      };\r\n    }\r\n    return rect;\r\n  }\r\n\r\n  /**\r\n   * Returns an empty rect object. An empty rect is returned when an element\r\n   * is not in the DOM.\r\n   * @return {Object} The empty rect.\r\n   */\r\n  function getEmptyRect() {\r\n    return {\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      width: 0,\r\n      height: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Checks to see if a parent element contains a child elemnt (including inside\r\n   * shadow DOM).\r\n   * @param {Node} parent The parent element.\r\n   * @param {Node} child The child element.\r\n   * @return {boolean} True if the parent node contains the child node.\r\n   */\r\n  function containsDeep(parent, child) {\r\n    var node = child;\r\n    while (node) {\r\n      if (node == parent) return true;\r\n\r\n      node = getParentNode(node);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Gets the parent node of an element or its host element if the parent node\r\n   * is a shadow root.\r\n   * @param {Node} node The node whose parent to get.\r\n   * @return {Node|null} The parent node or null if no parent exists.\r\n   */\r\n  function getParentNode(node) {\r\n    var parent = node.parentNode;\r\n\r\n    if (parent && parent.nodeType == 11 && parent.host) {\r\n      // If the parent is a shadow root, return the host element.\r\n      return parent.host;\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  // Exposes the constructors globally.\r\n  window.IntersectionObserver = IntersectionObserver;\r\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\r\n})(window, document);\r\n"],"sourceRoot":""}