{"version":3,"sources":["webpack:///webpack/bootstrap 7eda2e53e4eba3ed46de","webpack:///./src/js/config.js","webpack:///./src/js/core/item-navigation.js","webpack:///./src/js/core/document-navigation.js","webpack:///./src/js/core/image-loader.js","webpack:///./src/js/app.js","webpack:///./src/js/lib/intersection-observer.js","webpack:///./src/js/plugins/keyboard-navigation.js","webpack:///./src/js/util/passive-event-listener.js","webpack:///./src/js/util/clamp.js","webpack:///./src/js/util/get-float-property-value.js","webpack:///./src/js/util/get-outer-width.js","webpack:///./src/js/util/linked-map.js","webpack:///./src/js/plugins/wheel-navigation.js","webpack:///./src/js/plugins/item-linking.js","webpack:///./src/js/plugins/active-document-highlighting.js","webpack:///./src/js/core/document-loader.js","webpack:///./src/js/core/modal.js","webpack:///./src/js/core/load-plugin.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","config","assets","documents","images","metaSlide","preserveAspectRatio","highlightColor","selector","doc","scrollbox","itemContainer","item","navigateItem","distance","getScrollPos","itemWidth","itemsAligned","currentScrollPos","maxScrollPos","getItemCount","getFullyVisibleItems","__WEBPACK_IMPORTED_MODULE_2__document_navigation__","setScrollPos","__WEBPACK_IMPORTED_MODULE_1__util__","Math","round","alignItems","currentPos","Array","from","getItems","indexOf","getActiveItem","targetPos","setActiveItem","updateActiveItem","activeDoc","allItemsVisible","docRect","getBoundingClientRect","itemRect","left","right","top","bottom","activeItemInView","docWidth","floor","getScrollbox","scrollLeft","itemPos","maxPos","querySelector","__WEBPACK_IMPORTED_MODULE_0__config__","parentElement","children","childElementCount","targetItem","activeItem","classList","remove","add","document","activeElement","blur","determineItemWidth","itemSample","freeze","navigateDocument","direction","targetDoc","docs","getDocuments","currentIndex","getActiveDocument","targetIndex","__WEBPACK_IMPORTED_MODULE_0__util__","length","getTargetDoc","setActiveDocument","offset","element","docEl","documentElement","offsetTop","window","scrollY","clientHeight","offsetHeight","getVerticalOffsets","extraPart","scrollBy","abs","activeDocument","__WEBPACK_IMPORTED_MODULE_1__config__","HTMLElement","imageLoadHandler","entries","observer","entry","isIntersecting","image","target","setAttribute","getAttribute","removeAttribute","addEventListener","closest","style","cssText","includes","aspectRatio","naturalWidth","naturalHeight","setProperty","toString","setItemAspectRatio","handleItemImageLoaded","unobserve","startImageObserver","imageObserver","querySelectorAll","forEach","observe","observerOptions","rootMargin","ImageLoader","[object Object]","IntersectionObserver","__WEBPACK_IMPORTED_MODULE_2__core__","enable","plugin","values","__WEBPACK_IMPORTED_MODULE_1__plugins__","IntersectionObserverEntry","this","time","rootBounds","boundingClientRect","intersectionRect","width","height","targetRect","targetArea","intersectionArea","intersectionRatio","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","fn","timeout","timer","setTimeout","throttle","bind","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","thresholds","_initThresholds","threshold","map","margin","value","unit","join","addEvent","node","event","opt_useCapture","attachEvent","removeEvent","removeEventListener","detatchEvent","el","rect","err","containsDeep","parent","child","getParentNode","parentNode","host","registry","POLL_INTERVAL","some","_registerInstance","push","_monitorIntersections","filter","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","slice","opt_threshold","isArray","sort","t","a","isNaN","opt_rootMargin","margins","split","parts","exec","parseFloat","_monitoringIntersections","_monitoringInterval","setInterval","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","performance","now","_hasCrossedThreshold","getComputedStyle","display","atRoot","parentRect","parentComputedStyle","body","overflow","rect1","rect2","max","min","computeRectIntersection","html","clientWidth","_expandRectByRootMargin","newRect","oldRatio","newRatio","index","splice","handleKeyboardInput","keyCode","controlKeyNames","preventDefault","keyName","controlKey","trigger","__WEBPACK_IMPORTED_MODULE_2__core_document_navigation__","KeyboardNavigationModule","enabled","description","active","33","34","35","36","37","38","39","40","homeKey","__WEBPACK_IMPORTED_MODULE_1__core_item_navigation__","endKey","pageUp","pageDown","arrowLeft","shiftKey","arrowRight","arrowUp","arrowDown","supportsPassive","opts","listener","passive","clamp","getFloatPropertyValue","getPropertyValue","getOuterWidth","__WEBPACK_IMPORTED_MODULE_0____","LinkedMap","iterable","_map","Map","_first","_last","key","set","Symbol","toStringTag","first","last","size","clear","has","LinkedMapNode","prev","next","delete","thisArg","reverse","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","done","undefined","iteratorResult","_key","_value","_next","_prev","handleWheelNavigation","scrollingDirection","deltaX","deltaY","scrolling","vertical","horizontal","__WEBPACK_IMPORTED_MODULE_3__core_document_navigation__","console","log","delta","__WEBPACK_IMPORTED_MODULE_2__core_item_navigation__","sign","onModifierDown","modifierKeyNames","onModifierUp","onModifierBlur","WheelNavigation","16","handleKeyDown","openInNewTab","ctrlKey","handleOpenIntent","handleDoubleClick","button","targetElement","tag","tagName","toLowerCase","potentiallyInteractive","hasAttribute","disabled","offsetParent","isInteractive","docSource","dataset","itemIndex","page","itemSource","open","location","href","openDocumentSource","ItemLinking","setTouched","touched","resetTouched","handleHighlightOnHover","Element","ActiveDocumentHighlighting","createSlidehubContainer","slidehubContainer","createElement","appendChild","documentFramesMarkup","documentName","store","keys","documentSource","classes","insertAdjacentHTML","insertDocumentFrames","loadTargetDocument","fragmentIdentifier","url","hashPosition","substring","getFragmentIdentifier","determineTargetDocument","prevIterator","iteratorFor","nextIterator","initialDocument","loadDocument","__WEBPACK_IMPORTED_MODULE_3__item_navigation__","loadInitialDocument","loadBatch","documentIterable","insertPosition","batchSize","documentData","loaded","warn","innerDocumentMarkup","items","itemCount","imageSource","createDocumentMarkup","getElementById","insertDocument","elementWidth","__WEBPACK_IMPORTED_MODULE_4__util__","reduce","sum","getOuterChildrenWidth","setItemContainerWidth","__WEBPACK_IMPORTED_MODULE_1__image_loader__","id","DocumentLoader","documentsData","parseDocumentsData","openModal","modal","lastFocusedElement","getFocusableElements","focus","moveFocusToModal","closeOnEscape","trapTabKey","closeOnBackground","closeModal","tabable","currentTarget","tabIndex","ancestor","focusableElementsSelector","Modal","targetModalClass","targetModal","loadPlugin","fieldset","toggleButtonMarkup","createToggleButton","pluginRegistry","toggleButton","registerPlugin","feature","isPressed","String","stateAttr","info","disable","triggerButtonAction","__webpack_exports__"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7eda2e53e4eba3ed46de","export { config };\n\n/**\n * @typedef Config\n * @type {object}\n * @property {ConfigPropertyAssets} assets\n * @property {boolean} metaSlide\n * @property {boolean} preserveAspectRatio\n * @property {string|null} highlightColor\n * @property {ConfigPropertySelector} selector\n *\n * @typedef ConfigPropertyAssets\n * @type {object}\n * @property {string} documents\n * @property {string} images\n *\n * @typedef ConfigPropertySelector\n * @type {object}\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Global configuration object.\n *\n * @type {Config}\n */\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assets: {\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\n  },\n\n  // Create a meta slide for each document?\n  metaSlide: true,\n\n  // Preserve aspect ratio of document items?\n  preserveAspectRatio: false,\n\n  // Overrides the default highlight color\n  // Takes string values that represent a valid CSS color value; for example:\n  // 'transparent', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\n  // Setting highlightColor to `null` will not override the default.\n  highlightColor: null,\n\n  // Selectors for UI components\n  selector: {\n    doc: '.doc',\n    scrollbox: '.doc-scrollbox',\n    itemContainer: '.page-container',\n    item: '.page'\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/config.js\n// module id = 1\n// module chunks = 0","import { config } from '../config';\nimport { clamp, getFloatPropertyValue, getOuterWidth } from '../util';\nimport { getActiveDocument, setActiveDocument } from './document-navigation';\n\nexport { navigateItem, getActiveItem, setActiveItem, getItemCount, determineItemWidth };\n\nlet itemWidth;\n\n/**\n * Main handler for item navigation.\n *\n * @param {number} distance\n */\nfunction navigateItem(distance) {\n  if (!itemsAligned()) {\n    alignItems(distance);\n  }\n\n  updateActiveItem(distance);\n\n  // If all items are already visible, we’re done here.\n  if (allItemsVisible()) {\n    return;\n  }\n\n  // If the active item is already inside the view, we’re done here.\n  if (activeItemInView()) {\n    return;\n  }\n\n  // console.log('> View needs update');\n  setScrollPos(getScrollPos() + distance);\n}\n\n/**\n * Returns true if items are aligned within a document, false otherwise.\n *\n * @returns {boolean}\n */\nfunction itemsAligned() {\n  if (getScrollPos() % itemWidth === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Aligns items to the grid.\n *\n * @param {number} distance\n */\nfunction alignItems(distance) {\n  const currentScrollPos = getScrollPos();\n  const lastItemPos = getItemCount() - 1;\n  const maxScrollPos = lastItemPos - getFullyVisibleItems(getActiveDocument());\n  const alignedScrollPos = clamp(Math.round(currentScrollPos), 0, maxScrollPos);\n\n  setScrollPos(alignedScrollPos);\n}\n\n/**\n * TO DO refactor see document-navigation.js#getTargetDoc\n *\n * Determines the new active item.\n *\n * @param {number} distance\n */\nfunction updateActiveItem(distance) {\n  const currentPos = getActiveItemPos();\n  const targetPos = clamp(currentPos + distance, 0, getItemCount() - 1);\n\n  const items = getItems();\n  setActiveItem(items.item(targetPos));\n}\n\n/**\n * Returns true if all items are visible within a document, false otherwise.\n *\n * @returns {boolean}\n */\nfunction allItemsVisible() {\n  const activeDoc = getActiveDocument();\n\n  return getItemCount() <= getFullyVisibleItems(activeDoc);\n}\n\n/**\n * Tests whether a documents’ active item is completely in view (i.e. the item\n * is completely visible and not occluded).\n *\n * @returns {boolean}\n */\nfunction activeItemInView() {\n  const docRect = getActiveDocument().getBoundingClientRect();\n  const itemRect = getActiveItem().getBoundingClientRect();\n\n  return (\n    docRect.left <= itemRect.left &&\n    itemRect.right <= docRect.right &&\n    docRect.top <= itemRect.top &&\n    itemRect.bottom <= docRect.bottom\n  );\n}\n\n/**\n * Calculates the number of items that would be fully visible.\n *\n * @param {Element} doc\n * @returns {number}\n */\nfunction getFullyVisibleItems(doc) {\n  const docWidth = getFloatPropertyValue(doc, 'width');\n  return Math.floor(docWidth / itemWidth);\n}\n\n/**\n * Returns the current scroll position.\n *\n * @returns {number}\n */\nfunction getScrollPos() {\n  return getScrollbox().scrollLeft / itemWidth;\n}\n\n/**\n * Sets a new scroll position.\n *\n * @param {number} itemPos\n */\nfunction setScrollPos(itemPos) {\n  const maxPos = getItemCount() - getFullyVisibleItems(getActiveDocument());\n  itemPos = clamp(itemPos, 0, maxPos);\n\n  getScrollbox().scrollLeft = itemPos * itemWidth;\n}\n\n/**\n * Returns the scrollbox for the currently active document.\n *\n * @returns {Element}\n */\nfunction getScrollbox() {\n  return getActiveDocument().querySelector(config.selector.scrollbox);\n}\n\n/**\n * Returns all items as an HTMLCollection.\n *\n * @returns {HTMLCollection}\n */\nfunction getItems() {\n  return getActiveItem().parentElement.children;\n}\n\n/**\n * Returns the number of items.\n *\n * @returns {number}\n */\nfunction getItemCount() {\n  return getActiveItem().parentElement.childElementCount;\n}\n\n/**\n * Returns the position of the currently active item.\n *\n * @returns {number}\n */\nfunction getActiveItemPos() {\n  return Array.from(getItems()).indexOf(getActiveItem());\n}\n\n/**\n * Returns the currently active item.\n *\n * @returns {Element}\n */\nfunction getActiveItem() {\n  const activeDoc = getActiveDocument();\n\n  return activeDoc.querySelector(`${config.selector.item}.active`);\n}\n\n/**\n * Set a new active item.\n *\n * @param {Element} targetItem\n */\nfunction setActiveItem(targetItem) {\n  const activeItem = getActiveItem();\n  if (activeItem) {\n    activeItem.classList.remove('active');\n  }\n\n  targetItem.classList.add('active');\n  document.activeElement.blur();\n}\n\n/**\n * Computes the item width. Must only be called once.\n */\nfunction determineItemWidth() {\n  const itemSample = document.querySelector(config.selector.item);\n  itemWidth = getOuterWidth(itemSample);\n  Object.freeze(itemWidth);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/item-navigation.js\n// module id = 2\n// module chunks = 0","import { clamp } from '../util';\nimport { config } from '../config';\n\nexport { navigateDocument, getActiveDocument, setActiveDocument };\n\nlet activeDocument;\n\n/**\n * Navigates through documents in a certain direction.\n *\n * @param {number} direction\n */\nfunction navigateDocument(direction) {\n  const targetDoc = getTargetDoc(direction);\n\n  if (targetDoc === null) {\n    return;\n  }\n\n  setActiveDocument(targetDoc);\n\n  const offset = getVerticalOffsets(targetDoc);\n  const extraPart = targetDoc.clientHeight / 2;\n  if (offset.top < 0) {\n    window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\n  } else if (offset.bottom < 0) {\n    window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\n  }\n}\n\n/**\n * Finds the target document given a navigation distance.\n *\n * @param {number} distance\n * @returns {HTMLElement}\n */\nfunction getTargetDoc(distance) {\n  const docs = getDocuments();\n  const currentIndex = getDocumentPos();\n  const targetIndex = clamp(currentIndex + distance, 0, docs.length - 1);\n  return docs.item(targetIndex);\n}\n\n/**\n * Returns an object containing vertical offsets for an element with the\n * viewport.\n *\n * @param {HTMLElement} element\n * @returns {object}\n */\nfunction getVerticalOffsets(element) {\n  const docEl = document.documentElement;\n  return {\n    top: element.offsetTop - window.scrollY,\n    bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\n  };\n}\n\n/**\n * Finds the position of the currently active document.\n *\n * @returns {number}\n */\nfunction getDocumentPos() {\n  return Array.from(getDocuments()).indexOf(getActiveDocument());\n}\n\n/**\n * Returns all SlideHub documents as a HTMLCollection.\n *\n * @returns {HTMLCollection}\n */\nfunction getDocuments() {\n  return getActiveDocument().parentElement.children;\n}\n\n/**\n * Returns the currently active document.\n *\n * @returns {Element}\n */\nfunction getActiveDocument() {\n  if (!activeDocument) {\n    activeDocument = document.querySelector(config.selector.doc);\n  }\n\n  return activeDocument;\n}\n\n/**\n * Sets a new active document.\n *\n * @param {Element} doc\n */\nfunction setActiveDocument(doc) {\n  // Remove active class from currently active document\n  if (activeDocument) {\n    activeDocument.classList.remove('active');\n  }\n\n  // Set new active document\n  activeDocument = doc;\n  activeDocument.classList.add('active');\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/document-navigation.js\n// module id = 3\n// module chunks = 0","/**\n * Loads document images when needed (i.e. lazy-loading).\n */\n\nimport { config } from '../config';\n\nexport { ImageLoader, startImageObserver };\n\nlet imageObserver;\n\nconst observerOptions = {\n  rootMargin: `500px 1000px`\n};\n\nconst ImageLoader = {\n  enable() {\n    imageObserver = new IntersectionObserver(imageLoadHandler, observerOptions);\n  }\n};\n\n/**\n * Handles lazy-loading document images.\n *\n * @param {*} entries\n * @param {IntersectionObserver} observer\n */\nfunction imageLoadHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      const image = entry.target;\n      image.setAttribute('src', image.getAttribute('data-src'));\n      image.removeAttribute('data-src');\n\n      image.addEventListener('load', () => handleItemImageLoaded(image));\n\n      // Unobserve the current target because no further action is required\n      observer.unobserve(image);\n    }\n  }\n}\n\n/**\n * Plain wrapper for triggering certain actions once an image has loaded.\n *\n * @param {HTMLImageElement} image\n */\nfunction handleItemImageLoaded(image) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(image);\n  }\n}\n\n/**\n * Calculates the aspect ratio of an image and stores it in the DOM as a\n * custom CSS property.\n *\n * @param {HTMLImageElement} image\n */\nfunction setItemAspectRatio(image) {\n  const doc = image.closest(config.selector.doc);\n\n  if (doc && !doc.style.cssText.includes('--page-aspect-ratio')) {\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\n    doc.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\n  }\n}\n\n/**\n * Starts the image observer on all lazy-loading images.\n *\n * @param {HTMLElement} doc\n */\nfunction startImageObserver(doc) {\n  if (imageObserver) {\n    const images = Array.from(doc.querySelectorAll('img[data-src]'));\n    images.forEach(image => imageObserver.observe(image));\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/image-loader.js\n// module id = 4\n// module chunks = 0","/**\n * Application entry point.\n *\n * Loads core modules and plugins.\n */\n\nimport './lib/intersection-observer.js';\nimport * as plugins from './plugins';\nimport { ImageLoader, DocumentLoader, Modal, loadPlugin } from './core';\n\n/**\n * An Immediately Invoked Function Expression, called like that because it’s\n * immediately executed when a JavaScript file like this is sourced.\n *\n * Starts the engines for SlideHub.\n */\n(function() {\n  loadCoreModules();\n  loadPlugins();\n})();\n\n/**\n * Loads core modules.\n */\nfunction loadCoreModules() {\n  ImageLoader.enable();\n  DocumentLoader.enable();\n  Modal.enable();\n}\n\n/**\n * Loads all plugins from the ./plugins directory.\n */\nfunction loadPlugins() {\n  document.addEventListener('DOMContentLoaded', function() {\n    for (const plugin of Object.values(plugins)) {\n      loadPlugin(plugin);\n    }\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/app.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n  'use strict';\n\n  // Exits early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n  if (\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  ) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n    return;\n  }\n\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observering a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n  var registry = [];\n\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect;\n\n    // Calculates the intersection ratio.\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n    // Sets intersection ratio.\n    if (targetArea) {\n      this.intersectionRatio = intersectionArea / targetArea;\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    }\n\n    // Binds and throttles `this._checkForIntersections`.\n    this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this),\n      this.THROTTLE_TIMEOUT\n    );\n\n    // Private properties.\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n    // Public properties.\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues\n      .map(function(margin) {\n        return margin.value + margin.unit;\n      })\n      .join(' ');\n  }\n\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.observe = function(target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n    this._observationTargets.push({ element: target, entry: null });\n    this._monitorIntersections();\n    this._checkForIntersections();\n  };\n\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.unobserve = function(target) {\n    this._observationTargets = this._observationTargets.filter(function(item) {\n      return item.element != target;\n    });\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n      this._unregisterInstance();\n    }\n  };\n\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n  IntersectionObserver.prototype.disconnect = function() {\n    this._observationTargets = [];\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  };\n\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n  IntersectionObserver.prototype.takeRecords = function() {\n    var records = this._queuedEntries.slice();\n    this._queuedEntries = [];\n    return records;\n  };\n\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n  IntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n\n    return threshold.sort().filter(function(t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n      return t !== a[i - 1];\n    });\n  };\n\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n  IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function(margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n      return { value: parseFloat(parts[1]), unit: parts[2] };\n    });\n\n    // Handles shorthand.\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n\n    return margins;\n  };\n\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibilty state is visible.\n   * @private\n   */\n  IntersectionObserver.prototype._monitorIntersections = function() {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true;\n\n      // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if ('MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n  IntersectionObserver.prototype._unmonitorIntersections = function() {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n        this._domObserver = null;\n      }\n    }\n  };\n\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n  IntersectionObserver.prototype._checkForIntersections = function() {\n    var rootIsInDom = this._rootIsInDom();\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function(item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n      var rootContainsTarget = this._rootContainsTarget(target);\n      var oldEntry = item.entry;\n      var intersectionRect =\n        rootIsInDom &&\n        rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = (item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      }));\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function(target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\n\n      // If the parent isn't displayed, an intersection can't happen.\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (\n          parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible'\n        ) {\n          parentRect = getBoundingClientRect(parent);\n        }\n      }\n\n      // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n        if (!intersectionRect) break;\n      }\n      parent = getParentNode(parent);\n    }\n    return intersectionRect;\n  };\n\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n  IntersectionObserver.prototype._getRootRect = function() {\n    var rootRect;\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n    return this._expandRectByRootMargin(rootRect);\n  };\n\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n  IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n    var margins = this._rootMarginValues.map(function(margin, i) {\n      return margin.unit == 'px'\n        ? margin.value\n        : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n\n    return newRect;\n  };\n\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n  IntersectionObserver.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\n\n    // Ignore unchanged ratios\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i];\n\n      // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n      if (\n        threshold == oldRatio ||\n        threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio\n      ) {\n        return true;\n      }\n    }\n  };\n\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n  IntersectionObserver.prototype._rootIsInDom = function() {\n    return !this.root || containsDeep(document, this.root);\n  };\n\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n  IntersectionObserver.prototype._rootContainsTarget = function(target) {\n    return containsDeep(this.root || document, target);\n  };\n\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n  IntersectionObserver.prototype._registerInstance = function() {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n  IntersectionObserver.prototype._unregisterInstance = function() {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n\n  /**\n   * Throttles a function and delays its executiong, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function() {\n      if (!timer) {\n        timer = setTimeout(function() {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n\n    return (\n      width >= 0 &&\n      height >= 0 && {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        width: width,\n        height: height\n      }\n    );\n  }\n\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {\n      // Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect();\n\n    // Older IE\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n    return rect;\n  }\n\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  /**\n   * Checks to see if a parent element contains a child elemnt (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n  function containsDeep(parent, child) {\n    var node = child;\n    while (node) {\n      if (node == parent) return true;\n\n      node = getParentNode(node);\n    }\n    return false;\n  }\n\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n    return parent;\n  }\n\n  // Exposes the constructors globally.\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})(window, document);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/lib/intersection-observer.js\n// module id = 8\n// module chunks = 0","/**\n * Keyboard Navigation.\n */\n\nimport { listener } from '../util';\nimport { navigateItem, getItemCount } from '../core/item-navigation';\nimport { navigateDocument } from '../core/document-navigation';\n\nexport { KeyboardNavigationModule };\n\nconst KeyboardNavigationModule = {\n  enabled: true,\n  name: 'keyboard-navigation',\n  description: 'Navigate documents and its pages with the keyboard',\n  enable() {\n    document.addEventListener('keydown', handleKeyboardInput, listener.active);\n  },\n  disable() {\n    document.removeEventListener('keydown', handleKeyboardInput, listener.active);\n  }\n};\n\n/**\n * Handles keyboard interactions with documents and items.\n *\n * @param {KeyboardEvent} event\n */\nfunction handleKeyboardInput(event) {\n  if (event.keyCode in controlKeyNames) {\n    event.preventDefault();\n    const keyName = controlKeyNames[event.keyCode];\n    controlKey[keyName].trigger(event);\n  }\n}\n\n/*\n* Maps key codes to key names.\n* It’s used within keyboard-related event handlers in order to work with the\n* keys’ names instead of key codes.\n*\n* Removing an entry here disables its application-related interactions\n*/\nconst controlKeyNames = Object.freeze({\n  33: 'pageUp',\n  34: 'pageDown',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n});\n\n/*\n* Maps control keys to a trigger function that is executed when the key is\n* pressed.\n*/\nconst controlKey = Object.freeze({\n  homeKey: {\n    direction: -1,\n    trigger: function() {\n      navigateItem(this.direction * getItemCount());\n    }\n  },\n  endKey: {\n    direction: 1,\n    trigger: function() {\n      navigateItem(this.direction * getItemCount());\n    }\n  },\n  pageUp: {\n    direction: -1,\n    trigger: function() {\n      navigateDocument(this.direction * 3);\n    }\n  },\n  pageDown: {\n    direction: 1,\n    trigger: function() {\n      navigateDocument(this.direction * 3);\n    }\n  },\n  arrowLeft: {\n    direction: -1,\n    trigger: function(event) {\n      navigateItem(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  },\n  arrowRight: {\n    direction: 1,\n    trigger: function(event) {\n      navigateItem(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  },\n  arrowUp: {\n    direction: -1,\n    trigger: function(event) {\n      navigateDocument(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  },\n  arrowDown: {\n    direction: 1,\n    trigger: function(event) {\n      navigateDocument(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/plugins/keyboard-navigation.js\n// module id = 10\n// module chunks = 0","export { listener };\n\n/**\n * Feature detection for passive event listeners as per:\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('test', null, opts);\n} catch (event) {}\n\n// Stores the third argument for `addEventListener` for both cases\nconst listener = {\n  active: supportsPassive ? { passive: false } : false,\n  passive: supportsPassive ? { passive: true } : false\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/passive-event-listener.js\n// module id = 11\n// module chunks = 0","export { clamp };\n\n/**\n * Clamps the given value between the min and max boundaries\n * Returns value if min <= value <= max.\n * Returns min if value < min.\n * Returns max if value > max.\n *\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/clamp.js\n// module id = 12\n// module chunks = 0","export { getFloatPropertyValue };\n\n/**\n * Returns a property value parsed as a floating-point number.\n *\n * @param {Element} element\n * @param {string} property\n * @returns {number}\n */\nfunction getFloatPropertyValue(element, property) {\n  const value = getComputedStyle(element).getPropertyValue(property);\n\n  if (value === '') {\n    return 0;\n  }\n\n  return parseFloat(value);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/get-float-property-value.js\n// module id = 13\n// module chunks = 0","import { getFloatPropertyValue } from '.';\n\nexport { getOuterWidth };\n\n/**\n * Returns the computed total outer width of an element.\n * The outer width is defined as the width plus any horizontal margins.\n * This is assumes the `box-sizing` box model.\n *\n * @param {Element} element\n * @returns {number}\n */\nfunction getOuterWidth(element) {\n  const width = getFloatPropertyValue(element, 'width');\n  const marginLeft = getFloatPropertyValue(element, 'margin-left');\n  const marginRight = getFloatPropertyValue(element, 'margin-right');\n\n  return marginLeft + width + marginRight;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/get-outer-width.js\n// module id = 14\n// module chunks = 0","export { LinkedMap };\n\n/**\n * @typedef {class} LinkedMapType\n * @property {Map.<K, V>} _map\n * @property {LinkedMapNode} _first\n * @property {LinkedMapNode} _last\n * @template K, V\n */\n\n/**\n * A doubly-linked Map implementation based on Map.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n *\n * It exposes its order via iterable iterators which can be used for both\n * forwards and backwards iteration. As per Map, the order of a LinkedMap is\n * always the insertion order (i.e. not sorted).\n *\n * @type {LinkedMapType}\n */\nclass LinkedMap {\n  /**\n   * @constructor\n   * @param {Iterable?} iterable\n   */\n  constructor(iterable = null) {\n    this._map = new Map();\n    this._first = null;\n    this._last = null;\n\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\n   * @returns {string}\n   */\n  get [Symbol.toStringTag]() {\n    return 'LinkedMap';\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   * @private\n   */\n  get first() {\n    return this._first;\n  }\n\n  /**\n   * @param {LinkedMapNode} node\n   * @private\n   */\n  set first(node) {\n    this._first = node;\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   * @private\n   */\n  get last() {\n    return this._last;\n  }\n\n  /**\n   * @param {LinkedMapNode} node\n   * @private\n   */\n  set last(node) {\n    this._last = node;\n  }\n\n  /**\n   * The size accessor property returns the number of elements in a LinkedMap object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n   *\n   * @returns {number} the size of the LinkedMap.\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * The clear() method removes all elements from a LinkedMap object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   */\n  clear() {\n    this._map.clear();\n    this._first = null;\n    this._last = null;\n  }\n\n  /**\n   * The has() method returns a boolean indicating whether an element with the\n   * specified key exists or not.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   *\n   * @param {*} key\n   * @returns {boolean}\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * The get() method returns a specified element from a Map object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   *\n   * @param {*} key\n   * @returns {*|undefined}\n   */\n  get(key) {\n    return this._map.get(key).value;\n  }\n\n  /**\n   * Retrieves the last element in a LinkedMap object\n   *\n   * @returns {*}\n   */\n  getLast() {\n    return this.last.value;\n  }\n\n  /**\n   * Retrieves the first element in a LinkedMap object\n   *\n   * @returns {*}\n   */\n  getFirst() {\n    return this.first.value;\n  }\n\n  /**\n   * The add() method adds a new element to the internal data structure.\n   * It does not link itself with its neighboring elements which is why\n   * this method must never be called directly.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {LinkedMapNode}\n   * @private\n   */\n  add(key, value) {\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n    } else {\n      node = new LinkedMapNode(key, value);\n\n      this._map.set(key, node);\n    }\n\n    return node;\n  }\n\n  /**\n   * The set() method adds and links a new element at the end of a LinkedMap\n   * object.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {LinkedMap}\n   */\n  set(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.prev = this.last;\n      this.last.next = node;\n      this.last = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The setFront() method adds and links a new element at the beginning of a\n   * LinkedMap object.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {LinkedMap}\n   */\n  setFront(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first.prev = node;\n      this.first = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The delete() method removes the specified element from a Map object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   *\n   * @param {*} key\n   * @returns {boolean}\n   */\n  delete(key) {\n    if (this.has(key)) {\n      const node = this._map.get(key);\n\n      if (this.first === this.last) {\n        this.first = null;\n        this.last = null;\n      } else if (this.first === node) {\n        node.next.prev = null;\n        this.first = node.next;\n      } else if (this.last === node) {\n        node.prev.next = null;\n        this.last = node.prev;\n      } else {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n      }\n\n      this._map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * The forEach() method executes a provided function once per each key/value\n   * pair in the Map object, in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   */\n  forEach(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * Same as the forEach() method, but executing in reverse insertion order.\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   */\n  forEachReverse(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries().reverse()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The initial value of the @@iterator property is the same function object\n   * as the initial value of the entries property.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   *\n   * @returns {IterableIterator}\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Allows usage of the iteration protocols for reverse iteration.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Examples:\n   *\n   *   for (const [key, value] of linkedMap.reverse()) { … }\n   *\n   *   [...linkedMap.reverse()]\n   *\n   * @returns {IterableIterator}\n   */\n  reverse() {\n    return this.entries().reverse();\n  }\n\n  /**\n   * The entries() method returns a new Iterator object that contains the\n   * [key, value] pairs for each element in the Map object in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\n   *\n   * @returns {IterableIterator}\n   */\n  entries() {\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The keys() method returns a new Iterator object that contains the keys for\n   * each element in the Map object in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\n   *\n   * @returns {IterableIterator}\n   */\n  keys() {\n    const getIteratorValue = function(node) {\n      return node.key;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The values() method returns a new Iterator object that contains the values\n   * for each element in the Map object in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\n   *\n   * @returns {IterableIterator}\n   */\n  values() {\n    const getIteratorValue = function(node) {\n      return node.value;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * Return an iterator for a specific element in the LinkedMap.\n   *\n   * @param {*} key\n   * @returns {IterableIterator}\n   */\n  iteratorFor(key) {\n    let startNode = this._map.get(key);\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue, startNode);\n  }\n\n  /**\n   * Returns an object which is both an iterable and an iterator since it\n   * fulfills the requirements of the iteration protocols.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Iterator requirements:\n   * An object that implements a function called next. This function returns an\n   * object with two properties: value and done.\n   *\n   * Iterable requirements:\n   * An object that implements a function [Symbol.iterator](). This function\n   * returns an iterator. Since the entries() method itself returns the\n   * iterator object, `this` references the correct iterator object.\n   *\n   * In addition, the object is also reverse-iterable by providing a reverse()\n   * method. Calling it on an iterable will iterate in reverse insertion order.\n   *\n   * @param {function} getIteratorValue\n   * @param {LinkedMapNode?} startNode\n   * @returns {IterableIterator}\n   * @private\n   */\n  iterableIterator(getIteratorValue, startNode = undefined) {\n    let currentNode = startNode ? startNode : this.first;\n    // Store the this.last node as inside the reverse() method, `this` will be\n    // bound to iterableIterator, not LinkedMap. That’s on purpose.\n    const last = this.last;\n    let nextProp = 'next';\n\n    return {\n      reverse() {\n        currentNode = startNode ? startNode : last;\n        nextProp = 'prev';\n        return this;\n      },\n      [Symbol.iterator]() {\n        // Return the iterable itself.\n        return this;\n      },\n      next: function() {\n        let value;\n        if (currentNode) {\n          value = getIteratorValue(currentNode);\n          currentNode = currentNode[nextProp];\n        }\n        return iteratorResult(value);\n      }\n    };\n  }\n}\n\n/**\n * @typedef {class} LinkedMapNodeType\n * @property {K} _key\n * @property {V} _value\n * @property {LinkedMapNode} _prev\n * @property {LinkedMapNode} _next\n * @template K, V\n */\n\n/**\n * Represents a node within a LinkedMap.\n *\n * @type {LinkedMapNodeType}\n */\nclass LinkedMapNode {\n  /**\n   * @constructor\n   * @param {*} key\n   * @param {*} value\n   */\n  constructor(key, value) {\n    this._key = key;\n    this._value = value;\n    this._next = null;\n    this._prev = null;\n  }\n\n  /**\n   * @returns {*}\n   */\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * @returns {*}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @param {*} value\n   */\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * @param {LinkedMapNode} next\n   */\n  set next(next) {\n    this._next = next;\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   */\n  get prev() {\n    return this._prev;\n  }\n\n  /**\n   * @param {LinkedMapNode} prev\n   */\n  set prev(prev) {\n    this._prev = prev;\n  }\n}\n\n/**\n * Returns an IteratorResult object as per the following rules:\n * - If value is not undefined, done is false.\n * - If value is undefined, done is true. In this case, value may be omitted.\n *\n * This function does not belong to the LinkedMap prototype as it doesn’t need\n * access to any of the prototypes properties.\n *\n * @param {*|undefined} value\n * @returns {IteratorResult}\n */\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: value === undefined\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/linked-map.js\n// module id = 16\n// module chunks = 0","/**\n * Wheel Navigation.\n */\n\nimport { listener } from '../util';\nimport { config } from '../config';\nimport { navigateItem } from '../core/item-navigation';\nimport { getActiveDocument, setActiveDocument } from '../core/document-navigation';\n\nexport { WheelNavigation };\n\nconst WheelNavigation = {\n  enabled: true,\n  name: 'item-navigation',\n  description: 'Navigate pages with the mouse wheel by holding down Shift',\n  enable() {\n    enableModifier();\n    document.addEventListener('wheel', handleWheelNavigation, listener.active);\n  },\n  disable() {\n    disableModifier();\n    document.removeEventListener('wheel', handleWheelNavigation, listener.active);\n  }\n};\n\nconst scrolling = {\n  vertical: {\n    delta: 'deltaY'\n  },\n  horizontal: {\n    delta: 'deltaX'\n  }\n};\n\n/**\n * Handles wheel navigation.\n *\n * @param {WheelEvent} event\n */\nfunction handleWheelNavigation(event) {\n  // Don’t handle scrolling on elements that are not inside a document\n  const doc = event.target.closest(config.selector.doc);\n  if (doc === null) {\n    return;\n  }\n\n  const ratio = Math.abs(event.deltaX / event.deltaY);\n  const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\n\n  if (scrollingDirection === scrolling.horizontal) {\n    setActiveDocument(doc);\n    console.log('Horizontal scrolling ...');\n  }\n\n  // When scrolling vertically, only trigger navigation when modifier is pressed\n  if (scrollingDirection === scrolling.vertical && event.shiftKey) {\n    setActiveDocument(doc);\n\n    // Prevent vertical scrolling\n    event.preventDefault();\n\n    const delta = event[scrollingDirection.delta];\n    navigateItem(Math.sign(delta));\n  }\n}\n\n/**\n * Modifier keys.\n */\n\n// Maps key codes to key names\nconst modifierKeyNames = {\n  16: 'shiftKey'\n};\n\n/**\n * Wrapper for enabling all event listeners related to modifier handling.\n */\nfunction enableModifier() {\n  document.addEventListener('keydown', onModifierDown, listener.passive);\n  document.addEventListener('keyup', onModifierUp, listener.passive);\n  window.addEventListener('blur', onModifierBlur, listener.passive);\n}\n\n/**\n * Wrapper for disabling all event listeners related to modifier handling.\n */\nfunction disableModifier() {\n  document.removeEventListener('keydown', onModifierDown, listener.passive);\n  document.removeEventListener('keyup', onModifierUp, listener.passive);\n  window.removeEventListener('blur', onModifierBlur, listener.passive);\n}\n\n/**\n * Displays a special cursor when the modifier is pressed.\n *\n * @param {KeyboardEvent} event\n */\nfunction onModifierDown(event) {\n  const modifierKey = modifierKeyNames[event.keyCode];\n  if (modifierKey === 'shiftKey') {\n    const doc = getActiveDocument().querySelector(config.selector.itemContainer);\n    doc.style.setProperty('cursor', 'ew-resize');\n  }\n}\n\n/**\n * Removes the special cursor when the modifier is no longer pressed.\n *\n * @param {KeyboardEvent} event\n */\nfunction onModifierUp(event) {\n  const modifierKey = modifierKeyNames[event.keyCode];\n  if (modifierKey === 'shiftKey') {\n    const doc = getActiveDocument().querySelector(config.selector.itemContainer);\n    doc.style.setProperty('cursor', 'auto');\n  }\n}\n\n/**\n * Removes the special cursor when the user somehow leaves the page.\n */\nfunction onModifierBlur() {\n  const doc = getActiveDocument().querySelector(config.selector.itemContainer);\n  doc.style.setProperty('cursor', 'auto');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/plugins/wheel-navigation.js\n// module id = 17\n// module chunks = 0","/**\n * Item Linking.\n *\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\n * or double-clicking with a pointer device.\n */\n\nimport { config } from '../config';\nimport { listener } from '../util';\nimport { getActiveItem } from '../core/item-navigation';\nimport { getActiveDocument } from '../core/document-navigation';\n\nexport { ItemLinking };\n\nconst ItemLinking = {\n  enabled: true,\n  name: 'item-linking',\n  description: 'Link pages to PDF source',\n  enable() {\n    document.addEventListener('keydown', handleKeyDown, listener.passive);\n    document.addEventListener('dblclick', handleDoubleClick, listener.passive);\n  },\n  disable() {\n    document.removeEventListener('keydown', handleKeyDown, listener.passive);\n    document.removeEventListener('dblclick', handleDoubleClick, listener.passive);\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.keyCode !== 13) {\n    return;\n  }\n\n  const openInNewTab = event.ctrlKey;\n  handleOpenIntent(event.target, openInNewTab);\n}\n\n/**\n * @param {MouseEvent} event\n */\nfunction handleDoubleClick(event) {\n  if (event.button !== 0) {\n    return;\n  }\n\n  const doc = event.target.closest(config.selector.doc);\n  if (doc) {\n    const openInNewTab = true;\n    handleOpenIntent(event.target, openInNewTab);\n  }\n}\n\n/**\n *\n * @param {HTMLElement} targetElement\n * @param {boolean} openInNewTab\n */\nfunction handleOpenIntent(targetElement, openInNewTab) {\n  // Focusable elements have a default behavior (e.g. activating a link)\n  // That behavior shall not be altered/extended.\n  if (isInteractive(targetElement)) {\n    return;\n  }\n\n  openDocumentSource(openInNewTab);\n}\n\n/**\n * Opens the document source for the current active document in the browser.\n *\n * @param {boolean} openInNewTab\n */\nfunction openDocumentSource(openInNewTab) {\n  const activeDoc = getActiveDocument();\n  const docSource = activeDoc.dataset.docSource;\n  const itemIndex = getActiveItem().dataset.page;\n  const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n  const itemSource = docSource + fragment;\n\n  if (openInNewTab) {\n    window.open(itemSource);\n  } else {\n    window.location.href = itemSource;\n  }\n}\n\n/**\n * Returns true if element is interactive, false otherwise.\n *\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (!element.hasAttribute('href')) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.hasAttribute('contenteditable')) {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/plugins/item-linking.js\n// module id = 18\n// module chunks = 0","/**\n * Active Document Highlighting.\n *\n * Highlights the active document (and its items) on hover.\n */\n\nimport { listener } from '../util';\nimport { config } from '../config';\nimport { setActiveItem } from '../core/item-navigation';\nimport { setActiveDocument } from '../core/document-navigation';\n\nexport { ActiveDocumentHighlighting };\n\nconst ActiveDocumentHighlighting = {\n  enabled: true,\n  name: 'highlight-active-document',\n  description: 'Highlight the active document on hover',\n  enable() {\n    document.addEventListener('touchstart', setTouched, listener.passive);\n    document.addEventListener('mouseup', resetTouched, listener.passive);\n    document.addEventListener('mousemove', handleHighlightOnHover, listener.passive);\n  },\n  disable() {\n    document.removeEventListener('touchstart', setTouched, listener.passive);\n    document.removeEventListener('mouseup', resetTouched, listener.passive);\n    document.removeEventListener('mousemove', handleHighlightOnHover, listener.passive);\n  }\n};\n\nlet touched = false;\n\n/**\n * Sets the touched state to true.\n */\nfunction setTouched() {\n  touched = true;\n}\n\n/**\n * Sets the touched state to false.\n */\nfunction resetTouched() {\n  touched = false;\n}\n\n/**\n * @param {MouseEvent} event\n */\nfunction handleHighlightOnHover(event) {\n  if (touched) {\n    return;\n  }\n\n  if (event.target instanceof Element) {\n    const doc = event.target.closest(config.selector.doc);\n    if (doc) {\n      setActiveDocument(doc);\n\n      const item = event.target.closest(config.selector.item);\n      if (item) {\n        setActiveItem(item);\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/plugins/active-document-highlighting.js\n// module id = 19\n// module chunks = 0","/**\n * Document Loader.\n *\n * Loads documents dynamically when needed.\n */\n\nimport { config } from '../config';\nimport { startImageObserver } from './image-loader';\nimport { setActiveDocument } from './document-navigation';\nimport { setActiveItem, determineItemWidth } from './item-navigation';\nimport { LinkedMap, clamp, getOuterWidth, getFloatPropertyValue } from '../util';\n\nexport { DocumentLoader };\n\n/**\n * @typedef Store\n * @type {object}\n * @property {LinkedMap} documents\n * @property {IterableIterator} prevIterator\n * @property {IterableIterator} nextIterator\n * @property {IntersectionObserver} observer\n * @property {number} batchSize\n * @property {StorePropertyClasses} classes\n *\n * @typedef StorePropertyClasses\n * @type {object}\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Store often accessed properties once instead of recomputing them every time.\n *\n * @type {Store}\n */\nconst store = {\n  documents: null,\n\n  // The two iterators that are used to load documents when the user moves up\n  // or down.\n  prevIterator: null,\n  nextIterator: null,\n  observer: new IntersectionObserver(documentObservationHandler),\n\n  // Number of items surrounding a document that should be loaded once that\n  // document is loaded.\n  batchSize: 5,\n\n  classes: {\n    doc: config.selector.doc.slice(1),\n    scrollbox: config.selector.scrollbox.slice(1),\n    itemContainer: config.selector.itemContainer.slice(1),\n    item: config.selector.item.slice(1)\n  }\n};\n\nconst DocumentLoader = {\n  enable() {\n    store.documents = parseDocumentsData(documentsData);\n\n    // --- debug fragment --- remove in production\n    // window.docs = store.documents;\n    // window.loadDoc = loadDocument;\n    // ---\n\n    document.addEventListener('DOMContentLoaded', function() {\n      createSlidehubContainer();\n\n      loadTargetDocument();\n\n      // Load one batch in both directions\n      loadBatch(store.nextIterator, 'beforeend', store.batchSize);\n      loadBatch(store.prevIterator, 'afterbegin', store.batchSize);\n    });\n  }\n};\n\n/**\n * Parses the initial document data into a more managable data structure.\n * The resulting structure keeps track of a documents’ loaded state.\n *\n * @param {Array<[string, number]>} documentsData\n * @return {LinkedMap}\n */\nfunction parseDocumentsData(documentsData) {\n  const documents = new LinkedMap();\n\n  documentsData.forEach(([name, itemCount]) => {\n    const value = {\n      name,\n      itemCount,\n      loaded: false\n    };\n\n    documents.set(name, value);\n  });\n\n  return documents;\n}\n\n/**\n * Hooks the Slidehub container element into the DOM.\n *\n * Requires an element with a custom attribute `data-slidehub`. A new <div> element\n * will be created inside of it. No existing markup will be changed or removed.\n */\nfunction createSlidehubContainer() {\n  const slidehubContainer = document.createElement('div');\n  slidehubContainer.classList.add('slidehub-container');\n\n  // Expose highlight color override to the DOM as a CSS custom property.\n  // This allows CSS to use inside of a rule declaration.\n  if (config.highlightColor && config.highlightColor !== '') {\n    slidehubContainer.style.setProperty('--c-highlight', config.highlightColor);\n  }\n\n  document.querySelector('[data-slidehub]').appendChild(slidehubContainer);\n\n  insertDocumentFrames(slidehubContainer);\n}\n\n/**\n * Prepares the DOM with empty frames for all documents.\n *\n * @param {HTMLElement} slidehubContainer\n */\nfunction insertDocumentFrames(slidehubContainer) {\n  let documentFramesMarkup = '';\n\n  for (const documentName of store.documents.keys()) {\n    const documentSource = `${config.assets.documents}/${documentName}`;\n    documentFramesMarkup += `\n      <div\n        class=\"${store.classes.doc}\"\n        id=\"${documentName}\"\n        data-doc-source=\"${documentSource}\"\n      >\n      </div>\n    `;\n  }\n\n  slidehubContainer.insertAdjacentHTML('beforeend', documentFramesMarkup);\n}\n\n/**\n * Starts off the document loading process. Determines which document should be\n * loaded and sets up two iterators. They will be used to load new documents\n * when needed.\n */\nfunction loadTargetDocument() {\n  const documentName = determineTargetDocument();\n\n  // Obtain two iterators as pointers for which documents need to be\n  // loaded next.\n  store.prevIterator = store.documents.iteratorFor(documentName).reverse();\n  store.nextIterator = store.documents.iteratorFor(documentName);\n\n  // The target document will be loaded next by retrieving the iterator result\n  // from nextIterator. Since prevIterator points to the same document, it\n  // needs to be advanced manually, so it can’t be used to load that document\n  // again.\n  store.prevIterator.next();\n  loadInitialDocument(store.nextIterator.next());\n}\n\n/**\n * Finds the name for the initial document that should be loaded.\n *\n * @return {string}\n */\nfunction determineTargetDocument() {\n  const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n  if (store.documents.has(fragmentIdentifier)) {\n    return fragmentIdentifier;\n  }\n\n  // Return key to first entry\n  return store.documents.keys().next().value;\n}\n\n/**\n * Returns the fragment identifier of a URL if it is present.\n * Returns null if the fragment identifier is the empty string or if there is none.\n *\n * @param {string} url\n * @return {string|null}\n */\nfunction getFragmentIdentifier(url) {\n  const hashPosition = url.indexOf('#');\n  if (hashPosition > 0) {\n    return url.substring(hashPosition + 1);\n  }\n\n  return null;\n}\n\n/**\n * Manages loading the very first Slidehub document.\n *\n * @param {IteratorResult} iteratorResult\n * @returns {HTMLElement}\n */\nfunction loadInitialDocument(iteratorResult) {\n  const initialDocument = loadDocument(iteratorResult, 'beforeend');\n\n  setActiveDocument(initialDocument);\n  determineItemWidth();\n\n  return initialDocument;\n}\n\n/**\n * A wrapper for calling loadDocument multiple times.\n *\n * @param {IterableIterator} documentIterable\n * @param {'afterbegin'|'beforeend'} insertPosition\n * @param {number} batchSize\n */\nfunction loadBatch(documentIterable, insertPosition, batchSize) {\n  while (batchSize--) {\n    loadDocument(documentIterable.next(), insertPosition);\n  }\n}\n\n/**\n * Loads a new document by creating and injecting the markup into the DOM.\n * Once this is done, the document is marked as loaded.\n *\n * @param {IteratorResult} iteratorResult\n * @param {'afterbegin'|'beforeend'} insertPosition\n */\nfunction loadDocument(iteratorResult, insertPosition) {\n  if (iteratorResult.done) {\n    return;\n  }\n\n  const documentData = iteratorResult.value[1];\n  if (documentData.loaded) {\n    console.warn(documentData.name, 'was already loaded. Skipping.');\n    return;\n  }\n\n  documentData.insertPosition = insertPosition;\n  if (documentData.insertPosition === 'afterbegin') {\n    documentData.iterator = store.prevIterator;\n  } else {\n    documentData.iterator = store.nextIterator;\n  }\n\n  console.log(`Loading ${documentData.name}.`);\n\n  const doc = insertDocument(documentData);\n\n  setItemContainerWidth(doc.querySelector(config.selector.itemContainer));\n  setActiveItem(doc.querySelector(config.selector.item));\n  startImageObserver(doc);\n\n  store.observer.observe(doc);\n\n  documentData.loaded = true;\n\n  return doc;\n}\n\n/**\n * Inserts document markup into the DOM.\n *\n * @param {*} documentData\n */\nfunction insertDocument(documentData) {\n  const innerDocumentMarkup = createDocumentMarkup(documentData);\n  const doc = document.getElementById(documentData.name);\n  doc.insertAdjacentHTML('beforeend', innerDocumentMarkup);\n\n  return doc;\n}\n\n/**\n * Creates the complete markup for a document under the following assumptions:\n * - A file named documentData.name exists on the document assets path\n * - The document’s item images are on the image assets path\n *\n * @param {*} documentData\n * @return {string}\n */\nfunction createDocumentMarkup(documentData) {\n  let items = '';\n  for (var i = 0; i < documentData.itemCount; i++) {\n    const imageSource = `${config.assets.images}/${documentData.name}-${i}.png`;\n    items += `\n      <div class=\"${store.classes.item}\" data-page=\"${i + 1}\">\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\n      </div>\n    `;\n  }\n\n  const documentSource = `${config.assets.documents}/${documentData.name}`;\n\n  const metaSlide = `\n    <div class=\"${store.classes.item}\" data-page=\"0\">\n      <div class=\"doc-meta\">\n        <h2 class=\"doc-meta__title\">\n          <a href=\"${documentSource}\">${documentData.name}</a>\n        </h2>\n        by author, ${documentData.itemCount} pages, 2018\n      </div>\n    </div>\n  `;\n\n  return `\n    <div class=\"${store.classes.scrollbox}\">\n      <div class=\"${store.classes.itemContainer}\">\n        ${config.metaSlide ? metaSlide : ''}\n        ${items}\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Set the width of an element based on the total width of its children.\n * Assumes box-sizing being set to `border-box`. That is, horizontal margins\n * and border width do contribute to the result.\n *\n * @param {HTMLElement} element\n */\nfunction setItemContainerWidth(element) {\n  const elementWidth =\n    getFloatPropertyValue(element, 'margin-left') +\n    getFloatPropertyValue(element, 'border-left-width') +\n    getOuterChildrenWidth(element) +\n    getFloatPropertyValue(element, 'border-right-width') +\n    getFloatPropertyValue(element, 'margin-right');\n\n  element.style.setProperty('width', elementWidth + 'px');\n}\n\n/**\n * Computes the total outer width of an element by accumulating its children’s\n * horizontal dimension property values (i.e. margin-left, width, margin-right)\n *\n * @param {HTMLElement} element\n * @return {number}\n */\nfunction getOuterChildrenWidth(element) {\n  return Array.from(element.children).reduce((sum, child) => {\n    return sum + getOuterWidth(child);\n  }, 0);\n}\n\n/**\n * Handles lazy-loading documents.\n *\n * @param {Array<IntersectionObserverEntry>} entries\n * @param {IntersectionObserver} observer\n */\nfunction documentObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      const documentData = store.documents.get(entry.target.id);\n      loadDocument(documentData.iterator.next(), documentData.insertPosition);\n\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/document-loader.js\n// module id = 21\n// module chunks = 0","/**\n * Modal window.\n *\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\n * https://github.com/gdkraus/accessible-modal-dialog\n */\n\nimport { listener } from '../util';\n\nexport { Modal };\n\nlet lastFocusedElement;\n\nconst Modal = {\n  enable() {\n    document.addEventListener('DOMContentLoaded', function() {\n      const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\n      modalOpenButtons.forEach(button => {\n        button.removeAttribute('disabled');\n        button.addEventListener('click', event => {\n          const targetModalClass = event.currentTarget.dataset.targetModal;\n          const modal = document.querySelector(`.${targetModalClass}`);\n          openModal(modal);\n        });\n      });\n\n      const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\n      modalCloseButtons.forEach(button => {\n        button.addEventListener('click', event => {\n          const modal = event.currentTarget.closest('.modal');\n          closeModal(modal);\n        });\n      });\n    });\n  }\n};\n\n/**\n * Opens the modal.\n *\n * @param {Element} modal\n */\nfunction openModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  // Store last focused element\n  lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  moveFocusToModal(modal);\n\n  // Setup event listeners\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\n  modal.addEventListener('keydown', trapTabKey, listener.active);\n  modal.addEventListener('click', closeOnBackground, listener.passive);\n}\n\n/**\n * Move focus to the first focusable element inside the modal.\n *\n * @param {Element} modal\n */\nfunction moveFocusToModal(modal) {\n  const focusable = getFocusableElements(modal);\n  focusable[0].focus();\n}\n\n/**\n * Closes the modal.\n *\n * @param {Element} modal\n */\nfunction closeModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  // Clean up event listeners\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\n\n  // Restore previously focused element\n  lastFocusedElement.focus();\n}\n\n/**\n * Closes the modal when clicking on the background.\n *\n * @param {MouseEvent} event\n */\nfunction closeOnBackground(event) {\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\n  if (modal === event.target) {\n    closeModal(modal);\n  }\n}\n\n/**\n * Closes the modal when pressing the <kbd>Esc</kbd>.\n *\n * @param {KeyboardEvent} event\n */\nfunction closeOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\n  }\n}\n\n/**\n * Make it impossible to focus an element outside the modal\n *\n * @param {KeyboardEvent} event\n */\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabable[0]) {\n      tabable[tabable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabable[tabable.length - 1]) {\n      tabable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * Selects all focusable elements currently present in the DOM/\n *\n * @param {Element|document} ancestor\n * @returns {Array}\n */\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nconst focusableElementsSelector =\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/modal.js\n// module id = 22\n// module chunks = 0","/**\n * Plugin Loader.\n */\n\nexport { loadPlugin };\n\n/**\n * @typedef {object} SlidehubPlugin\n * @property {function(): void} enable\n * @property {function(): void} disable\n * @property {string} name\n * @property {string} description\n * @property {boolean} enabled\n */\n\n/**\n * Loads a plugin and potentially enables it.\n *\n * @param {SlidehubPlugin} plugin\n */\nfunction loadPlugin(plugin) {\n  if (plugin.enabled) {\n    plugin.enable();\n  }\n\n  registerPlugin(plugin);\n}\n\nconst pluginRegistry = new Map();\n\n/**\n * Registers a new plugin.\n *\n * @param {SlidehubPlugin} plugin\n */\nfunction registerPlugin(plugin) {\n  const button = createToggleButton(plugin);\n\n  if (button) {\n    pluginRegistry.set(plugin.name, plugin);\n\n    button.addEventListener('click', toggleButton);\n  }\n}\n\n/**\n * Creates a feature toggle button in the user interface.\n *\n * @param {SlidehubPlugin} plugin\n * @returns {Element|null}\n */\nfunction createToggleButton(plugin) {\n  const fieldset = document.querySelector('.features-fieldset');\n\n  if (!fieldset) {\n    return null;\n  }\n\n  const toggleButtonMarkup = `\n    <div class=\"form-group form-group--switch\">\n      <span class=\"form-label\" id=\"${plugin.name}-label\">${plugin.description}</span>\n      <button role=\"switch\" aria-checked=\"false\" aria-labelledby=\"${\n        plugin.name\n      }-label\" data-feature=\"${plugin.name}\">\n        <span class=\"state state--true\" aria-label=\"on\"></span>\n        <span class=\"state state--false\" aria-label=\"off\"></span>\n      </button>\n    </div>\n  `;\n\n  fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\n\n  const button = fieldset.querySelector(`[data-feature=\"${plugin.name}\"]`);\n  button.setAttribute('aria-checked', plugin.enabled.toString());\n\n  return button;\n}\n\n/**\n * Toggles a toggle button and triggers its associated action.\n *\n * @param {MouseEvent} event\n */\nfunction toggleButton(event) {\n  const button = event.currentTarget;\n\n  if (button instanceof HTMLElement) {\n    const plugin = pluginRegistry.get(button.dataset.feature);\n    const isPressed = button.getAttribute('aria-checked') === 'true';\n    button.setAttribute('aria-checked', String(!isPressed));\n\n    triggerButtonAction(button, 'aria-checked', plugin);\n  }\n}\n\n/**\n * Triggers the associated action of a toggle button.\n *\n * @param {HTMLElement} button\n * @param {'aria-checked'|'aria-pressed'} stateAttr\n * @param {SlidehubPlugin} plugin\n */\nfunction triggerButtonAction(button, stateAttr, plugin) {\n  switch (true) {\n    case button.hasAttribute('data-feature'):\n      if (button.getAttribute(stateAttr) === 'true') {\n        plugin.enable();\n        console.info('Enabled', plugin.name);\n      } else {\n        plugin.disable();\n        console.info('Disabled', plugin.name);\n      }\n      break;\n\n    default:\n      console.warn('No action is associated with the control', button);\n      break;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/load-plugin.js\n// module id = 23\n// module chunks = 0"],"sourceRoot":""}