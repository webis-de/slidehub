{"version":3,"sources":["webpack:///webpack/bootstrap e45c086f47f7174164d5","webpack:///./src/js/config.js","webpack:///./src/js/core/document-navigation.js","webpack:///./src/js/core/item-navigation.js","webpack:///./src/js/util/passive-event-listener.js","webpack:///./src/js/core/image-loader.js","webpack:///./src/js/core/mouse-interaction.js","webpack:///./src/js/app.js","webpack:///./src/js/lib/intersection-observer.js","webpack:///./src/js/plugins/item-linking.js","webpack:///./src/js/util/clamp.js","webpack:///./src/js/util/get-float-property-value.js","webpack:///./src/js/util/linked-map.js","webpack:///./src/js/util/number-of-visible-elements.js","webpack:///./src/js/util/get-outer-width.js","webpack:///./src/js/plugins/highlighter.js","webpack:///./src/js/core/document-loader.js","webpack:///./src/js/core/keyboard-interaction.js","webpack:///./src/js/core/load-plugin.js","webpack:///./src/js/core/modal.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","config","assets","documents","images","metaSlide","allowLastPageInFirstColumn","preserveAspectRatio","selectColor","highlightColor","selector","slidehub","doc","scrollbox","itemContainer","item","navigateDocument","direction","targetDoc","distance","currentIndex","Array","from","getDocuments","indexOf","getSelectedDocument","docs","targetIndex","__WEBPACK_IMPORTED_MODULE_0__util__","length","getTargetDoc","selectDocument","offset","element","docEl","document","documentElement","top","offsetTop","window","scrollY","bottom","clientHeight","offsetHeight","getVerticalOffsets","extraPart","scrollBy","Math","abs","parentElement","children","querySelector","__WEBPACK_IMPORTED_MODULE_1__config__","selectClassName","selectedDocument","classList","remove","add","activeElement","HTMLElement","blur","getHighlightedDocument","highlightClassName","highlightDocument","highlightedDocument","navigateItemInDocument","exposeCustomProperty","numberOfVisibleItems","exposeScrollboxWidth","getItemPos","itemPositionIsAligned","setItemPos","round","currentPos","getItems","getSelectedItem","getSelectedItemPos","targetPos","__WEBPACK_IMPORTED_MODULE_1__util__","getItemCount","items","selectItem","updateSelectedItem","allItemsVisible","currentScrollPos","newItemPos","calculateNewItemPos","__WEBPACK_IMPORTED_MODULE_0__config__","docRect","__WEBPACK_IMPORTED_MODULE_2__document_navigation__","getBoundingClientRect","itemRect","left","right","selectedItemInView","navigateItem","navigateItemToBoundary","getScrollbox","scrollLeft","itemWidth","itemPos","visibleItems","invalidItemPositions","maxPos","querySelectorAll","targetItem","selectedItem","contains","getHighlightedItem","highlightItem","highlightedItem","storeItemOuterWidth","itemOuterWidth","freeze","propertyName","value","style","setProperty","storedScrollboxWidth","scrollboxWidth","supportsPassive","opts","addEventListener","removeEventListener","e","listener","active","passive","imageLoadHandler","entries","observer","entry","isIntersecting","image","target","setAttribute","getAttribute","removeAttribute","closest","cssText","includes","aspectRatio","naturalWidth","naturalHeight","toString","setItemAspectRatio","handleItemImageLoaded","unobserve","startImageObserver","imageObserver","forEach","observe","observerOptions","rootMargin","ImageLoader","[object Object]","IntersectionObserver","initMouseInteraction","handleWheelInteraction","__WEBPACK_IMPORTED_MODULE_1__util_passive_event_listener__","handleClickSelection","event","currentTarget","scrollingDirection","deltaX","deltaY","scrolling","vertical","horizontal","__WEBPACK_IMPORTED_MODULE_2__core_item_navigation__","shiftKey","preventDefault","delta","sign","__WEBPACK_IMPORTED_MODULE_3__core_document_navigation__","onModifierDown","keyCode","onModifierUp","onModifierBlur","MouseInteraction","description","__WEBPACK_IMPORTED_MODULE_2__core__","enable","plugin","values","__WEBPACK_IMPORTED_MODULE_1__plugins__","IntersectionObserverEntry","this","time","rootBounds","boundingClientRect","intersectionRect","width","height","targetRect","targetArea","intersectionArea","intersectionRatio","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","fn","timeout","timer","setTimeout","throttle","bind","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","thresholds","_initThresholds","threshold","map","margin","unit","join","addEvent","node","opt_useCapture","attachEvent","removeEvent","detatchEvent","el","rect","err","containsDeep","parent","child","getParentNode","parentNode","host","registry","POLL_INTERVAL","some","_registerInstance","push","_monitorIntersections","filter","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","slice","opt_threshold","isArray","sort","t","a","isNaN","opt_rootMargin","margins","split","parts","exec","parseFloat","_monitoringIntersections","_monitoringInterval","setInterval","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","performance","now","_hasCrossedThreshold","getComputedStyle","display","atRoot","parentRect","parentComputedStyle","body","overflow","rect1","rect2","max","min","computeRectIntersection","html","clientWidth","_expandRectByRootMargin","newRect","oldRatio","newRatio","index","splice","handleKeyDown","openInNewTab","ctrlKey","__WEBPACK_IMPORTED_MODULE_2__core_document_navigation__","handleOpenIntent","__WEBPACK_IMPORTED_MODULE_1__core_item_navigation__","handleDoubleClick","button","tag","tagName","toLowerCase","potentiallyInteractive","hasAttribute","disabled","offsetParent","isInteractive","itemIndex","dataset","page","fragment","itemSource","docSource","open","location","href","openDocumentSource","ItemLinking","enabled","__WEBPACK_IMPORTED_MODULE_0__util_passive_event_listener__","clamp","getFloatPropertyValue","getPropertyValue","LinkedMap","iterable","_map","Map","_first","_last","key","set","Symbol","toStringTag","first","last","size","clear","has","LinkedMapNode","prev","next","delete","thisArg","reverse","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","done","undefined","iteratorResult","_key","_value","_next","_prev","numberOfVisibleElements","childElementWidth","parentElementWidth","__WEBPACK_IMPORTED_MODULE_1____","floor","getOuterWidth","__WEBPACK_IMPORTED_MODULE_0____","handleHighlightOnHover","Element","__WEBPACK_IMPORTED_MODULE_3__core_item_navigation__","Highlighter","loadTargetDocument","fragmentIdentifier","url","hashPosition","substring","getFragmentIdentifier","documentName","store","keys","prevIterator","iteratorFor","nextIterator","centerDocumentInView","initialDocument","loadDocument","documentHeight","__WEBPACK_IMPORTED_MODULE_4__util__","innerHeight","loadInitialDocument","loadBatch","documentIterable","insertPosition","batchSize","documentData","loaded","console","warn","log","innerDocumentMarkup","itemCount","imageSource","classes","documentSource","dummyPage","createDocumentMarkup","getElementById","insertAdjacentHTML","insertDocument","__WEBPACK_IMPORTED_MODULE_3__item_navigation__","__WEBPACK_IMPORTED_MODULE_1__image_loader__","__WEBPACK_IMPORTED_MODULE_5__mouse_interaction__","id","DocumentLoader","documentsData","parseDocumentsData","slidehubContainer","createElement","appendChild","createSlidehubContainer","documentFramesMarkup","insertDocumentFrames","storeItemOuterWidthInDOM","handleKeyboardInput","controlKeyNames","keyName","controlKey","trigger","KeyboardInteraction","33","34","35","36","37","38","39","40","homeKey","endKey","pageUp","pageDown","arrowLeft","arrowRight","arrowUp","arrowDown","loadPlugin","fieldset","toggleButtonMarkup","createToggleButton","pluginRegistry","toggleButton","registerPlugin","feature","isPressed","String","stateAttr","info","disable","triggerButtonAction","__webpack_exports__","openModal","modal","lastFocusedElement","getFocusableElements","focus","moveFocusToModal","closeOnEscape","trapTabKey","closeOnBackground","closeModal","tabable","tabIndex","ancestor","focusableElementsSelector","Modal","targetModalClass","targetModal"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e45c086f47f7174164d5","export { config };\n\n/**\n * @typedef {object} Config\n * @property {ConfigPropertyAssets} assets\n * @property {boolean} metaSlide\n * @property {boolean} allowLastPageInFirstColumn\n * @property {boolean} preserveAspectRatio\n * @property {string|null} selectColor\n * @property {string|null} highlightColor\n * @property {ConfigPropertySelector} selector\n *\n * @typedef {object} ConfigPropertyAssets\n * @property {string} documents\n * @property {string} images\n *\n * @typedef {object} ConfigPropertySelector\n * @property {string} slidehub\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Global configuration object.\n *\n * @type {Config}\n */\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assets: {\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\n  },\n\n  // Create a meta slide for each document?\n  metaSlide: true,\n\n  // Allows navigating pages so that the last page can be placed in the first\n  // column of a document container.\n  allowLastPageInFirstColumn: true,\n\n  // Preserve aspect ratio of document items?\n  preserveAspectRatio: false,\n\n  // Overrides the default select color\n  // Takes string values that represent a valid CSS color value; for example:\n  // 'transparent', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\n  // Setting `null` uses the default color.\n  selectColor: null,\n\n  // Overrides the default highlight color.\n  highlightColor: null,\n\n  // Selectors for UI components\n  selector: {\n    slidehub: '.slidehub-container',\n    doc: '.doc',\n    scrollbox: '.doc-scrollbox',\n    itemContainer: '.page-container',\n    item: '.page'\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/config.js\n// module id = 0\n// module chunks = 0","import { clamp } from '../util';\nimport { config } from '../config';\n\nexport {\n  navigateDocument,\n  getSelectedDocument,\n  selectDocument,\n  getHighlightedDocument,\n  highlightDocument\n};\n\n/**\n * Navigates through documents in a certain direction.\n *\n * @param {number} direction\n */\nfunction navigateDocument(direction) {\n  const targetDoc = getTargetDoc(direction);\n\n  if (targetDoc === null) {\n    return;\n  }\n\n  selectDocument(targetDoc);\n\n  const offset = getVerticalOffsets(targetDoc);\n  const extraPart = targetDoc.clientHeight / 2;\n  if (offset.top < 0) {\n    window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\n  } else if (offset.bottom < 0) {\n    window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\n  }\n}\n\n/**\n * Finds the target document given a navigation distance.\n *\n * @param {number} distance\n * @returns {HTMLElement}\n */\nfunction getTargetDoc(distance) {\n  const currentIndex = getDocumentPos();\n  const docs = getDocuments();\n  const targetIndex = clamp(currentIndex + distance, 0, docs.length - 1);\n\n  return docs.item(targetIndex);\n}\n\n/**\n * Returns an object containing vertical offsets for an element with the\n * viewport.\n *\n * @param {HTMLElement} element\n * @returns {object}\n */\nfunction getVerticalOffsets(element) {\n  const docEl = document.documentElement;\n  return {\n    top: element.offsetTop - window.scrollY,\n    bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\n  };\n}\n\n/**\n * Finds the position of the currently selected document.\n *\n * @returns {number}\n */\nfunction getDocumentPos() {\n  return Array.from(getDocuments()).indexOf(getSelectedDocument());\n}\n\n/**\n * Returns all SlideHub documents as a HTMLCollection.\n *\n * @returns {HTMLCollection}\n */\nfunction getDocuments() {\n  return getSelectedDocument().parentElement.children;\n}\n\nconst selectClassName = 'selected';\n\n/**\n * Returns the currently selected document.\n *\n * @returns {Element}\n */\nfunction getSelectedDocument() {\n  return document.querySelector(`${config.selector.doc}.${selectClassName}`);\n}\n\n/**\n * Sets a new selected document.\n *\n * @param {Element} doc\n */\nfunction selectDocument(doc) {\n  const selectedDocument = getSelectedDocument();\n  // Remove selected class from currently selected document\n  if (selectedDocument) {\n    selectedDocument.classList.remove(selectClassName);\n  }\n\n  // Set new selected document\n  doc.classList.add(selectClassName);\n\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n\nconst highlightClassName = 'highlighted';\n\n/**\n * Returns the currently highlighted document.\n *\n * @returns {Element}\n */\nfunction getHighlightedDocument() {\n  return document.querySelector(`${config.selector.doc}.${highlightClassName}`);\n}\n\n/**\n * Sets a new highlighted document.\n *\n * @param {Element} doc\n */\nfunction highlightDocument(doc) {\n  const highlightedDocument = getHighlightedDocument();\n  // Remove highlighted class from currently highlighted document\n  if (highlightedDocument) {\n    highlightedDocument.classList.remove(highlightClassName);\n  }\n\n  // Set new highlighted document\n  doc.classList.add(highlightClassName);\n\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/document-navigation.js\n// module id = 1\n// module chunks = 0","import { config } from '../config';\nimport { clamp, numberOfVisibleElements, getOuterWidth } from '../util';\nimport { getSelectedDocument } from './document-navigation';\n\nexport {\n  navigateItem,\n  navigateItemInDocument,\n  navigateItemToBoundary,\n  getSelectedItem,\n  selectItem,\n  getHighlightedItem,\n  highlightItem,\n  storeItemOuterWidth,\n  exposeScrollboxWidth\n};\n\n/**\n * Main handler for item navigation.\n *\n * @param {Element} doc\n * @param {number} distance\n * @public\n */\nfunction navigateItemInDocument(doc, distance) {\n  exposeCustomProperty('--visible-pages', numberOfVisibleItems(doc));\n  exposeScrollboxWidth();\n\n  if (!itemPositionIsAligned(doc)) {\n    setItemPos(doc, Math.round(getItemPos(doc)));\n  }\n\n  updateSelectedItem(doc, distance);\n\n  // If all items are already visible, we’re done here.\n  if (allItemsVisible(doc)) {\n    return;\n  }\n\n  const currentScrollPos = getItemPos(doc);\n  const newItemPos = calculateNewItemPos(doc, getItemPos(doc) + distance);\n\n  // Nothing to gain, current position is already the destination.\n  if (currentScrollPos === newItemPos) {\n    return;\n  }\n\n  // If the selected item is already inside the view, we’re done here.\n  // When an item can be moved to the first column, this behavior is disabled\n  // as I prefer keeping the selected item in the first column in this case.\n  if (!config.allowLastPageInFirstColumn && selectedItemInView(doc)) {\n    return;\n  }\n\n  setItemPos(doc, newItemPos);\n}\n\n/**\n * @param {number} distance\n * @public\n */\nfunction navigateItem(distance) {\n  navigateItemInDocument(getSelectedDocument(), distance);\n}\n\n/**\n * @param {number} direction\n * @public\n */\nfunction navigateItemToBoundary(direction) {\n  const doc = getSelectedDocument();\n  navigateItemInDocument(doc, direction * getItemCount(doc));\n}\n\n/**\n * Returns true if items are aligned within a document, false otherwise.\n *\n * @param {Element} doc\n * @returns {boolean}\n */\nfunction itemPositionIsAligned(doc) {\n  if (getItemPos(doc) % 1 === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Determines the new item that should be selected.\n *\n * @param {Element} doc\n * @param {number} distance\n */\nfunction updateSelectedItem(doc, distance) {\n  const currentPos = getSelectedItemPos(doc);\n  const targetPos = clamp(currentPos + distance, 0, getItemCount(doc) - 1);\n\n  const items = getItems(doc);\n  selectItem(doc, items.item(targetPos));\n}\n\n/**\n * Returns true if all items are visible within a document, false otherwise.\n *\n * @param {Element} doc\n * @returns {boolean}\n */\nfunction allItemsVisible(doc) {\n  return getItemCount(doc) <= numberOfVisibleItems(doc);\n}\n\n/**\n * Tests whether a documents’ selected item is completely in view (i.e. the item\n * is completely visible and not occluded).\n *\n * @param {Element} doc\n * @returns {boolean}\n */\nfunction selectedItemInView(doc) {\n  const docRect = getSelectedDocument().getBoundingClientRect();\n  const itemRect = getSelectedItem(doc).getBoundingClientRect();\n\n  return (\n    docRect.left <= itemRect.left &&\n    itemRect.right <= docRect.right &&\n    docRect.top <= itemRect.top &&\n    itemRect.bottom <= docRect.bottom\n  );\n}\n\n/**\n * Returns the current item position.\n *\n * @param {Element} doc\n * @returns {number}\n */\nfunction getItemPos(doc) {\n  return getScrollbox(doc).scrollLeft / itemWidth;\n}\n\n/**\n * Sets a new item position.\n *\n * @param {Element} doc\n * @param {number} itemPos\n */\nfunction setItemPos(doc, itemPos) {\n  const newItemPos = calculateNewItemPos(doc, itemPos);\n  getScrollbox(doc).scrollLeft = newItemPos * itemWidth;\n}\n\n/**\n *\n * @param {Element} doc\n * @param {number} itemPos\n * @returns {number}\n */\nfunction calculateNewItemPos(doc, itemPos) {\n  const visibleItems = numberOfVisibleItems(doc);\n  const invalidItemPositions = config.allowLastPageInFirstColumn ? 1 : visibleItems;\n  const maxPos = getItemCount(doc) - invalidItemPositions;\n\n  return clamp(itemPos, 0, maxPos);\n}\n\n/**\n * Returns the scrollbox for of a certain document.\n *\n * @param {Element} doc\n * @returns {Element}\n */\nfunction getScrollbox(doc) {\n  return doc.querySelector(config.selector.scrollbox);\n}\n\n/**\n * Returns all items as an HTMLCollection.\n *\n * @param {Element} doc\n * @returns {NodeListOf<Element>}\n */\nfunction getItems(doc) {\n  return doc.querySelectorAll('[data-page]');\n}\n\n/**\n * Returns the number of items.\n *\n * @param {Element} doc\n * @returns {number}\n */\nfunction getItemCount(doc) {\n  return getItems(doc).length;\n}\n\n/**\n * Returns the position of the currently selected item.\n *\n * @param {Element} doc\n * @returns {number}\n */\nfunction getSelectedItemPos(doc) {\n  return Array.from(getItems(doc)).indexOf(getSelectedItem(doc));\n}\n\nconst selectClassName = 'selected';\n\n/**\n * Returns the currently selected item.\n *\n * @param {Element} doc\n * @returns {Element}\n */\nfunction getSelectedItem(doc) {\n  return doc.querySelector(`${config.selector.item}.${selectClassName}`);\n}\n\n/**\n * Sets a new selected item.\n *\n * @param {Element} doc\n * @param {Element} targetItem\n */\nfunction selectItem(doc, targetItem) {\n  const itemContainer = targetItem.parentElement;\n  const selectedItem = getSelectedItem(doc);\n  if (selectedItem && itemContainer.contains(selectedItem)) {\n    selectedItem.classList.remove(selectClassName);\n  }\n\n  targetItem.classList.add(selectClassName);\n\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n\nconst highlightClassName = 'highlighted';\n\n/**\n * Returns the currently highlighted item.\n *\n * @param {Element} doc\n * @returns {Element}\n */\nfunction getHighlightedItem(doc) {\n  return doc.querySelector(`${config.selector.item}.${highlightClassName}`);\n}\n\n/**\n * Sets a new highlighted item.\n *\n * @param {Element} doc\n * @param {Element} targetItem\n */\nfunction highlightItem(doc, targetItem) {\n  const itemContainer = targetItem.parentElement;\n  const highlightedItem = getHighlightedItem(doc);\n  if (highlightedItem && itemContainer.contains(highlightedItem)) {\n    highlightedItem.classList.remove(highlightClassName);\n  }\n\n  targetItem.classList.add(highlightClassName);\n\n  if (document.activeElement instanceof HTMLElement) {\n    document.activeElement.blur();\n  }\n}\n\nlet itemWidth;\n\n/**\n * Computes the item width. Must only be called once.\n */\nfunction storeItemOuterWidth(itemOuterWidth) {\n  itemWidth = itemOuterWidth;\n  Object.freeze(itemWidth);\n}\n\n/**\n * Wrapper for {@link numberOfVisibleElements}.\n *\n * @param {Element} doc\n * @returns {number}\n */\nfunction numberOfVisibleItems(doc) {\n  return numberOfVisibleElements(doc, itemWidth);\n}\n\n/**\n * Exposes data to the DOM node which represents the Slidehub container. This\n * allows accessing the data from CSS.\n *\n * @param {string} propertyName\n * @param {string} value\n */\nfunction exposeCustomProperty(propertyName, value) {\n  const slidehubContainer = document.querySelector(config.selector.slidehub);\n  slidehubContainer.style.setProperty(propertyName, value);\n}\n\n/**\n * Exposes the current width of the first scrollbox to the DOM.\n *\n * This function is a closure. It is instanciated once, creating a state\n * variable and keeping it alive. Also, an inner function is returned by the\n * function which uses the state variable. The purpose for this is keeping the\n * state varialbe private to this function. Otherwise, when storing it outside\n * the function, it would be exposed to the whole module.\n */\nconst exposeScrollboxWidth = (function() {\n  // State variable. Will be kept alive so that further calls to this function\n  // can re-use its value.\n  let storedScrollboxWidth;\n\n  return function() {\n    const scrollbox = document.querySelector(config.selector.scrollbox);\n    const scrollboxWidth = getOuterWidth(scrollbox);\n\n    if (storedScrollboxWidth !== scrollboxWidth) {\n      storedScrollboxWidth = scrollboxWidth;\n\n      exposeCustomProperty('--scrollbox-width', scrollboxWidth + 'px');\n    }\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/item-navigation.js\n// module id = 2\n// module chunks = 0","export { listener };\n\n/**\n * Feature detection for passive event listeners as per:\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\n/**\n * @typedef {object} AddEventListenerOptionsObject\n * @property {boolean|AddEventListenerOptions} active\n * @property {boolean|AddEventListenerOptions} passive\n */\n\n/**\n * Stores the third argument for `addEventListener` for both cases\n * @type {AddEventListenerOptionsObject}\n */\nconst listener = {\n  active: supportsPassive ? { passive: false } : false,\n  passive: supportsPassive ? { passive: true } : false\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/passive-event-listener.js\n// module id = 4\n// module chunks = 0","/**\n * Loads document images when needed (i.e. lazy-loading).\n */\n\nimport { config } from '../config';\n\nexport { ImageLoader, startImageObserver };\n\nlet imageObserver;\n\nconst observerOptions = {\n  rootMargin: `500px 1000px`\n};\n\nconst ImageLoader = {\n  enable() {\n    imageObserver = new IntersectionObserver(imageLoadHandler, observerOptions);\n  }\n};\n\n/**\n * Handles lazy-loading document images.\n *\n * @param {*} entries\n * @param {IntersectionObserver} observer\n */\nfunction imageLoadHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      const image = entry.target;\n      image.setAttribute('src', image.getAttribute('data-src'));\n      image.removeAttribute('data-src');\n\n      image.addEventListener('load', () => handleItemImageLoaded(image));\n\n      // Unobserve the current target because no further action is required\n      observer.unobserve(image);\n    }\n  }\n}\n\n/**\n * Plain wrapper for triggering certain actions once an image has loaded.\n *\n * @param {HTMLImageElement} image\n */\nfunction handleItemImageLoaded(image) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(image);\n  }\n}\n\n/**\n * Calculates the aspect ratio of an image and stores it in the DOM as a\n * custom CSS property.\n *\n * @param {HTMLImageElement} image\n */\nfunction setItemAspectRatio(image) {\n  const doc = image.closest(config.selector.doc);\n\n  if (doc && doc instanceof HTMLElement && !doc.style.cssText.includes('--page-aspect-ratio')) {\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\n    doc.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\n  }\n}\n\n/**\n * Starts the image observer on all lazy-loading images.\n *\n * @param {HTMLElement} doc\n */\nfunction startImageObserver(doc) {\n  if (imageObserver) {\n    const images = Array.from(doc.querySelectorAll('img[data-src]'));\n    images.forEach(image => imageObserver.observe(image));\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/image-loader.js\n// module id = 5\n// module chunks = 0","/**\n * Wheel Navigation.\n */\n\nimport { config } from '../config';\nimport { listener } from '../util/passive-event-listener';\nimport { navigateItemInDocument, exposeScrollboxWidth, selectItem } from '../core/item-navigation';\nimport { getHighlightedDocument, selectDocument } from '../core/document-navigation';\n\nexport { MouseInteraction, initMouseInteraction };\n\nconst MouseInteraction = {\n  name: 'mouse-interaction',\n  description: 'Navigate pages with Shift + Mouse Wheel',\n  enable() {\n    enableModifier();\n  }\n};\n\n/**\n *\n * @param {Element} doc\n */\nfunction initMouseInteraction(doc) {\n  doc.addEventListener('wheel', handleWheelInteraction, listener.active);\n  doc.addEventListener('click', handleClickSelection, listener.passive);\n}\n\nconst scrolling = {\n  vertical: {\n    delta: 'deltaY'\n  },\n  horizontal: {\n    delta: 'deltaX'\n  }\n};\n\n/**\n * Handles wheel navigation.\n *\n * @param {WheelEvent} event\n */\nfunction handleWheelInteraction(event) {\n  // Don’t handle scrolling on elements that are not inside a document\n  // const doc = event.target.closest(config.selector.doc);\n  const doc = event.currentTarget;\n  if (doc === null) {\n    return;\n  }\n\n  const ratio = Math.abs(event.deltaX / event.deltaY);\n  const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\n\n  if (scrollingDirection === scrolling.horizontal) {\n    exposeScrollboxWidth();\n  }\n\n  // When scrolling vertically, only trigger navigation when modifier is pressed\n  if (scrollingDirection === scrolling.vertical && event.shiftKey) {\n    // Prevent vertical scrolling\n    event.preventDefault();\n\n    const delta = event[scrollingDirection.delta];\n    navigateItemInDocument(doc, Math.sign(delta));\n  }\n}\n\nfunction handleClickSelection(event) {\n  const doc = event.currentTarget;\n  if (doc) {\n    selectDocument(doc);\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      selectItem(doc, item);\n    }\n  }\n}\n\n/**\n * Modifier keys.\n */\n\n/**\n * Wrapper for enabling all event listeners related to modifier handling.\n */\nfunction enableModifier() {\n  document.addEventListener('keydown', onModifierDown, listener.passive);\n  document.addEventListener('keyup', onModifierUp, listener.passive);\n  window.addEventListener('blur', onModifierBlur, listener.passive);\n}\n\n/**\n * Displays a special cursor when the modifier is pressed.\n *\n * @param {KeyboardEvent} event\n */\nfunction onModifierDown(event) {\n  const doc = getHighlightedDocument();\n  if (doc && event.keyCode === 16) {\n    doc.style.setProperty('cursor', 'ew-resize');\n  }\n}\n\n/**\n * Removes the special cursor when the modifier is no longer pressed.\n *\n * @param {KeyboardEvent} event\n */\nfunction onModifierUp(event) {\n  const doc = getHighlightedDocument();\n  if (doc && event.keyCode === 16) {\n    doc.style.setProperty('cursor', 'auto');\n  }\n}\n\n/**\n * Removes the special cursor when the user somehow leaves the page.\n */\nfunction onModifierBlur() {\n  const doc = getHighlightedDocument();\n  if (doc) {\n    doc.style.setProperty('cursor', 'auto');\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/mouse-interaction.js\n// module id = 6\n// module chunks = 0","/**\n * Application entry point.\n *\n * Loads core modules and plugins.\n */\n\nimport './lib/intersection-observer';\nimport * as plugins from './plugins';\nimport {\n  loadPlugin,\n  DocumentLoader,\n  ImageLoader,\n  KeyboardInteraction,\n  Modal,\n  MouseInteraction\n} from './core';\n\n/**\n * An Immediately Invoked Function Expression, called like that because it’s\n * immediately executed when a JavaScript file like this is sourced.\n *\n * Starts the engines for SlideHub.\n */\n(function() {\n  loadCoreModules();\n  loadPlugins();\n})();\n\n/**\n * Loads core modules.\n */\nfunction loadCoreModules() {\n  ImageLoader.enable();\n  DocumentLoader.enable();\n  Modal.enable();\n  KeyboardInteraction.enable();\n  MouseInteraction.enable();\n}\n\n/**\n * Loads all plugins from the ./plugins directory.\n */\nfunction loadPlugins() {\n  document.addEventListener('DOMContentLoaded', function() {\n    for (const plugin of Object.values(plugins)) {\n      loadPlugin(plugin);\n    }\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/app.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n  'use strict';\n\n  // Exits early if all IntersectionObserver and IntersectionObserverEntry\n  // features are natively supported.\n  if (\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n  ) {\n    // Minimal polyfill for Edge 15's lack of `isIntersecting`\n    // See: https://github.com/w3c/IntersectionObserver/issues/211\n    if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n      Object.defineProperty(window.IntersectionObserverEntry.prototype, 'isIntersecting', {\n        get: function() {\n          return this.intersectionRatio > 0;\n        }\n      });\n    }\n    return;\n  }\n\n  /**\n   * An IntersectionObserver registry. This registry exists to hold a strong\n   * reference to IntersectionObserver instances currently observering a target\n   * element. Without this registry, instances without another reference may be\n   * garbage collected.\n   */\n  var registry = [];\n\n  /**\n   * Creates the global IntersectionObserverEntry constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n   * @param {Object} entry A dictionary of instance properties.\n   * @constructor\n   */\n  function IntersectionObserverEntry(entry) {\n    this.time = entry.time;\n    this.target = entry.target;\n    this.rootBounds = entry.rootBounds;\n    this.boundingClientRect = entry.boundingClientRect;\n    this.intersectionRect = entry.intersectionRect || getEmptyRect();\n    this.isIntersecting = !!entry.intersectionRect;\n\n    // Calculates the intersection ratio.\n    var targetRect = this.boundingClientRect;\n    var targetArea = targetRect.width * targetRect.height;\n    var intersectionRect = this.intersectionRect;\n    var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n    // Sets intersection ratio.\n    if (targetArea) {\n      this.intersectionRatio = intersectionArea / targetArea;\n    } else {\n      // If area is zero and is intersecting, sets to 1, otherwise to 0\n      this.intersectionRatio = this.isIntersecting ? 1 : 0;\n    }\n  }\n\n  /**\n   * Creates the global IntersectionObserver constructor.\n   * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n   * @param {Function} callback The function to be invoked after intersection\n   *     changes have queued. The function is not invoked if the queue has\n   *     been emptied by calling the `takeRecords` method.\n   * @param {Object=} opt_options Optional configuration options.\n   * @constructor\n   */\n  function IntersectionObserver(callback, opt_options) {\n    var options = opt_options || {};\n\n    if (typeof callback != 'function') {\n      throw new Error('callback must be a function');\n    }\n\n    if (options.root && options.root.nodeType != 1) {\n      throw new Error('root must be an Element');\n    }\n\n    // Binds and throttles `this._checkForIntersections`.\n    this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this),\n      this.THROTTLE_TIMEOUT\n    );\n\n    // Private properties.\n    this._callback = callback;\n    this._observationTargets = [];\n    this._queuedEntries = [];\n    this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n    // Public properties.\n    this.thresholds = this._initThresholds(options.threshold);\n    this.root = options.root || null;\n    this.rootMargin = this._rootMarginValues\n      .map(function(margin) {\n        return margin.value + margin.unit;\n      })\n      .join(' ');\n  }\n\n  /**\n   * The minimum interval within which the document will be checked for\n   * intersection changes.\n   */\n  IntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n  /**\n   * The frequency in which the polyfill polls for intersection changes.\n   * this can be updated on a per instance basis and must be set prior to\n   * calling `observe` on the first target.\n   */\n  IntersectionObserver.prototype.POLL_INTERVAL = null;\n\n  /**\n   * Starts observing a target element for intersection changes based on\n   * the thresholds values.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.observe = function(target) {\n    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n      return item.element == target;\n    });\n\n    if (isTargetAlreadyObserved) {\n      return;\n    }\n\n    if (!(target && target.nodeType == 1)) {\n      throw new Error('target must be an Element');\n    }\n\n    this._registerInstance();\n    this._observationTargets.push({ element: target, entry: null });\n    this._monitorIntersections();\n    this._checkForIntersections();\n  };\n\n  /**\n   * Stops observing a target element for intersection changes.\n   * @param {Element} target The DOM element to observe.\n   */\n  IntersectionObserver.prototype.unobserve = function(target) {\n    this._observationTargets = this._observationTargets.filter(function(item) {\n      return item.element != target;\n    });\n    if (!this._observationTargets.length) {\n      this._unmonitorIntersections();\n      this._unregisterInstance();\n    }\n  };\n\n  /**\n   * Stops observing all target elements for intersection changes.\n   */\n  IntersectionObserver.prototype.disconnect = function() {\n    this._observationTargets = [];\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  };\n\n  /**\n   * Returns any queue entries that have not yet been reported to the\n   * callback and clears the queue. This can be used in conjunction with the\n   * callback to obtain the absolute most up-to-date intersection information.\n   * @return {Array} The currently queued entries.\n   */\n  IntersectionObserver.prototype.takeRecords = function() {\n    var records = this._queuedEntries.slice();\n    this._queuedEntries = [];\n    return records;\n  };\n\n  /**\n   * Accepts the threshold value from the user configuration object and\n   * returns a sorted array of unique threshold values. If a value is not\n   * between 0 and 1 and error is thrown.\n   * @private\n   * @param {Array|number=} opt_threshold An optional threshold value or\n   *     a list of threshold values, defaulting to [0].\n   * @return {Array} A sorted list of unique and valid threshold values.\n   */\n  IntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n    var threshold = opt_threshold || [0];\n    if (!Array.isArray(threshold)) threshold = [threshold];\n\n    return threshold.sort().filter(function(t, i, a) {\n      if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n        throw new Error('threshold must be a number between 0 and 1 inclusively');\n      }\n      return t !== a[i - 1];\n    });\n  };\n\n  /**\n   * Accepts the rootMargin value from the user configuration object\n   * and returns an array of the four margin values as an object containing\n   * the value and unit properties. If any of the values are not properly\n   * formatted or use a unit other than px or %, and error is thrown.\n   * @private\n   * @param {string=} opt_rootMargin An optional rootMargin value,\n   *     defaulting to '0px'.\n   * @return {Array<Object>} An array of margin objects with the keys\n   *     value and unit.\n   */\n  IntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n    var marginString = opt_rootMargin || '0px';\n    var margins = marginString.split(/\\s+/).map(function(margin) {\n      var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n      if (!parts) {\n        throw new Error('rootMargin must be specified in pixels or percent');\n      }\n      return { value: parseFloat(parts[1]), unit: parts[2] };\n    });\n\n    // Handles shorthand.\n    margins[1] = margins[1] || margins[0];\n    margins[2] = margins[2] || margins[0];\n    margins[3] = margins[3] || margins[1];\n\n    return margins;\n  };\n\n  /**\n   * Starts polling for intersection changes if the polling is not already\n   * happening, and if the page's visibilty state is visible.\n   * @private\n   */\n  IntersectionObserver.prototype._monitorIntersections = function() {\n    if (!this._monitoringIntersections) {\n      this._monitoringIntersections = true;\n\n      // If a poll interval is set, use polling instead of listening to\n      // resize and scroll events or DOM mutations.\n      if (this.POLL_INTERVAL) {\n        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);\n      } else {\n        addEvent(window, 'resize', this._checkForIntersections, true);\n        addEvent(document, 'scroll', this._checkForIntersections, true);\n\n        if ('MutationObserver' in window) {\n          this._domObserver = new MutationObserver(this._checkForIntersections);\n          this._domObserver.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Stops polling for intersection changes.\n   * @private\n   */\n  IntersectionObserver.prototype._unmonitorIntersections = function() {\n    if (this._monitoringIntersections) {\n      this._monitoringIntersections = false;\n\n      clearInterval(this._monitoringInterval);\n      this._monitoringInterval = null;\n\n      removeEvent(window, 'resize', this._checkForIntersections, true);\n      removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this._domObserver) {\n        this._domObserver.disconnect();\n        this._domObserver = null;\n      }\n    }\n  };\n\n  /**\n   * Scans each observation target for intersection changes and adds them\n   * to the internal entries queue. If new entries are found, it\n   * schedules the callback to be invoked.\n   * @private\n   */\n  IntersectionObserver.prototype._checkForIntersections = function() {\n    var rootIsInDom = this._rootIsInDom();\n    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n    this._observationTargets.forEach(function(item) {\n      var target = item.element;\n      var targetRect = getBoundingClientRect(target);\n      var rootContainsTarget = this._rootContainsTarget(target);\n      var oldEntry = item.entry;\n      var intersectionRect =\n        rootIsInDom &&\n        rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n      var newEntry = (item.entry = new IntersectionObserverEntry({\n        time: now(),\n        target: target,\n        boundingClientRect: targetRect,\n        rootBounds: rootRect,\n        intersectionRect: intersectionRect\n      }));\n\n      if (!oldEntry) {\n        this._queuedEntries.push(newEntry);\n      } else if (rootIsInDom && rootContainsTarget) {\n        // If the new entry intersection ratio has crossed any of the\n        // thresholds, add a new entry.\n        if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n          this._queuedEntries.push(newEntry);\n        }\n      } else {\n        // If the root is not in the DOM or target is not contained within\n        // root but the previous entry for this target had an intersection,\n        // add a new record indicating removal.\n        if (oldEntry && oldEntry.isIntersecting) {\n          this._queuedEntries.push(newEntry);\n        }\n      }\n    }, this);\n\n    if (this._queuedEntries.length) {\n      this._callback(this.takeRecords(), this);\n    }\n  };\n\n  /**\n   * Accepts a target and root rect computes the intersection between then\n   * following the algorithm in the spec.\n   * TODO(philipwalton): at this time clip-path is not considered.\n   * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n   * @param {Element} target The target DOM element\n   * @param {Object} rootRect The bounding rect of the root after being\n   *     expanded by the rootMargin value.\n   * @return {?Object} The final intersection rect object or undefined if no\n   *     intersection is found.\n   * @private\n   */\n  IntersectionObserver.prototype._computeTargetAndRootIntersection = function(target, rootRect) {\n    // If the element isn't displayed, an intersection can't happen.\n    if (window.getComputedStyle(target).display == 'none') return;\n\n    var targetRect = getBoundingClientRect(target);\n    var intersectionRect = targetRect;\n    var parent = getParentNode(target);\n    var atRoot = false;\n\n    while (!atRoot) {\n      var parentRect = null;\n      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};\n\n      // If the parent isn't displayed, an intersection can't happen.\n      if (parentComputedStyle.display == 'none') return;\n\n      if (parent == this.root || parent == document) {\n        atRoot = true;\n        parentRect = rootRect;\n      } else {\n        // If the element has a non-visible overflow, and it's not the <body>\n        // or <html> element, update the intersection rect.\n        // Note: <body> and <html> cannot be clipped to a rect that's not also\n        // the document rect, so no need to compute a new intersection.\n        if (\n          parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible'\n        ) {\n          parentRect = getBoundingClientRect(parent);\n        }\n      }\n\n      // If either of the above conditionals set a new parentRect,\n      // calculate new intersection data.\n      if (parentRect) {\n        intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n        if (!intersectionRect) break;\n      }\n      parent = getParentNode(parent);\n    }\n    return intersectionRect;\n  };\n\n  /**\n   * Returns the root rect after being expanded by the rootMargin value.\n   * @return {Object} The expanded root rect.\n   * @private\n   */\n  IntersectionObserver.prototype._getRootRect = function() {\n    var rootRect;\n    if (this.root) {\n      rootRect = getBoundingClientRect(this.root);\n    } else {\n      // Use <html>/<body> instead of window since scroll bars affect size.\n      var html = document.documentElement;\n      var body = document.body;\n      rootRect = {\n        top: 0,\n        left: 0,\n        right: html.clientWidth || body.clientWidth,\n        width: html.clientWidth || body.clientWidth,\n        bottom: html.clientHeight || body.clientHeight,\n        height: html.clientHeight || body.clientHeight\n      };\n    }\n    return this._expandRectByRootMargin(rootRect);\n  };\n\n  /**\n   * Accepts a rect and expands it by the rootMargin value.\n   * @param {Object} rect The rect object to expand.\n   * @return {Object} The expanded rect.\n   * @private\n   */\n  IntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n    var margins = this._rootMarginValues.map(function(margin, i) {\n      return margin.unit == 'px'\n        ? margin.value\n        : margin.value * (i % 2 ? rect.width : rect.height) / 100;\n    });\n    var newRect = {\n      top: rect.top - margins[0],\n      right: rect.right + margins[1],\n      bottom: rect.bottom + margins[2],\n      left: rect.left - margins[3]\n    };\n    newRect.width = newRect.right - newRect.left;\n    newRect.height = newRect.bottom - newRect.top;\n\n    return newRect;\n  };\n\n  /**\n   * Accepts an old and new entry and returns true if at least one of the\n   * threshold values has been crossed.\n   * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n   *    particular target element or null if no previous entry exists.\n   * @param {IntersectionObserverEntry} newEntry The current entry for a\n   *    particular target element.\n   * @return {boolean} Returns true if a any threshold has been crossed.\n   * @private\n   */\n  IntersectionObserver.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {\n    // To make comparing easier, an entry that has a ratio of 0\n    // but does not actually intersect is given a value of -1\n    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;\n    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;\n\n    // Ignore unchanged ratios\n    if (oldRatio === newRatio) return;\n\n    for (var i = 0; i < this.thresholds.length; i++) {\n      var threshold = this.thresholds[i];\n\n      // Return true if an entry matches a threshold or if the new ratio\n      // and the old ratio are on the opposite sides of a threshold.\n      if (\n        threshold == oldRatio ||\n        threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio\n      ) {\n        return true;\n      }\n    }\n  };\n\n  /**\n   * Returns whether or not the root element is an element and is in the DOM.\n   * @return {boolean} True if the root element is an element and is in the DOM.\n   * @private\n   */\n  IntersectionObserver.prototype._rootIsInDom = function() {\n    return !this.root || containsDeep(document, this.root);\n  };\n\n  /**\n   * Returns whether or not the target element is a child of root.\n   * @param {Element} target The target element to check.\n   * @return {boolean} True if the target element is a child of root.\n   * @private\n   */\n  IntersectionObserver.prototype._rootContainsTarget = function(target) {\n    return containsDeep(this.root || document, target);\n  };\n\n  /**\n   * Adds the instance to the global IntersectionObserver registry if it isn't\n   * already present.\n   * @private\n   */\n  IntersectionObserver.prototype._registerInstance = function() {\n    if (registry.indexOf(this) < 0) {\n      registry.push(this);\n    }\n  };\n\n  /**\n   * Removes the instance from the global IntersectionObserver registry.\n   * @private\n   */\n  IntersectionObserver.prototype._unregisterInstance = function() {\n    var index = registry.indexOf(this);\n    if (index != -1) registry.splice(index, 1);\n  };\n\n  /**\n   * Returns the result of the performance.now() method or null in browsers\n   * that don't support the API.\n   * @return {number} The elapsed time since the page was requested.\n   */\n  function now() {\n    return window.performance && performance.now && performance.now();\n  }\n\n  /**\n   * Throttles a function and delays its executiong, so it's only called at most\n   * once within a given time period.\n   * @param {Function} fn The function to throttle.\n   * @param {number} timeout The amount of time that must pass before the\n   *     function can be called again.\n   * @return {Function} The throttled function.\n   */\n  function throttle(fn, timeout) {\n    var timer = null;\n    return function() {\n      if (!timer) {\n        timer = setTimeout(function() {\n          fn();\n          timer = null;\n        }, timeout);\n      }\n    };\n  }\n\n  /**\n   * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n   * @param {Node} node The DOM node to add the event handler to.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to add.\n   * @param {boolean} opt_useCapture Optionally adds the even to the capture\n   *     phase. Note: this only works in modern browsers.\n   */\n  function addEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.addEventListener == 'function') {\n      node.addEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.attachEvent == 'function') {\n      node.attachEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Removes a previously added event handler from a DOM node.\n   * @param {Node} node The DOM node to remove the event handler from.\n   * @param {string} event The event name.\n   * @param {Function} fn The event handler to remove.\n   * @param {boolean} opt_useCapture If the event handler was added with this\n   *     flag set to true, it should be set to true here in order to remove it.\n   */\n  function removeEvent(node, event, fn, opt_useCapture) {\n    if (typeof node.removeEventListener == 'function') {\n      node.removeEventListener(event, fn, opt_useCapture || false);\n    } else if (typeof node.detatchEvent == 'function') {\n      node.detatchEvent('on' + event, fn);\n    }\n  }\n\n  /**\n   * Returns the intersection between two rect objects.\n   * @param {Object} rect1 The first rect.\n   * @param {Object} rect2 The second rect.\n   * @return {?Object} The intersection rect or undefined if no intersection\n   *     is found.\n   */\n  function computeRectIntersection(rect1, rect2) {\n    var top = Math.max(rect1.top, rect2.top);\n    var bottom = Math.min(rect1.bottom, rect2.bottom);\n    var left = Math.max(rect1.left, rect2.left);\n    var right = Math.min(rect1.right, rect2.right);\n    var width = right - left;\n    var height = bottom - top;\n\n    return (\n      width >= 0 &&\n      height >= 0 && {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        width: width,\n        height: height\n      }\n    );\n  }\n\n  /**\n   * Shims the native getBoundingClientRect for compatibility with older IE.\n   * @param {Element} el The element whose bounding rect to get.\n   * @return {Object} The (possibly shimmed) rect of the element.\n   */\n  function getBoundingClientRect(el) {\n    var rect;\n\n    try {\n      rect = el.getBoundingClientRect();\n    } catch (err) {\n      // Ignore Windows 7 IE11 \"Unspecified error\"\n      // https://github.com/w3c/IntersectionObserver/pull/205\n    }\n\n    if (!rect) return getEmptyRect();\n\n    // Older IE\n    if (!(rect.width && rect.height)) {\n      rect = {\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom,\n        left: rect.left,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    }\n    return rect;\n  }\n\n  /**\n   * Returns an empty rect object. An empty rect is returned when an element\n   * is not in the DOM.\n   * @return {Object} The empty rect.\n   */\n  function getEmptyRect() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  /**\n   * Checks to see if a parent element contains a child elemnt (including inside\n   * shadow DOM).\n   * @param {Node} parent The parent element.\n   * @param {Node} child The child element.\n   * @return {boolean} True if the parent node contains the child node.\n   */\n  function containsDeep(parent, child) {\n    var node = child;\n    while (node) {\n      if (node == parent) return true;\n\n      node = getParentNode(node);\n    }\n    return false;\n  }\n\n  /**\n   * Gets the parent node of an element or its host element if the parent node\n   * is a shadow root.\n   * @param {Node} node The node whose parent to get.\n   * @return {Node|null} The parent node or null if no parent exists.\n   */\n  function getParentNode(node) {\n    var parent = node.parentNode;\n\n    if (parent && parent.nodeType == 11 && parent.host) {\n      // If the parent is a shadow root, return the host element.\n      return parent.host;\n    }\n    return parent;\n  }\n\n  // Exposes the constructors globally.\n  window.IntersectionObserver = IntersectionObserver;\n  window.IntersectionObserverEntry = IntersectionObserverEntry;\n})(window, document);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/lib/intersection-observer.js\n// module id = 10\n// module chunks = 0","/**\n * Item Linking.\n *\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\n * or double-clicking with a pointer device.\n */\n\nimport { listener } from '../util/passive-event-listener';\nimport { getSelectedItem, getHighlightedItem } from '../core/item-navigation';\nimport { getSelectedDocument, getHighlightedDocument } from '../core/document-navigation';\n\nexport { ItemLinking };\n\nconst ItemLinking = {\n  enabled: true,\n  name: 'item-linking',\n  description: 'Link pages to PDF source',\n  enable() {\n    document.addEventListener('keydown', handleKeyDown, listener.passive);\n    document.addEventListener('dblclick', handleDoubleClick, listener.passive);\n  },\n  disable() {\n    document.removeEventListener('keydown', handleKeyDown);\n    document.removeEventListener('dblclick', handleDoubleClick);\n  }\n};\n\n/**\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.keyCode !== 13) {\n    return;\n  }\n\n  const openInNewTab = event.ctrlKey;\n  const doc = getSelectedDocument();\n  const item = getSelectedItem(doc);\n  handleOpenIntent(doc, item, openInNewTab);\n}\n\n/**\n * @param {MouseEvent} event\n */\nfunction handleDoubleClick(event) {\n  if (event.button !== 0) {\n    return;\n  }\n\n  const doc = getHighlightedDocument();\n  const item = getHighlightedItem(doc);\n  if (item) {\n    const openInNewTab = true;\n    handleOpenIntent(doc, item, openInNewTab);\n  }\n}\n\n/**\n *\n * @param {HTMLElement} doc\n * @param {HTMLElement} item\n * @param {boolean} openInNewTab\n */\nfunction handleOpenIntent(doc, item, openInNewTab) {\n  // Focusable elements have a default behavior (e.g. activating a link)\n  // That behavior shall not be altered/extended.\n  if (isInteractive(item)) {\n    return;\n  }\n\n  openDocumentSource(doc, item, openInNewTab);\n}\n\n/**\n * Opens the document source for the current selected document in the browser.\n *\n * @param {HTMLElement} doc\n * @param {HTMLElement} item\n * @param {boolean} openInNewTab\n */\nfunction openDocumentSource(doc, item, openInNewTab) {\n  const itemIndex = item.dataset.page;\n  const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n  const itemSource = doc.dataset.docSource + fragment;\n\n  if (openInNewTab) {\n    window.open(itemSource);\n  } else {\n    window.location.href = itemSource;\n  }\n}\n\n/**\n * Returns true if element is interactive, false otherwise.\n *\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (!element.hasAttribute('href')) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.hasAttribute('contenteditable')) {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/plugins/item-linking.js\n// module id = 12\n// module chunks = 0","export { clamp };\n\n/**\n * Clamps the given value between the min and max boundaries\n * Returns value if min <= value <= max.\n * Returns min if value < min.\n * Returns max if value > max.\n *\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/clamp.js\n// module id = 13\n// module chunks = 0","export { getFloatPropertyValue };\n\n/**\n * Returns a property value parsed as a floating-point number.\n *\n * @param {Element} element\n * @param {string} property\n * @returns {number}\n */\nfunction getFloatPropertyValue(element, property) {\n  const value = getComputedStyle(element).getPropertyValue(property);\n\n  if (value === '') {\n    return 0;\n  }\n\n  return parseFloat(value);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/get-float-property-value.js\n// module id = 14\n// module chunks = 0","export { LinkedMap };\n\n/**\n * @typedef {class} LinkedMapType\n * @property {Map.<K, V>} _map\n * @property {LinkedMapNode} _first\n * @property {LinkedMapNode} _last\n * @template K, V\n */\n\n/**\n * A doubly-linked Map implementation based on Map.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n *\n * It exposes its order via iterable iterators which can be used for both\n * forwards and backwards iteration. As per Map, the order of a LinkedMap is\n * always the insertion order (i.e. not sorted).\n *\n * @type {LinkedMapType}\n */\nclass LinkedMap {\n  /**\n   * @constructor\n   * @param {Iterable?} iterable\n   */\n  constructor(iterable = null) {\n    this._map = new Map();\n    this._first = null;\n    this._last = null;\n\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\n   * @returns {string}\n   */\n  get [Symbol.toStringTag]() {\n    return 'LinkedMap';\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   * @private\n   */\n  get first() {\n    return this._first;\n  }\n\n  /**\n   * @param {LinkedMapNode} node\n   * @private\n   */\n  set first(node) {\n    this._first = node;\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   * @private\n   */\n  get last() {\n    return this._last;\n  }\n\n  /**\n   * @param {LinkedMapNode} node\n   * @private\n   */\n  set last(node) {\n    this._last = node;\n  }\n\n  /**\n   * The size accessor property returns the number of elements in a LinkedMap object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n   *\n   * @returns {number} the size of the LinkedMap.\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * The clear() method removes all elements from a LinkedMap object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   */\n  clear() {\n    this._map.clear();\n    this._first = null;\n    this._last = null;\n  }\n\n  /**\n   * The has() method returns a boolean indicating whether an element with the\n   * specified key exists or not.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   *\n   * @param {*} key\n   * @returns {boolean}\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * The get() method returns a specified element from a Map object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   *\n   * @param {*} key\n   * @returns {*|undefined}\n   */\n  get(key) {\n    return this._map.get(key).value;\n  }\n\n  /**\n   * Retrieves the last element in a LinkedMap object\n   *\n   * @returns {*}\n   */\n  getLast() {\n    return this.last.value;\n  }\n\n  /**\n   * Retrieves the first element in a LinkedMap object\n   *\n   * @returns {*}\n   */\n  getFirst() {\n    return this.first.value;\n  }\n\n  /**\n   * The add() method adds a new element to the internal data structure.\n   * It does not link itself with its neighboring elements which is why\n   * this method must never be called directly.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {LinkedMapNode}\n   * @private\n   */\n  add(key, value) {\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n    } else {\n      node = new LinkedMapNode(key, value);\n\n      this._map.set(key, node);\n    }\n\n    return node;\n  }\n\n  /**\n   * The set() method adds and links a new element at the end of a LinkedMap\n   * object.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {LinkedMap}\n   */\n  set(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.prev = this.last;\n      this.last.next = node;\n      this.last = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The setFront() method adds and links a new element at the beginning of a\n   * LinkedMap object.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {LinkedMap}\n   */\n  setFront(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first.prev = node;\n      this.first = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The delete() method removes the specified element from a Map object.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   *\n   * @param {*} key\n   * @returns {boolean}\n   */\n  delete(key) {\n    if (this.has(key)) {\n      const node = this._map.get(key);\n\n      if (this.first === this.last) {\n        this.first = null;\n        this.last = null;\n      } else if (this.first === node) {\n        node.next.prev = null;\n        this.first = node.next;\n      } else if (this.last === node) {\n        node.prev.next = null;\n        this.last = node.prev;\n      } else {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n      }\n\n      this._map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * The forEach() method executes a provided function once per each key/value\n   * pair in the Map object, in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   */\n  forEach(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * Same as the forEach() method, but executing in reverse insertion order.\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   */\n  forEachReverse(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries().reverse()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The initial value of the @@iterator property is the same function object\n   * as the initial value of the entries property.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   *\n   * @returns {IterableIterator}\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Allows usage of the iteration protocols for reverse iteration.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Examples:\n   *\n   *   for (const [key, value] of linkedMap.reverse()) { … }\n   *\n   *   [...linkedMap.reverse()]\n   *\n   * @returns {IterableIterator}\n   */\n  reverse() {\n    return this.entries().reverse();\n  }\n\n  /**\n   * The entries() method returns a new Iterator object that contains the\n   * [key, value] pairs for each element in the Map object in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\n   *\n   * @returns {IterableIterator}\n   */\n  entries() {\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The keys() method returns a new Iterator object that contains the keys for\n   * each element in the Map object in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\n   *\n   * @returns {IterableIterator}\n   */\n  keys() {\n    const getIteratorValue = function(node) {\n      return node.key;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The values() method returns a new Iterator object that contains the values\n   * for each element in the Map object in insertion order.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\n   *\n   * @returns {IterableIterator}\n   */\n  values() {\n    const getIteratorValue = function(node) {\n      return node.value;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * Return an iterator for a specific element in the LinkedMap.\n   *\n   * @param {*} key\n   * @returns {IterableIterator}\n   */\n  iteratorFor(key) {\n    let startNode = this._map.get(key);\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue, startNode);\n  }\n\n  /**\n   * Returns an object which is both an iterable and an iterator since it\n   * fulfills the requirements of the iteration protocols.\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Iterator requirements:\n   * An object that implements a function called next. This function returns an\n   * object with two properties: value and done.\n   *\n   * Iterable requirements:\n   * An object that implements a function [Symbol.iterator](). This function\n   * returns an iterator. Since the entries() method itself returns the\n   * iterator object, `this` references the correct iterator object.\n   *\n   * In addition, the object is also reverse-iterable by providing a reverse()\n   * method. Calling it on an iterable will iterate in reverse insertion order.\n   *\n   * @param {function} getIteratorValue\n   * @param {LinkedMapNode?} startNode\n   * @returns {IterableIterator}\n   * @private\n   */\n  iterableIterator(getIteratorValue, startNode = undefined) {\n    let currentNode = startNode ? startNode : this.first;\n    // Store the this.last node as inside the reverse() method, `this` will be\n    // bound to iterableIterator, not LinkedMap. That’s on purpose.\n    const last = this.last;\n    let nextProp = 'next';\n\n    return {\n      reverse() {\n        currentNode = startNode ? startNode : last;\n        nextProp = 'prev';\n        return this;\n      },\n      [Symbol.iterator]() {\n        // Return the iterable itself.\n        return this;\n      },\n      next: function() {\n        let value;\n        if (currentNode) {\n          value = getIteratorValue(currentNode);\n          currentNode = currentNode[nextProp];\n        }\n        return iteratorResult(value);\n      }\n    };\n  }\n}\n\n/**\n * @typedef {class} LinkedMapNodeType\n * @property {K} _key\n * @property {V} _value\n * @property {LinkedMapNode} _prev\n * @property {LinkedMapNode} _next\n * @template K, V\n */\n\n/**\n * Represents a node within a LinkedMap.\n *\n * @type {LinkedMapNodeType}\n */\nclass LinkedMapNode {\n  /**\n   * @constructor\n   * @param {*} key\n   * @param {*} value\n   */\n  constructor(key, value) {\n    this._key = key;\n    this._value = value;\n    this._next = null;\n    this._prev = null;\n  }\n\n  /**\n   * @returns {*}\n   */\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * @returns {*}\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * @param {*} value\n   */\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * @param {LinkedMapNode} next\n   */\n  set next(next) {\n    this._next = next;\n  }\n\n  /**\n   * @returns {LinkedMapNode}\n   */\n  get prev() {\n    return this._prev;\n  }\n\n  /**\n   * @param {LinkedMapNode} prev\n   */\n  set prev(prev) {\n    this._prev = prev;\n  }\n}\n\n/**\n * Returns an IteratorResult object as per the following rules:\n * - If value is not undefined, done is false.\n * - If value is undefined, done is true. In this case, value may be omitted.\n *\n * This function does not belong to the LinkedMap prototype as it doesn’t need\n * access to any of the prototypes properties.\n *\n * @param {*|undefined} value\n * @returns {IteratorResult}\n */\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: value === undefined\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/linked-map.js\n// module id = 16\n// module chunks = 0","import { config } from '../config';\nimport { getFloatPropertyValue } from '.';\n\nexport { numberOfVisibleElements };\n\n/**\n * Calculates how many child elements fit into the width of a parent element.\n *\n * Intentional side effect:\n * Whenever this function is called, potentially returning a new value after\n * its last calculation, another function is called that stores the value in\n * the DOM.\n *\n * @param {Element} parentElement\n * @param {number} childElementWidth\n * @returns {number}\n */\nfunction numberOfVisibleElements(parentElement, childElementWidth) {\n  const parentElementWidth = getFloatPropertyValue(parentElement, 'width');\n  return Math.floor(parentElementWidth / childElementWidth);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/number-of-visible-elements.js\n// module id = 17\n// module chunks = 0","export { getOuterWidth };\n\nimport { getFloatPropertyValue } from '.';\n\n/**\n *\n * @param {Element} element\n * @returns {number}\n */\nfunction getOuterWidth(element) {\n  const width = getFloatPropertyValue(element, 'width');\n  const marginLeft = getFloatPropertyValue(element, 'margin-left');\n  const marginRight = getFloatPropertyValue(element, 'margin-right');\n\n  return marginLeft + width + marginRight;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/util/get-outer-width.js\n// module id = 18\n// module chunks = 0","/**\n * Highlighter.\n *\n * Highlights documents/items on hover\n */\n\nimport { config } from '../config';\nimport { listener } from '../util/passive-event-listener';\nimport { highlightDocument } from '../core/document-navigation';\nimport { highlightItem } from '../core/item-navigation';\n\nexport { Highlighter };\n\nconst Highlighter = {\n  enabled: true,\n  name: 'highlighter',\n  description: 'Highlight documents/items on hover',\n  enable() {\n    document.addEventListener('mousemove', handleHighlightOnHover, listener.passive);\n  },\n  disable() {\n    document.removeEventListener('mousemove', handleHighlightOnHover);\n  }\n};\n\n/**\n * @param {MouseEvent} event\n */\nfunction handleHighlightOnHover(event) {\n  if (event.target instanceof Element) {\n    const doc = event.target.closest(config.selector.doc);\n    if (doc) {\n      highlightDocument(doc);\n\n      const item = event.target.closest(config.selector.item);\n      if (item) {\n        highlightItem(doc, item);\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/plugins/highlighter.js\n// module id = 19\n// module chunks = 0","/**\n * Document Loader.\n *\n * Loads documents dynamically when needed.\n */\n\nimport { config } from '../config';\nimport { startImageObserver } from './image-loader';\nimport { selectDocument } from './document-navigation';\nimport { selectItem, storeItemOuterWidth, exposeScrollboxWidth } from './item-navigation';\nimport { LinkedMap, getFloatPropertyValue, getOuterWidth } from '../util';\nimport { initMouseInteraction } from './mouse-interaction';\n\nexport { DocumentLoader };\n\n/**\n * @typedef {object} Store\n * @property {LinkedMap} documents\n * @property {IterableIterator} prevIterator\n * @property {IterableIterator} nextIterator\n * @property {IntersectionObserver} observer\n * @property {number} batchSize\n * @property {StorePropertyClasses} classes\n *\n * @typedef {object} StorePropertyClasses\n * @property {string} slidehub\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n *\n * @typedef {object} DocumentData\n * @property {string} name\n * @property {number} itemCount\n * @property {boolean} loaded\n */\n\n/**\n * Store often accessed properties once instead of recomputing them every time.\n *\n * @type {Store}\n */\nconst store = {\n  documents: null,\n\n  // The two iterators that are used to load documents when the user moves up\n  // or down.\n  prevIterator: null,\n  nextIterator: null,\n  observer: new IntersectionObserver(documentObservationHandler),\n\n  // Number of items surrounding a document that should be loaded once that\n  // document is loaded.\n  batchSize: 5,\n\n  classes: {\n    slidehub: config.selector.slidehub.slice(1),\n    doc: config.selector.doc.slice(1),\n    scrollbox: config.selector.scrollbox.slice(1),\n    itemContainer: config.selector.itemContainer.slice(1),\n    item: config.selector.item.slice(1)\n  }\n};\n\nconst DocumentLoader = {\n  enable() {\n    store.documents = parseDocumentsData(documentsData);\n\n    document.addEventListener('DOMContentLoaded', function() {\n      const slidehubContainer = createSlidehubContainer();\n      insertDocumentFrames(slidehubContainer);\n\n      const targetDoc = loadTargetDocument();\n      exposeScrollboxWidth();\n      storeItemOuterWidthInDOM(slidehubContainer, targetDoc);\n\n      // Load one batch in both directions\n      loadBatch(store.nextIterator, 'beforeend', store.batchSize);\n      loadBatch(store.prevIterator, 'afterbegin', store.batchSize);\n    });\n  }\n};\n\n/**\n * Parses the initial document data into a more managable data structure.\n * The resulting structure keeps track of a documents’ loaded state.\n *\n * @param {Array<[string, number]>} documentsData\n * @return {LinkedMap}\n */\nfunction parseDocumentsData(documentsData) {\n  const documents = new LinkedMap();\n\n  documentsData.forEach(([name, itemCount]) => {\n    const value = {\n      name,\n      itemCount,\n      loaded: false\n    };\n\n    documents.set(name, value);\n  });\n\n  return documents;\n}\n\n/**\n * Hooks the Slidehub container element into the DOM.\n *\n * Requires an element with a custom attribute `data-slidehub`. A new <div> element\n * will be created inside of it. No existing markup will be changed or removed.\n *\n * @returns {HTMLElement}\n */\nfunction createSlidehubContainer() {\n  const slidehubContainer = document.createElement('div');\n  slidehubContainer.classList.add(store.classes.slidehub);\n\n  // Expose select/highlight color overrides to the DOM.\n  // This allows CSS to use inside of a rule declaration.\n  if (config.selectColor && config.selectColor !== '') {\n    slidehubContainer.style.setProperty('--c-selected', config.selectColor);\n  }\n\n  if (config.highlightColor && config.highlightColor !== '') {\n    slidehubContainer.style.setProperty('--c-highlighted', config.highlightColor);\n  }\n\n  document.querySelector('[data-slidehub]').appendChild(slidehubContainer);\n\n  return slidehubContainer;\n}\n\n/**\n * Prepares the DOM with empty frames for all documents.\n *\n * @param {HTMLElement} slidehubContainer\n */\nfunction insertDocumentFrames(slidehubContainer) {\n  let documentFramesMarkup = '';\n\n  for (const documentData of store.documents.values()) {\n    const documentSource = `${config.assets.documents}/${documentData.name}`;\n    documentFramesMarkup += `\n      <div\n        class=\"${store.classes.doc}\"\n        id=\"${documentData.name}\"\n        data-doc-source=\"${documentSource}\"\n        style=\"--pages: ${documentData.itemCount + (config.metaSlide ? 1 : 0)}\"\n      >\n      </div>\n    `;\n  }\n\n  slidehubContainer.insertAdjacentHTML('beforeend', documentFramesMarkup);\n}\n\n/**\n * Starts off the document loading process. Determines which document should be\n * loaded and sets up two iterators. They will be used to load new documents\n * when needed.\n *\n * @returns {HTMLElement}\n */\nfunction loadTargetDocument() {\n  const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n\n  const documentName = store.documents.has(fragmentIdentifier)\n    ? fragmentIdentifier\n    : store.documents.keys().next().value;\n\n  // Obtain two iterators as pointers for which documents need to be\n  // loaded next.\n  store.prevIterator = store.documents.iteratorFor(documentName).reverse();\n  store.nextIterator = store.documents.iteratorFor(documentName);\n\n  // The target document will be loaded next by retrieving the iterator result\n  // from nextIterator. Since prevIterator points to the same document, it\n  // needs to be advanced manually, so it can’t be used to load that document\n  // again.\n  store.prevIterator.next();\n\n  return loadInitialDocument(store.nextIterator.next(), store.documents.has(fragmentIdentifier));\n}\n\n/**\n * Returns the fragment identifier of a URL if it is present.\n * Returns null if the fragment identifier is the empty string or if there is none.\n *\n * @param {string} url\n * @return {string|null}\n */\nfunction getFragmentIdentifier(url) {\n  const hashPosition = url.indexOf('#');\n  if (hashPosition > 0) {\n    return url.substring(hashPosition + 1);\n  }\n\n  return null;\n}\n\n/**\n * Manages loading the very first Slidehub document.\n *\n * @param {IteratorResult} iteratorResult\n * @param {boolean} centerDocumentInView\n * @returns {HTMLElement}\n */\nfunction loadInitialDocument(iteratorResult, centerDocumentInView) {\n  const initialDocument = loadDocument(iteratorResult, 'beforeend');\n\n  selectDocument(initialDocument);\n\n  if (centerDocumentInView) {\n    const documentHeight = getFloatPropertyValue(initialDocument, 'height');\n\n    setTimeout(() => window.scrollBy(0, -(window.innerHeight / 2 - documentHeight / 2)), 200);\n  }\n\n  return initialDocument;\n}\n\n/**\n * A wrapper for calling loadDocument multiple times.\n *\n * @param {IterableIterator} documentIterable\n * @param {'afterbegin'|'beforeend'} insertPosition\n * @param {number} batchSize\n */\nfunction loadBatch(documentIterable, insertPosition, batchSize) {\n  while (batchSize--) {\n    loadDocument(documentIterable.next(), insertPosition);\n  }\n}\n\n/**\n * Loads a new document by creating and injecting the markup into the DOM.\n * Once this is done, the document is marked as loaded.\n *\n * @param {IteratorResult} iteratorResult\n * @param {'afterbegin'|'beforeend'} insertPosition\n */\nfunction loadDocument(iteratorResult, insertPosition) {\n  if (iteratorResult.done) {\n    return;\n  }\n\n  const documentData = iteratorResult.value[1];\n  if (documentData.loaded) {\n    console.warn(documentData.name, 'was already loaded. Skipping.');\n    return;\n  }\n\n  documentData.insertPosition = insertPosition;\n  if (documentData.insertPosition === 'afterbegin') {\n    documentData.iterator = store.prevIterator;\n  } else {\n    documentData.iterator = store.nextIterator;\n  }\n\n  console.log(`Loading ${documentData.name}.`);\n\n  const doc = insertDocument(documentData);\n\n  selectItem(doc, doc.querySelector(config.selector.item));\n  startImageObserver(doc);\n  initMouseInteraction(doc);\n\n  store.observer.observe(doc);\n\n  documentData.loaded = true;\n\n  return doc;\n}\n\n/**\n * Inserts document markup into the DOM.\n *\n * @param {DocumentData} documentData\n */\nfunction insertDocument(documentData) {\n  const innerDocumentMarkup = createDocumentMarkup(documentData);\n  const doc = document.getElementById(documentData.name);\n  doc.insertAdjacentHTML('beforeend', innerDocumentMarkup);\n\n  return doc;\n}\n\n/**\n * Computes and stores the outer width of items in the DOM in the form on a\n * custom property. This way, it is accessible from within CSS.\n *\n * TO DO: Check for box-sizing value and compute accordingly.\n *\n * @param {HTMLElement} slidehubContainer\n * @param {HTMLElement} doc\n */\nfunction storeItemOuterWidthInDOM(slidehubContainer, doc) {\n  const item = doc.querySelector(config.selector.item);\n  const itemOuterWidth = getOuterWidth(item);\n\n  storeItemOuterWidth(itemOuterWidth);\n\n  slidehubContainer.style.setProperty('--page-outer-width', itemOuterWidth + 'px');\n}\n\n/**\n * Creates the complete markup for a document under the following assumptions:\n * - A file named documentData.name exists on the document assets path\n * - The document’s item images are on the image assets path\n *\n * @param {DocumentData} documentData\n * @return {string}\n */\nfunction createDocumentMarkup(documentData) {\n  let items = '';\n  for (var i = 0; i < documentData.itemCount; i++) {\n    const imageSource = `${config.assets.images}/${documentData.name}-${i}.png`;\n    items += `\n      <div class=\"${store.classes.item}\" data-page=\"${i + 1}\">\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\n      </div>\n    `;\n  }\n\n  const documentSource = `${config.assets.documents}/${documentData.name}`;\n\n  const metaSlide = `\n    <div class=\"${store.classes.item}\" data-page=\"0\">\n      <div class=\"doc-meta\">\n        <h2 class=\"doc-meta__title\">\n          <a href=\"${documentSource}\">${documentData.name}</a>\n        </h2>\n        by author, ${documentData.itemCount} pages, 2018\n      </div>\n    </div>\n  `;\n\n  const dummyPage = `\n    <div class=\"${store.classes.item} dummy-page\" aria-hidden=\"true\" style=\"visibility: hidden;\">\n    </div>\n  `;\n\n  return `\n    <div class=\"${store.classes.scrollbox}\">\n      <div class=\"${store.classes.itemContainer}\">\n        ${config.metaSlide ? metaSlide : ''}\n        ${items}\n        ${dummyPage}\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Handles lazy-loading documents.\n *\n * @param {Array<IntersectionObserverEntry>} entries\n * @param {IntersectionObserver} observer\n */\nfunction documentObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      const documentData = store.documents.get(entry.target.id);\n      loadDocument(documentData.iterator.next(), documentData.insertPosition);\n\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/document-loader.js\n// module id = 21\n// module chunks = 0","/**\n * Keyboard Navigation.\n */\n\nimport { listener } from '../util/passive-event-listener';\nimport { navigateItem, navigateItemToBoundary } from '../core/item-navigation';\nimport { navigateDocument } from '../core/document-navigation';\n\nexport { KeyboardInteraction };\n\nconst KeyboardInteraction = {\n  name: 'keyboard-interaction',\n  description: 'Navigate documents and its pages with the keyboard',\n  enable() {\n    document.addEventListener('keydown', handleKeyboardInput, listener.active);\n  }\n};\n\n/**\n * Handles keyboard interactions with documents and items.\n *\n * @param {KeyboardEvent} event\n */\nfunction handleKeyboardInput(event) {\n  if (event.keyCode in controlKeyNames) {\n    event.preventDefault();\n    const keyName = controlKeyNames[event.keyCode];\n    controlKey[keyName].trigger(event);\n  }\n}\n\n/**\n * Maps key codes to key names.\n * It’s used within keyboard-related event handlers in order to work with the\n * keys’ names instead of key codes.\n *\n * Removing an entry here disables its application-related interactions\n */\nconst controlKeyNames = Object.freeze({\n  33: 'pageUp',\n  34: 'pageDown',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n});\n\n/**\n * Maps control keys to a trigger function that is executed when the key is\n * pressed.\n *\n * @typedef {object} ControlKeyObject\n * @property {number} direction\n * @property {function(): void} trigger\n *\n * @type {Object.<string, ControlKeyObject>}\n */\nconst controlKey = Object.freeze({\n  homeKey: {\n    direction: -1,\n    trigger: function() {\n      navigateItemToBoundary(this.direction);\n    }\n  },\n  endKey: {\n    direction: 1,\n    trigger: function() {\n      navigateItemToBoundary(this.direction);\n    }\n  },\n  pageUp: {\n    direction: -1,\n    trigger: function() {\n      navigateDocument(this.direction * 3);\n    }\n  },\n  pageDown: {\n    direction: 1,\n    trigger: function() {\n      navigateDocument(this.direction * 3);\n    }\n  },\n  arrowLeft: {\n    direction: -1,\n    trigger: function(event) {\n      navigateItem(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  },\n  arrowRight: {\n    direction: 1,\n    trigger: function(event) {\n      navigateItem(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  },\n  arrowUp: {\n    direction: -1,\n    trigger: function(event) {\n      navigateDocument(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  },\n  arrowDown: {\n    direction: 1,\n    trigger: function(event) {\n      navigateDocument(this.direction * (event.shiftKey ? 3 : 1));\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/keyboard-interaction.js\n// module id = 22\n// module chunks = 0","/**\n * Plugin Loader.\n */\n\nexport { loadPlugin };\n\n/**\n * @typedef {object} SlidehubPlugin\n * @property {function(): void} enable\n * @property {function(): void} disable\n * @property {string} name\n * @property {string} description\n * @property {boolean} enabled\n */\n\n/**\n * Loads a plugin and potentially enables it.\n *\n * @param {SlidehubPlugin} plugin\n */\nfunction loadPlugin(plugin) {\n  if (plugin.enabled) {\n    plugin.enable();\n  }\n\n  registerPlugin(plugin);\n}\n\nconst pluginRegistry = new Map();\n\n/**\n * Registers a new plugin.\n *\n * @param {SlidehubPlugin} plugin\n */\nfunction registerPlugin(plugin) {\n  const button = createToggleButton(plugin);\n\n  if (button) {\n    pluginRegistry.set(plugin.name, plugin);\n\n    button.addEventListener('click', toggleButton);\n  }\n}\n\n/**\n * Creates a feature toggle button in the user interface.\n *\n * @param {SlidehubPlugin} plugin\n * @returns {Element|null}\n */\nfunction createToggleButton(plugin) {\n  const fieldset = document.querySelector('.features-fieldset');\n\n  if (!fieldset) {\n    return null;\n  }\n\n  const toggleButtonMarkup = `\n    <div class=\"form-group form-group--switch\">\n      <span class=\"form-label\" id=\"${plugin.name}-label\">${plugin.description}</span>\n      <button role=\"switch\" aria-checked=\"false\" aria-labelledby=\"${\n        plugin.name\n      }-label\" data-feature=\"${plugin.name}\">\n        <span class=\"state state--true\" aria-label=\"on\"></span>\n        <span class=\"state state--false\" aria-label=\"off\"></span>\n      </button>\n    </div>\n  `;\n\n  fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\n\n  const button = fieldset.querySelector(`[data-feature=\"${plugin.name}\"]`);\n  button.setAttribute('aria-checked', plugin.enabled.toString());\n\n  return button;\n}\n\n/**\n * Toggles a toggle button and triggers its associated action.\n *\n * @param {MouseEvent} event\n */\nfunction toggleButton(event) {\n  const button = event.currentTarget;\n\n  if (button instanceof HTMLElement) {\n    const plugin = pluginRegistry.get(button.dataset.feature);\n    const isPressed = button.getAttribute('aria-checked') === 'true';\n    button.setAttribute('aria-checked', String(!isPressed));\n\n    triggerButtonAction(button, 'aria-checked', plugin);\n  }\n}\n\n/**\n * Triggers the associated action of a toggle button.\n *\n * @param {HTMLElement} button\n * @param {'aria-checked'|'aria-pressed'} stateAttr\n * @param {SlidehubPlugin} plugin\n */\nfunction triggerButtonAction(button, stateAttr, plugin) {\n  switch (true) {\n    case button.hasAttribute('data-feature'):\n      if (button.getAttribute(stateAttr) === 'true') {\n        plugin.enable();\n        console.info('Enabled', plugin.name);\n      } else {\n        plugin.disable();\n        console.info('Disabled', plugin.name);\n      }\n      break;\n\n    default:\n      console.warn('No action is associated with the control', button);\n      break;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/load-plugin.js\n// module id = 23\n// module chunks = 0","/**\n * Modal window.\n *\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\n * https://github.com/gdkraus/accessible-modal-dialog\n */\n\nimport { listener } from '../util';\n\nexport { Modal };\n\nlet lastFocusedElement;\n\nconst Modal = {\n  enable() {\n    document.addEventListener('DOMContentLoaded', function() {\n      const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\n      modalOpenButtons.forEach(button => {\n        button.removeAttribute('disabled');\n        button.addEventListener('click', event => {\n          const targetModalClass = event.currentTarget.dataset.targetModal;\n          const modal = document.querySelector(`.${targetModalClass}`);\n          openModal(modal);\n        });\n      });\n\n      const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\n      modalCloseButtons.forEach(button => {\n        button.addEventListener('click', event => {\n          const modal = event.currentTarget.closest('.modal');\n          closeModal(modal);\n        });\n      });\n    });\n  }\n};\n\n/**\n * Opens the modal.\n *\n * @param {Element} modal\n */\nfunction openModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  // Store last focused element\n  lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  moveFocusToModal(modal);\n\n  // Setup event listeners\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\n  modal.addEventListener('keydown', trapTabKey, listener.active);\n  modal.addEventListener('click', closeOnBackground, listener.passive);\n}\n\n/**\n * Move focus to the first focusable element inside the modal.\n *\n * @param {Element} modal\n */\nfunction moveFocusToModal(modal) {\n  const focusable = getFocusableElements(modal);\n  focusable[0].focus();\n}\n\n/**\n * Closes the modal.\n *\n * @param {Element} modal\n */\nfunction closeModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  // Clean up event listeners\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\n\n  // Restore previously focused element\n  lastFocusedElement.focus();\n}\n\n/**\n * Closes the modal when clicking on the background.\n *\n * @param {MouseEvent} event\n */\nfunction closeOnBackground(event) {\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\n  if (modal === event.target) {\n    closeModal(modal);\n  }\n}\n\n/**\n * Closes the modal when pressing the <kbd>Esc</kbd>.\n *\n * @param {KeyboardEvent} event\n */\nfunction closeOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\n  }\n}\n\n/**\n * Make it impossible to focus an element outside the modal\n *\n * @param {KeyboardEvent} event\n */\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabable[0]) {\n      tabable[tabable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabable[tabable.length - 1]) {\n      tabable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * Selects all focusable elements currently present in the DOM/\n *\n * @param {Element|document} ancestor\n * @returns {Array}\n */\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nconst focusableElementsSelector =\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/core/modal.js\n// module id = 24\n// module chunks = 0"],"sourceRoot":""}