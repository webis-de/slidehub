{"version":3,"sources":["js/config.mjs","js/documents-data.mjs","js/lib/reverse-iterable-map.mjs","js/util/clamp.mjs","js/core/ItemNavigator.mjs","js/core/SlidehubDocument.mjs","js/core/SlidehubParser.mjs","js/core/SlidehubDocumentLoader.mjs","js/core/SlidehubImageLoader.mjs","js/util/passive-event-listener.mjs","js/util/debounce.mjs","js/core/SlidehubMouseInteraction.mjs","js/core/SlidehubKeyboardInteraction.mjs","js/core/DocumentNavigator.mjs","js/core/Modal.mjs","js/core/SlidehubPlugin.mjs","js/plugins/DocumentSourceLinker.mjs","js/plugins/PageWidgetPlugin.mjs","js/plugins/namespace.mjs","js/util/getOuterWidth.mjs","js/util/getFragmentIdentifier.mjs","js/core/Slidehub.mjs","js/app.mjs"],"names":["config","documentsData","ReverseIterableMap","iterable","_map","Map","_first","_last","key","value","set","clear","has","get","last","first","node","ReverseIterableMapNode","add","prev","next","delete","callback","thisArg","undefined","entries","reverse","Symbol","iterator","iterableIterator","startNode","getIteratorValue","currentNode","nextProp","iteratorResult","toStringTag","size","_key","_value","_next","_prev","clamp","min","max","Math","ItemNavigator","slidehub","doc","_doc","_itemPos","_selectedItemPos","distance","by","vector","newSelectedItemPos","determineNewSelectedItemPos","selectedItemPos","updateSelectedItemPos","Number","isInteger","itemPos","updateItemPos","round","keepSelectedPageInFirstColumn","allItemsVisible","newItemPos","determineNewItemPos","scrollboxNode","scrollLeft","itemWidth","visibleItems","invalidItemPositions","maxPos","itemCount","selectItem","items","item","numberOfVisibleItems","SlidehubDocument","selectClassName","hoverClassName","name","imageCount","_name","_imageCount","_loaded","_node","_scrollboxNode","_items","_selectedItemNode","_hoveredItemNode","_itemNavigator","length","itemNode","selectedItemNode","itemContainer","parentElement","contains","classList","remove","slidehubSelectItemEvent","CustomEvent","dispatchEvent","document","activeElement","HTMLElement","blur","hoveredItemNode","unhoverItem","slidehubHoverItemEvent","markup","createMarkup","docNode","getElementById","insertAdjacentHTML","setNode","scrollboxClassName","selector","scrollbox","slice","itemContainerClassName","itemClassName","i","imageSource","assets","images","documentSource","metaSlide","documents","dummyPage","querySelector","querySelectorAll","selectedDocument","selectDocument","loaded","parseDocumentsMarkup","parseDocumentsData","forEach","id","SlidehubDocumentLoader","batchSize","prevIterator","nextIterator","observer","IntersectionObserver","documentObservationHandler","bind","targetDoc","loadTargetDocument","loadBatch","documentFramesMarkup","values","iteratorFor","loadDocument","documentIterable","insertPosition","done","info","load","observe","warn","entry","isIntersecting","target","unobserve","SlidehubImageLoader","imageObserver","window","imageObserverOptions","imageObservationHandler","observeExistingDocuments","Array","from","loadImage","image","startImageObserver","dataset","src","setAttribute","removeAttribute","addEventListener","handleItemImageLoaded","error","preserveAspectRatio","setItemAspectRatio","closest","style","cssText","includes","aspectRatio","naturalWidth","naturalHeight","setProperty","toString","listener","supportsPassive","opts","Object","defineProperty","removeEventListener","e","passive","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","setTimeout","apply","SlidehubMouseInteraction","scrolling","mouseX","innerWidth","mouseY","innerHeight","initStoreMousePosition","initHoverDocumentOnScroll","initExistingDocuments","initModifiers","storeMousePosition","handleScrollDocumentHover","initMouseInteraction","initScrollInteraction","handleWheelInteraction","active","handleClickSelect","handleMoveHover","event","clientX","clientY","targetElement","elementFromPoint","docElement","hoverDocument","itemElement","hoverItem","currentTarget","ratio","scrollingDirection","abs","deltaX","deltaY","vertical","horizontal","shiftKey","preventDefault","delta","navigateItem","sign","onModifierDown","onModifierUp","onModifierBlur","hoveredDocument","keyCode","SlidehubKeyboardInteraction","controlKeyNames","controlKey","left","right","navigateDocument","up","down","handleKeyboardInput","keyName","trigger","DocumentNavigator","selectedDocumentName","scrollDocumentIntoView","offset","getVerticalOffsets","extraPart","clientHeight","top","scrollBy","bottom","element","docEl","documentElement","offsetTop","scrollY","offsetHeight","enableModals","lastFocusedElement","buttonArea","controlsOpenButton","createOpenButton","targetModal","modal","title","toLowerCase","openModal","body","closeOnEscape","trapTabKey","closeOnBackground","moveFocusToModal","getFocusableElements","focus","closeModal","tabable","filter","tabIndex","ancestor","focusableElementsSelector","SlidehubPlugin","description","new","enabled","toggleButton","TypeError","enable","prototype","disable","createToggleButton","handleToggleButton","fieldset","toggleButtonMarkup","button","isPressed","getAttribute","String","triggerButtonAction","stateAttr","hasAttribute","DocumentSourceLinker","boundEnterHandler","enterHandler","boundDoubleClickHandler","doubleClickHandler","openInNewTab","ctrlKey","handleOpenIntent","isInteractive","openDocumentSource","itemIndex","page","fragment","itemSource","docSource","open","location","href","tag","tagName","potentiallyInteractive","disabled","offsetParent","PageWidgetPlugin","boundExposeItemCount","exposeItemCount","boundExposeCurrentItem","exposeCurrentItem","widgetHookNode","currentPageNode","totalPagesNode","insertWidgetMarkup","removeWidgetMarkup","widgetNode","firstElementChild","lastElementChild","textContent","lastChild","removeChild","detail","getOuterWidth","getComputedStyle","marginLeft","parseInt","marginRight","offsetWidth","getFragmentIdentifier","url","hashPosition","indexOf","substring","Slidehub","plugin","_documents","_selectedDocument","_hoveredDocument","_documentNavigator","_itemWidth","_visibleItems","_scrollboxWidth","getNode","getDocuments","documentLoader","staticContent","insertDocumentFrames","determineTargetDocument","start","jumpToTargetDocument","loadPlugins","existingNode","slidehubNode","createNode","selectColor","highlightColor","createElement","appendChild","fragmentIdentifier","scrollTop","slidehubWidth","clientWidth","centerDocument","centerOffset","exposeDocumentInfo","imageLoader","mouseInteraction","observeDocumentLoaded","documentLoadedObserver","MutationObserver","mutationHandler","childList","mutationsList","mutation","addedNodes","slidehubSelectDocumentEvent","unhoverDocument","slidehubHoverDocumentEvent","exposeItemWidth","exposeScrollboxWidth","exposeNumberOfVisibleItems","itemOuterWidth","scrollboxWidth","floor","documentNavigator"],"mappings":"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","file":"app.1d2eb26e.map","sourceRoot":"src","sourcesContent":["/**\n * @typedef {object} Config\n * @property {ConfigPropertyAssets} assets\n * @property {boolean} staticContent\n * @property {boolean} metaSlide\n * @property {boolean} keepSelectedPageInFirstColumn\n * @property {boolean} preserveAspectRatio\n * @property {string|null} selectColor\n * @property {string|null} highlightColor\n * @property {ConfigPropertySelector} selector\n *\n * @typedef {object} ConfigPropertyAssets\n * @property {string} documents\n * @property {string} images\n *\n * @typedef {object} ConfigPropertySelector\n * @property {string} slidehub\n * @property {string} doc\n * @property {string} scrollbox\n * @property {string} itemContainer\n * @property {string} item\n */\n\n/**\n * Global configuration object.\n *\n * @type {Config}\n */\nconst config = {\n  // Location of the data directory containing PDF/PNG assets\n  assets: {\n    documents: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data',\n    images: 'https://www.uni-weimar.de/medien/webis/tmp/slides/data'\n  },\n\n  // If set to true, it is assumed that the document markup is already present.\n  staticContent: false,\n\n  // Create a meta slide for each document?\n  metaSlide: true,\n\n  // Allows navigating pages so that the last page can be placed in the first\n  // column of a document container.\n  keepSelectedPageInFirstColumn: true,\n\n  // Preserve aspect ratio of document items?\n  preserveAspectRatio: false,\n\n  // Overrides the default select color.\n  // Takes string values that represent a valid CSS color value; for example:\n  // 'transparent', 'Highlight', 'tomato', '#f90', 'hsl(220, 50%, 40%)'\n  // Setting `null` uses the default color.\n  selectColor: null,\n\n  // Overrides the default highlight color.\n  highlightColor: null,\n\n  // Selectors for UI components\n  selector: {\n    slidehub: '.slidehub-container',\n    doc: '.doc',\n    scrollbox: '.doc-scrollbox',\n    itemContainer: '.page-container',\n    item: '.page'\n  }\n};\n\nexport { config };\n","/** @type {Array<[string, number]>} */\nconst documentsData = [\n  ['acrostic-talk.pdf', 100],\n  ['argumentation-cross-domain-talk.pdf', 9],\n  ['cicling14-talk.pdf', 14],\n  ['cikm13-talk.pdf', 19],\n  ['eurovis15-plagvis-talk.pdf', 63],\n  ['ijcnlp13-talk.pdf', 13],\n  ['jufo13-talk.pdf', 22],\n  ['leipzig-colloquium15-talk.pdf', 118],\n  ['netspeak-talk.pdf', 45],\n  ['ral15-picapica-talk.pdf', 82],\n  ['republica17-clickbait-talk.pdf', 14],\n  ['ukj16-picapica-talk.pdf', 46],\n  ['webquality12-talk.pdf', 41],\n  ['potthast_2011b.pdf', 61],\n  ['potthast_2012a.pdf', 28],\n  ['potthast_2016c.pdf', 88],\n  ['stein_2005b.pdf', 24],\n  ['stein_2006j.pdf', 33],\n  ['stein_2006l.pdf', 20],\n  ['stein_2007b.pdf', 43],\n  ['stein_2007d.pdf', 21],\n  ['stein_2007m.pdf', 24],\n  ['stein_2008b.pdf', 7],\n  ['stein_2008d.pdf', 20],\n  ['stein_2008j.pdf', 64],\n  ['stein_2009e.pdf', 31],\n  ['stein_2010h.pdf', 55],\n  ['stein_2010r.pdf', 10],\n  ['stein_2010t.pdf', 27],\n  ['stein_2010u.pdf', 25],\n  ['stein_2011e.pdf', 39],\n  ['stein_2011f.pdf', 20],\n  ['stein_2011h.pdf', 36],\n  ['stein_2011j.pdf', 51],\n  ['stein_2011k.pdf', 76],\n  ['stein_2011l.pdf', 64],\n  ['stein_2011q.pdf', 30],\n  ['stein_2011t.pdf', 24],\n  ['stein_2011u.pdf', 16],\n  ['stein_2012c.pdf', 34],\n  ['stein_2012m.pdf', 13],\n  ['stein_2012o.pdf', 34],\n  ['stein_2012q.pdf', 46],\n  ['stein_2012t.pdf', 26],\n  ['stein_2012u.pdf', 24],\n  ['stein_2012w.pdf', 20],\n  ['stein_2013a.pdf', 15],\n  ['stein_2013b.pdf', 47],\n  ['stein_2013f.pdf', 52],\n  ['stein_2013g.pdf', 17],\n  ['stein_2013h.pdf', 29],\n  ['stein_2014b.pdf', 14],\n  ['stein_2014f.pdf', 24],\n  ['stein_2014j.pdf', 31],\n  ['stein_2014k.pdf', 27],\n  ['stein_2015b.pdf', 35],\n  ['stein_2015c.pdf', 47],\n  ['stein_2015n.pdf', 13],\n  ['stein_2015o.pdf', 48],\n  ['stein_2016a.pdf', 36],\n  ['stein_2016b.pdf', 2],\n  ['stein_2016c.pdf', 34],\n  ['stein_2016d.pdf', 49],\n  ['stein_2016i.pdf', 11],\n  ['stein_2016j.pdf', 26],\n  ['stein_2016k.pdf', 44],\n  ['stein_2016l.pdf', 31],\n  ['stein_2016m.pdf', 67],\n  ['stein_2016o.pdf', 63],\n  ['stein_2017a.pdf', 17],\n  ['stein_2017b.pdf', 10],\n  ['stein_2017c.pdf', 11],\n  ['unit-de-client-technologies1.pdf', 87],\n  ['unit-de-client-technologies2.pdf', 45],\n  ['unit-de-conceptual-design1.pdf', 31],\n  ['unit-de-conceptual-design2.pdf', 52],\n  // [\"unit-de-conceptual-design3.pdf\", 1],\n  ['unit-de-configuration-basics.pdf', 34],\n  ['unit-de-constraints-fd1.pdf', 43],\n  ['unit-de-constraints-fd2.pdf', 50],\n  ['unit-de-constraints-ifd.pdf', 18],\n  ['unit-de-constraints-introduction.pdf', 34],\n  ['unit-de-db-introduction.pdf', 50],\n  ['unit-de-db-organization.pdf', 9],\n  ['unit-de-design-and-models.pdf', 28],\n  ['unit-de-diagnosis-bayes.pdf', 28],\n  ['unit-de-diagnosis-cbr.pdf', 35],\n  ['unit-de-diagnosis-dempster.pdf', 34],\n  ['unit-de-doclang-css.pdf', 35],\n  ['unit-de-doclang-html.pdf', 53],\n  ['unit-de-doclang-introduction.pdf', 30],\n  ['unit-de-doclang-xml-api.pdf', 77],\n  ['unit-de-doclang-xml-basics.pdf', 74],\n  ['unit-de-doclang-xml-schema.pdf', 92],\n  ['unit-de-doclang-xml-xsl.pdf', 115],\n  ['unit-de-ensemble-classifiers.pdf', 32],\n  ['unit-de-fuzzy-basics.pdf', 44],\n  ['unit-de-fuzzy-inference.pdf', 29],\n  ['unit-de-index-terms.pdf', 20],\n  ['unit-de-ir-evaluation.pdf', 19],\n  ['unit-de-ir-introduction.pdf', 25],\n  ['unit-de-ir-organization.pdf', 6],\n  ['unit-de-kbs-applications.pdf', 31],\n  ['unit-de-kbs-introduction.pdf', 28],\n  ['unit-de-kbs-organization.pdf', 7],\n  ['unit-de-logics-algebra.pdf', 3],\n  ['unit-de-logics-organization.pdf', 5],\n  ['unit-de-model-formation.pdf', 14],\n  ['unit-de-model-system.pdf', 18],\n  ['unit-de-network-protocol1.pdf', 44],\n  ['unit-de-network-protocol2.pdf', 38],\n  ['unit-de-network-protocol3.pdf', 53],\n  ['unit-de-non-monotonicity.pdf', 21],\n  ['unit-de-planning-algorithms.pdf', 56],\n  ['unit-de-planning-basics.pdf', 40],\n  ['unit-de-predicate-basics.pdf', 36],\n  ['unit-de-predicate-complexity.pdf', 6],\n  ['unit-de-predicate-sat-syntactical.pdf', 27],\n  ['unit-de-predicate-transformation.pdf', 23],\n  ['unit-de-propositional-basics.pdf', 58],\n  ['unit-de-propositional-complexity.pdf', 18],\n  ['unit-de-propositional-sat-semantical.pdf', 22],\n  ['unit-de-propositional-sat-syntactical.pdf', 56],\n  ['unit-de-propositional-transformation.pdf', 33],\n  ['unit-de-psk.pdf', 12],\n  ['unit-de-relational-algebra.pdf', 67],\n  ['unit-de-relational-calculus.pdf', 85],\n  // [\"unit-de-relational-design0.pdf\", 1],\n  ['unit-de-relational-design1.pdf', 43],\n  ['unit-de-relational-design2.pdf', 62],\n  ['unit-de-relational-theory1.pdf', 71],\n  ['unit-de-relational-theory2.pdf', 50],\n  ['unit-de-retrieval-models.pdf', 18],\n  ['unit-de-rm-algebraic.pdf', 45],\n  ['unit-de-rm-term-based.pdf', 24],\n  ['unit-de-rule-systems-inference.pdf', 39],\n  ['unit-de-rule-systems-not.pdf', 20],\n  ['unit-de-rule-systems.pdf', 58],\n  ['unit-de-self-organizing-maps.pdf', 30],\n  ['unit-de-semantic-web-introduction.pdf', 30],\n  ['unit-de-semantic-web-ontology.pdf', 72],\n  ['unit-de-semantic-web-rdf.pdf', 79],\n  ['unit-de-semantic-web-rdfsem.pdf', 27],\n  ['unit-de-semantic-web-rdfs.pdf', 32],\n  ['unit-de-server-technologies1.pdf', 63],\n  ['unit-de-server-technologies2.pdf', 84],\n  ['unit-de-sql1.pdf', 96],\n  ['unit-de-sql2.pdf', 38],\n  ['unit-de-sql3.pdf', 16],\n  ['unit-de-stemming.pdf', 12],\n  ['unit-de-symbol.pdf', 32],\n  ['unit-de-verification1.pdf', 46],\n  ['unit-de-verification2.pdf', 132],\n  ['unit-de-verification3.pdf', 32],\n  ['unit-de-verification.pdf', 210],\n  ['unit-de-webis-architectures1.pdf', 35],\n  ['unit-de-webis-architectures2.pdf', 17],\n  ['unit-de-wt-introduction.pdf', 57],\n  ['unit-de-wt-organization.pdf', 7],\n  ['unit-de-xps.pdf', 26],\n  ['unit-en-association-analysis.pdf', 2],\n  ['unit-en-astar-formal1.pdf', 63],\n  ['unit-en-astar-formal2.pdf', 65],\n  ['unit-en-astar-relaxed1.pdf', 42],\n  ['unit-en-astar-relaxed2.pdf', 32],\n  ['unit-en-basic-search1.pdf', 68],\n  ['unit-en-basic-search2.pdf', 38],\n  ['unit-en-bayesian-learning.pdf', 23],\n  ['unit-en-cluster-analysis-basics.pdf', 21],\n  ['unit-en-cluster-analysis-constrained.pdf', 38],\n  ['unit-en-cluster-analysis-density.pdf', 59],\n  ['unit-en-cluster-analysis-evaluation.pdf', 72],\n  ['unit-en-cluster-analysis-hierarchical.pdf', 85],\n  ['unit-en-cluster-analysis-iterative.pdf', 26],\n  ['unit-en-concept-learning.pdf', 53],\n  ['unit-en-data.pdf', 27],\n  ['unit-en-decision-trees-algorithms.pdf', 26],\n  ['unit-en-decision-trees-basics.pdf', 32],\n  ['unit-en-decision-trees-impurity.pdf', 33],\n  ['unit-en-decision-trees-pruning.pdf', 20],\n  ['unit-en-diagnosis-gde.pdf', 56],\n  ['unit-en-diagnosis-tms.pdf', 38],\n  ['unit-en-dm-overview.pdf', 10],\n  ['unit-en-game-playing-basics.pdf', 41],\n  ['unit-en-informed-bf1.pdf', 102],\n  ['unit-en-informed-bf2.pdf', 117],\n  ['unit-en-informed-bf3.pdf', 21],\n  ['unit-en-ml-introduction.pdf', 33],\n  ['unit-en-ml-organization.pdf', 8],\n  ['unit-en-multilayer-perceptron.pdf', 22],\n  ['unit-en-perceptron-learning.pdf', 59],\n  ['unit-en-performance-measures.pdf', 21],\n  ['unit-en-probability-basics.pdf', 20],\n  // [\"unit-en-radial-basis-functions.pdf\", 1],\n  ['unit-en-regression.pdf', 44],\n  ['unit-en-relaxed-models.pdf', 24],\n  ['unit-en-representation1.pdf', 34],\n  ['unit-en-representation2.pdf', 52],\n  ['unit-en-rule-mining.pdf', 2],\n  ['unit-en-search-introduction.pdf', 36],\n  ['unit-en-search-organization.pdf', 4]\n];\n\nexport { documentsData };\n","/**\n * A reverse-iterable map implementation based on the built-in [`Map`][Map] object.\n *\n * It exposes its order via iterable iterators which can be used for both forwards and backwards\n * iteration. As per `Map`, the order of a `ReverseIterableMap` is the insertion order.\n *\n * [Map]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n *\n * @typedef {class} ReverseIterableMapType\n * @template K, V\n * @property {Map<K, V>} _map\n * @property {ReverseIterableMapNode} _first\n * @property {ReverseIterableMapNode} _last\n *\n * @type {ReverseIterableMapType}\n */\nclass ReverseIterableMap {\n  /**\n   * An [iterable][iterable] object whose elements are key-value pairs.\n   *\n   * [iterable]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol\n   *\n   * @param {Iterable?} iterable\n   * @public\n   */\n  constructor(iterable = null) {\n    this._map = new Map();\n    this._first = null;\n    this._last = null;\n\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.set(key, value);\n      }\n    }\n  }\n\n  /**\n   * The [`@@toStringTag`][toStr] property is used is used when `toString()` is called on a\n   * `ReverseIterableMap` object.\n   *\n   * [toStr]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@toStringTag\n   *\n   * @returns {string} The string tag of the `ReverseIterableMap` class.\n   * @public\n   */\n  get [Symbol.toStringTag]() {\n    return 'ReverseIterableMap';\n  }\n\n  /**\n   * Returns the first `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get first() {\n    return this._first;\n  }\n\n  /**\n   * Sets the first `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set first(node) {\n    this._first = node;\n  }\n\n  /**\n   * Returns the last `ReverseIterableMapNode` from a `ReverseIterableMap` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  get last() {\n    return this._last;\n  }\n\n  /**\n   * Sets the last `ReverseIterableMapNode` of a `ReverseIterableMap` object.\n   *\n   * @param {ReverseIterableMapNode} node The `ReverseIterableMapNode` object.\n   * @private\n   */\n  set last(node) {\n    this._last = node;\n  }\n\n  /**\n   * The `size` accessor property returns the number of elements in a `ReverseIterableMap` object.\n   * Calls [`Map.prototype.size`][size].\n   *\n   * [size]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\n   *\n   * @returns {number} The size of the ReverseIterableMap.\n   * @public\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * The `clear()` method removes all elements from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.clear`][clear].\n   *\n   * [clear]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\n   *\n   * @public\n   */\n  clear() {\n    this._map.clear();\n    this._first = null;\n    this._last = null;\n  }\n\n  /**\n   * The `has()` method returns a boolean indicating whether an element with the specified key\n   * exists or not. Calls [`Map.prototype.has`][has].\n   *\n   * [has]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\n   *\n   * @param {*} key\n   * @returns {boolean} `true` if an element with the specified key exists in a\n   * `ReverseIterableMap` object; otherwise `false`.\n   * @public\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * The `get()` method returns a specified element from a `ReverseIterableMap` object. Calls\n   * [`Map.prototype.get`][get].\n   *\n   * [get]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\n   *\n   * @param {*} key\n   * @returns {*|undefined}\n   * @public\n   */\n  get(key) {\n    return this._map.get(key).value;\n  }\n\n  /**\n   * The `getLast()` method returns the last element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The last element or `null` if the map is empty.\n   * @public\n   */\n  getLast() {\n    if (this.last) {\n      return this.last.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `getFirst()` method returns the first element from a `ReverseIterableMap` object.\n   *\n   * @returns {*|null} The first element or `null` if the map is empty.\n   * @public\n   */\n  getFirst() {\n    if (this.first) {\n      return this.first.value;\n    }\n\n    return null;\n  }\n\n  /**\n   * The `add()` method adds a new element to the internal `Map` object. It does not link itself\n   * with its neighboring elements which is why this method must never be called directly.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @private\n   */\n  add(key, value) {\n    let node = this._map.get(key);\n\n    if (node) {\n      node.value = value;\n    } else {\n      node = new ReverseIterableMapNode(key, value);\n\n      this._map.set(key, node);\n    }\n\n    return node;\n  }\n\n  /**\n   * The `set()` method adds a new element to a `ReverseIterableMap` object in insertion order or\n   * updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  set(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.prev = this.last;\n      this.last.next = node;\n      this.last = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `setFront()` method adds a new element to a `ReverseIterableMap` object in\n   * reverse insertion order or updates the value of an existing element.\n   *\n   * @param {*} key The key of the element to add to the `ReverseIterableMap` object.\n   * @param {*} value The value of the element to add to the `ReverseIterableMap` object.\n   * @returns {ReverseIterableMap} The `ReverseIterableMap` object.\n   * @public\n   */\n  setFirst(key, value) {\n    const node = this.add(key, value);\n\n    if (this.first === null && this.last === null) {\n      this.first = node;\n      this.last = node;\n    } else {\n      node.next = this.first;\n      this.first.prev = node;\n      this.first = node;\n    }\n\n    return this;\n  }\n\n  /**\n   * The `delete()` method removes the specified element from a\n   * `ReverseIterableMap` object. Calls [`Map.prototype.delete`][del].\n   *\n   * [del]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\n   *\n   * @param {*} key The key of the element to remove from the\n   * `ReverseIterableMap` object.\n   * @returns {boolean} `true` if an element in the `ReverseIterableMap` object\n   * existed and has been removed, or `false` if the element does not exist.\n   * @public\n   */\n  delete(key) {\n    if (this.has(key)) {\n      const node = this._map.get(key);\n\n      if (this.first === this.last) {\n        this.first = null;\n        this.last = null;\n      } else if (this.first === node) {\n        node.next.prev = null;\n        this.first = node.next;\n      } else if (this.last === node) {\n        node.prev.next = null;\n        this.last = node.prev;\n      } else {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n      }\n\n      this._map.delete(key);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * The `forEach()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in insertion order. For reference, see\n   * [`Map.prototype.forEach`][fe].\n   *\n   * [fe]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEach(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The `forEachReverse()` method executes a provided function once per each key/value pair in the\n   * `ReverseIterableMap` object, in reverse insertion order.\n   *\n   * @param {function} callback\n   * @param {*?} thisArg\n   * @public\n   */\n  forEachReverse(callback, thisArg = undefined) {\n    for (const [key, value] of this.entries().reverse()) {\n      callback(value, key, thisArg);\n    }\n  }\n\n  /**\n   * The initial value of the @@iterator property is the same function object as the initial value\n   * of the entries property.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  /**\n   * Allows usage of the [iteration protocols][ip] for reverse iteration.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * Examples:\n   *\n   * ```js\n   * const map = new ReverseIterableMap();\n   *\n   * [...map.reverse()];\n   *\n   * for (const [key, value] of map.reverse()) {\n   *   console.log(key, value);\n   * }\n   * ```\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  reverse() {\n    return this.entries().reverse();\n  }\n\n  /**\n   * The `entries()` method returns a new [Iterator][it] object that contains the `[key, value]`\n   * pairs for each element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  entries() {\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `keys()` method returns a new [Iterator][it] object that contains the keys for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  keys() {\n    const getIteratorValue = function(node) {\n      return node.key;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `values()` method returns a new [Iterator][it] object that contains the values for each\n   * element in a `ReverseIterableMap` object in insertion order.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @returns {IterableIterator}\n   * @public\n   */\n  values() {\n    const getIteratorValue = function(node) {\n      return node.value;\n    };\n\n    return this.iterableIterator(getIteratorValue);\n  }\n\n  /**\n   * The `iteratorFor()` method returns a new [Iterator][it] object that contains the\n   * `[key, value]` pairs for each element in a `ReverseIterableMap` object in insertion order\n   *  **starting with the pair specified by the `key` parameter**.\n   *\n   * [it]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterators\n   *\n   * @param {*} key The key of the element to start iterating from.\n   * @returns {IterableIterator}\n   * @public\n   */\n  iteratorFor(key) {\n    let startNode = this._map.get(key);\n    const getIteratorValue = function(node) {\n      return [node.key, node.value];\n    };\n\n    return this.iterableIterator(getIteratorValue, startNode);\n  }\n\n  /**\n   * Returns an object which is both an iterable and an iterator. It fulfills the requirements of\n   * the [iteration protocols][ip] plus allowing reverse-iteration.\n   *\n   * - **Iterator requirements**: An object that implements a function `next`. This function\n   *   returns an object with two properties: `value` and `done`.\n   *\n   * - **Iterable requirements**: An object that implements a function `[Symbol.iterator]()`. This\n   *   function returns an iterator.\n   *\n   * - **Reverse-iterable requirements**: An object that implements a function `reverse()`. This\n   *   function returns an iterator with the special behavior of iterating in reverse insertion\n   *   order. This is non-standard behavior.\n   *\n   * [ip]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n   *\n   * @param {function} getIteratorValue\n   * @param {ReverseIterableMapNode?} startNode\n   * @returns {IterableIterator}\n   * @private\n   */\n  iterableIterator(getIteratorValue, startNode = undefined) {\n    let currentNode = startNode ? startNode : this.first;\n    // Store the this.last node as inside the reverse() method, `this` will be\n    // bound to iterableIterator, not ReverseIterableMap. That’s on purpose.\n    const last = this.last;\n    let nextProp = 'next';\n\n    return {\n      reverse() {\n        currentNode = startNode ? startNode : last;\n        nextProp = 'prev';\n        return this;\n      },\n      [Symbol.iterator]() {\n        // Return the iterable itself.\n        return this;\n      },\n      next: function() {\n        let value;\n        if (currentNode) {\n          value = getIteratorValue(currentNode);\n          currentNode = currentNode[nextProp];\n        }\n        return iteratorResult(value);\n      }\n    };\n  }\n}\n\n/**\n * The `ReverseIterableMapNode` object represents an element in a `ReverseIterableMap` object.\n * Its main purpose is storing a `[key, value]` pair. Additionally, it keeps references to the\n * `ReverseIterableMapNode` objects appearing before and after itself in a `ReverseIterableMap`\n * object.\n *\n * @typedef {class} ReverseIterableMapNodeType\n * @template K, V\n * @property {K} _key\n * @property {V} _value\n * @property {ReverseIterableMapNode} _prev\n * @property {ReverseIterableMapNode} _next\n *\n * @type {ReverseIterableMapNodeType}\n * @protected\n */\nclass ReverseIterableMapNode {\n  /**\n   * A `[key, value]` pair that is part of a `ReverseIterableMap` object.\n   *\n   * @template K, V\n   * @param {K} key\n   * @param {V} value\n   */\n  constructor(key, value) {\n    this._key = key;\n    this._value = value;\n    this._next = null;\n    this._prev = null;\n  }\n\n  /**\n   * Returns the key from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The key.\n   * @protected\n   */\n  get key() {\n    return this._key;\n  }\n\n  /**\n   * Returns the value from a `ReverseIterableMapNode` object.\n   *\n   * @returns {*} The value.\n   * @protected\n   */\n  get value() {\n    return this._value;\n  }\n\n  /**\n   * Sets the value of a `ReverseIterableMapNode` object.\n   *\n   * @param {*} value The value.\n   * @protected\n   */\n  set value(value) {\n    this._value = value;\n  }\n\n  /**\n   * Returns the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * Sets the reference to the next node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} next The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set next(next) {\n    this._next = next;\n  }\n\n  /**\n   * Returns the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @returns {ReverseIterableMapNode} The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  get prev() {\n    return this._prev;\n  }\n\n  /**\n   * Sets the reference to the previous node of a `ReverseIterableMapNode` object.\n   *\n   * @param {ReverseIterableMapNode} prev The `ReverseIterableMapNode` object.\n   * @protected\n   */\n  set prev(prev) {\n    this._prev = prev;\n  }\n}\n\n/**\n * Returns an `IteratorResult` object as per the following rules:\n * - If `value` is not `undefined`, `done` is `false`.\n * - If `value` is `undefined`, `done` is `true`. In this case, `value` may be omitted.\n *\n * This function does not belong to `ReverseIterableMap` as it doesn’t need access to any\n * of its properties.\n *\n * @param {*|undefined} value\n * @returns {IteratorResult}\n */\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: value === undefined\n  };\n}\n\nexport { ReverseIterableMap };\n","/**\n * Clamps the given value between the min and max boundaries.\n *\n * @param {Number} value\n * @param {Number} min\n * @param {Number} max\n * @returns {Number} - `value` if `min <= value <= max`\n *                   - `min` if `value < min`\n *                   - `max` if `value > max`\n */\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\nexport { clamp };\n","import { config } from '../config.mjs';\nimport { clamp } from '../util/clamp.mjs';\n\n/**\n * Item Navigator\n *\n * **Usage**:\n *\n * ```\n * const navigateItem = new ItemNavigator(slidehub, doc);\n * navigateItem.by(3);\n * ```\n */\nclass ItemNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  constructor(slidehub, doc) {\n    this.slidehub = slidehub;\n    this._doc = doc;\n    this._itemPos = 0;\n    this._selectedItemPos = 0;\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  left(distance) {\n    this.by(-distance);\n  }\n\n  /**\n   * Navigate item down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  right(distance) {\n    this.by(distance);\n  }\n\n  /**\n   * Main interface for item navigation. The algorithm works like this:\n   *\n   * 1. Determine the new position of the selected item.\n   *\n   *    1.1. If the new position is different than the current position, update it.\n   *\n   * 2. If the current item position is not aligned properly (i.e. is not an integer),\n   *    its position will be rounded to the next closest integer position.\n   *\n   * 3. If the `keepSelectedPageInFirstColumn` option is turned on\n   *    and all items are visible within their document, return.\n   *\n   * 4. Determine the new position of the item.\n   *\n   *    4.1. If the new position is the same as the current position, return.\n   *\n   *    4.2. Update the item position with the new value.\n   *\n   * @param {Number} vector\n   * @private\n   */\n  by(vector) {\n    const newSelectedItemPos = this.determineNewSelectedItemPos(vector);\n    if (newSelectedItemPos !== this.selectedItemPos) {\n      this.updateSelectedItemPos(newSelectedItemPos);\n    }\n\n    // If the current item position is not properly aligned …\n    if (!Number.isInteger(this.itemPos)) {\n      this.updateItemPos(Math.round(this.itemPos));\n    }\n\n    // If all items are already visible, we’re done here.\n    if (!config.keepSelectedPageInFirstColumn && this.allItemsVisible()) {\n      return;\n    }\n\n    const newItemPos = this.determineNewItemPos(vector);\n\n    // Nothing to do, current position is already the destination.\n    if (newItemPos === this.itemPos) {\n      return;\n    }\n\n    this.updateItemPos(newItemPos);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   * @public\n   */\n  get doc() {\n    return this._doc;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemPos() {\n    return this._itemPos;\n  }\n\n  /**\n   * @param {Number} itemPos\n   * @private\n   */\n  set itemPos(itemPos) {\n    this._itemPos = itemPos;\n  }\n\n  /**\n   * Updates the position of the item.\n   *\n   * @param {Number} newItemPos\n   * @private\n   */\n  updateItemPos(newItemPos) {\n    this.itemPos = newItemPos;\n    this.doc.scrollboxNode.scrollLeft = newItemPos * this.slidehub.itemWidth;\n  }\n\n  /**\n   * Determines the new position of the item based on a direction vector.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewItemPos(vector) {\n    const newItemPos = this.itemPos + vector;\n    const visibleItems = this.slidehub.visibleItems;\n\n    // For certain settings, some item positions don’t need to accessible because they are already\n    // visible\n    const invalidItemPositions = config.keepSelectedPageInFirstColumn ? 0 : visibleItems - 1;\n    const maxPos = this.doc.itemCount() - invalidItemPositions;\n\n    return clamp(newItemPos, 0, maxPos);\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get selectedItemPos() {\n    return this._selectedItemPos;\n  }\n\n  /**\n   * @param {Number} selectedItemPos\n   * @private\n   */\n  set selectedItemPos(selectedItemPos) {\n    this._selectedItemPos = selectedItemPos;\n  }\n\n  /**\n   * Updates the position of the selected item.\n   *\n   * @param {Number} newSelectedItemPos\n   * @private\n   */\n  updateSelectedItemPos(newSelectedItemPos) {\n    this.selectedItemPos = newSelectedItemPos;\n    this.doc.selectItem(this.doc.items.item(newSelectedItemPos));\n  }\n\n  /**\n   * Determines the new position of the selected item based on `distance`.\n   *\n   * @param {Number} vector\n   * @returns {Number}\n   * @private\n   */\n  determineNewSelectedItemPos(vector) {\n    const newSelectedItemPos = this.selectedItemPos + vector;\n    return clamp(newSelectedItemPos, 0, this.doc.itemCount());\n  }\n\n  /**\n   * Tests whether a document’s items are all visible.\n   *\n   * @returns {boolean}\n   * @private\n   */\n  allItemsVisible() {\n    return this.doc.itemCount < this.slidehub.numberOfVisibleItems;\n  }\n};\n\nexport { ItemNavigator };\n","import { config } from '../config.mjs';\nimport { ItemNavigator } from './ItemNavigator.mjs';\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Slidehub Document\n */\nclass SlidehubDocument {\n  /**\n   * @param {String} name\n   * @param {Number} imageCount\n   */\n  constructor(slidehub, name, imageCount) {\n    this.slidehub = slidehub;\n\n    this._name = name;\n    this._imageCount = imageCount;\n    this._loaded = false;\n\n    this._node = null;\n    this._scrollboxNode = null;\n    this._items = null;\n    this._selectedItemNode = null;\n    this._hoveredItemNode = null;\n    this._itemNavigator = null;\n  }\n\n  /**\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  get imageCount() {\n    return this._imageCount;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  get loaded() {\n    return this._loaded;\n  }\n\n  /**\n   * @param {Boolean} loaded\n   */\n  set loaded(loaded) {\n    this._loaded = loaded;\n  }\n\n  get node() {\n    return this._node;\n  }\n\n  set node(node) {\n    this._node = node;\n  }\n\n  get scrollboxNode() {\n    return this._scrollboxNode;\n  }\n\n  get items() {\n    return this._items;\n  }\n\n  /**\n   * @returns {Number}\n   */\n  itemCount() {\n    return this.items.length - 1;\n  }\n\n  get selectedItemNode() {\n    return this._selectedItemNode;\n  }\n\n  set selectedItemNode(item) {\n    this._selectedItemNode = item;\n  }\n\n  /**\n   * Sets a new selected item.\n   *\n   * @param {Element} itemNode\n   */\n  selectItem(itemNode) {\n    if (this.selectedItemNode === itemNode) {\n      return;\n    }\n\n    const itemContainer = itemNode.parentElement;\n    if (this.selectedItemNode && itemContainer.contains(this.selectedItemNode)) {\n      this.selectedItemNode.classList.remove(selectClassName);\n    }\n\n    this.selectedItemNode = itemNode;\n    this.selectedItemNode.classList.add(selectClassName);\n\n    const slidehubSelectItemEvent = new CustomEvent('SlidehubSelectItem', {\n      bubbles: true,\n      detail: { itemNode }\n    });\n    this.node.dispatchEvent(slidehubSelectItemEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  get hoveredItemNode() {\n    return this._hoveredItemNode;\n  }\n\n  set hoveredItemNode(item) {\n    this._hoveredItemNode = item;\n  }\n\n  /**\n   * Sets a new hovered item.\n   *\n   * @param {Element} itemNode\n   */\n  hoverItem(itemNode) {\n    if (this.hoveredItemNode === itemNode) {\n      return;\n    }\n\n    this.unhoverItem();\n\n    this.hoveredItemNode = itemNode;\n    this.hoveredItemNode.classList.add(hoverClassName);\n\n    const slidehubHoverItemEvent = new CustomEvent('SlidehubHoverItem', {\n      bubbles: true,\n      detail: { itemNode }\n    });\n    this.node.dispatchEvent(slidehubHoverItemEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered item.\n   */\n  unhoverItem() {\n    if (this.hoveredItemNode) {\n      this.hoveredItemNode.classList.remove(hoverClassName);\n      this.hoveredItemNode = null;\n    }\n  }\n\n  get navigateItem() {\n    return this._itemNavigator;\n  }\n\n  load() {\n    const markup = this.createMarkup();\n    const docNode = document.getElementById(this.name);\n    docNode.insertAdjacentHTML('beforeend', markup);\n\n    this.setNode(docNode);\n\n    return docNode;\n  }\n\n  /**\n   * Creates the complete markup for a document under the following assumptions:\n   * - A file named `this.name` exists on the document assets path\n   * - The document’s item images are on the image assets path\n   *\n   * @returns {String}\n   */\n  createMarkup() {\n    const scrollboxClassName = config.selector.scrollbox.slice(1);\n    const itemContainerClassName = config.selector.itemContainer.slice(1);\n    const itemClassName = config.selector.item.slice(1);\n\n    let items = '';\n    for (var i = 0; i < this.imageCount; i++) {\n      const imageSource = `${config.assets.images}/${this.name}-${i}.png`;\n      items += `<div class=\"${itemClassName}\" data-page=\"${i + 1}\">\n        <img data-src=\"${imageSource}\" alt=\"page ${i + 1}\">\n      </div>`;\n    }\n\n    const documentSource = `${config.assets.documents}/${this.name}`;\n\n    const metaSlide = `<div class=\"${itemClassName} ${itemClassName}--text\" data-page=\"0\">\n      <div class=\"doc-meta\">\n        <h2 class=\"doc-meta__title\">\n          <a href=\"${documentSource}\">${this.name}</a>\n        </h2>\n        by author, ${this.imageCount} pages, 2018\n      </div>\n    </div>`;\n\n    const dummyPage = `<div\n      class=\"${itemClassName} dummy-page\"\n      aria-hidden=\"true\"\n      style=\"visibility: hidden;\"\n    ></div>`;\n\n    return `<div class=\"${scrollboxClassName}\">\n      <div class=\"${itemContainerClassName}\">\n        ${config.metaSlide ? metaSlide : ''}\n        ${items}\n        ${dummyPage}\n      </div>\n    </div>`;\n  }\n\n  /**\n   * @param {HTMLElement} node\n   */\n  setNode(node) {\n    this.node = node;\n    this._scrollboxNode = node.querySelector(config.selector.scrollbox);\n    this._items = node.querySelectorAll('[data-page]');\n    this._itemNavigator = new ItemNavigator(this.slidehub, this);\n\n    if (!this.slidehub.selectedDocument) {\n      this.slidehub.selectDocument(this);\n    }\n    this.selectItem(node.querySelector(config.selector.item));\n\n    this.loaded = true;\n  }\n};\n\nexport { SlidehubDocument };\n","/**\n * Parses the document data.\n */\n\nimport { config } from '../config.mjs';\nimport { documentsData } from '../documents-data.mjs';\nimport { ReverseIterableMap } from '../lib/reverse-iterable-map.mjs';\nimport { SlidehubDocument } from './SlidehubDocument.mjs';\n\n/**\n * Parses the initial document data into a more managable data structure.\n * The resulting structure keeps track of a documents’ loaded state.\n *\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsData(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  documentsData.forEach(([name, imageCount]) => {\n    const doc = new SlidehubDocument(slidehub, name, imageCount);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n\n/**\n * @param {Slidehub} slidehub\n * @returns {ReverseIterableMap}\n */\nfunction parseDocumentsMarkup(slidehub) {\n  const documents = new ReverseIterableMap();\n\n  const documentNodes = slidehub.node.querySelectorAll(config.selector.doc);\n  documentNodes.forEach(docNode => {\n    const imageCount = docNode.querySelectorAll('img').length - 1;\n    const doc = new SlidehubDocument(slidehub, docNode.id, imageCount);\n    doc.setNode(docNode);\n    documents.set(doc.name, doc);\n  });\n\n  return documents;\n}\n\nexport { parseDocumentsData, parseDocumentsMarkup };\n","import { config } from '../config.mjs';\n\n/**\n * Document Loader.\n *\n * Loads documents dynamically when needed.\n */\nclass SlidehubDocumentLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.batchSize = 5;\n    this.prevIterator = null;\n    this.nextIterator = null;\n    this.observer = new IntersectionObserver(this.documentObservationHandler.bind(this));\n  }\n\n  start(targetDoc) {\n    this.loadTargetDocument(targetDoc);\n\n    // Load one batch in both directions\n    this.loadBatch(this.nextIterator, 'beforeend', this.batchSize);\n    this.loadBatch(this.prevIterator, 'afterbegin', this.batchSize);\n  }\n\n  /**\n   * Prepares the DOM with empty frames for all documents.\n   *\n   * @public\n   */\n  insertDocumentFrames() {\n    let documentFramesMarkup = '';\n\n    for (const doc of this.slidehub.documents.values()) {\n      const documentSource = `${config.assets.documents}/${doc.name}`;\n      documentFramesMarkup += `<div\n        class=\"${config.selector.doc.slice(1)}\"\n        id=\"${doc.name}\"\n        data-doc-source=\"${documentSource}\"\n        style=\"--pages: ${doc.imageCount + (config.metaSlide ? 1 : 0)}\"\n      ></div>`;\n    }\n\n    this.slidehub.node.insertAdjacentHTML('beforeend', documentFramesMarkup);\n  }\n\n  /**\n   * Starts off the document loading process. Determines which document should be\n   * loaded and sets up two iterators. They will be used to load new documents\n   * when needed.\n   *\n   * @returns {SlidehubDocument}\n   */\n  loadTargetDocument(targetDoc) {\n    // Obtain two iterators as pointers for which documents need to be\n    // loaded next.\n    this.prevIterator = this.slidehub.documents.iteratorFor(targetDoc.name).reverse();\n    this.nextIterator = this.slidehub.documents.iteratorFor(targetDoc.name);\n\n    // The target document will be loaded next by retrieving the iterator result\n    // from nextIterator. Since prevIterator points to the same document, it\n    // needs to be advanced manually, so it can’t be used to load that document\n    // again.\n    this.prevIterator.next();\n\n    return this.loadDocument(this.nextIterator.next(), 'beforeend');\n  }\n\n  /**\n   * A wrapper for calling loadDocument multiple times.\n   *\n   * @param {IterableIterator} documentIterable\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @param {number} batchSize\n   */\n  loadBatch(documentIterable, insertPosition, batchSize) {\n    while (batchSize--) {\n      this.loadDocument(documentIterable.next(), insertPosition);\n    }\n  }\n\n  /**\n   * Loads a new document by creating and injecting the markup into the DOM.\n   * Once this is done, the document is marked as loaded.\n   *\n   * @param {IteratorResult} iteratorResult\n   * @param {'afterbegin'|'beforeend'} insertPosition\n   * @returns {SlidehubDocument}\n   */\n  loadDocument(iteratorResult, insertPosition) {\n    if (iteratorResult.done) {\n      return;\n    }\n\n    const doc = iteratorResult.value[1];\n    if (doc.loaded) {\n      console.warn(doc.name, 'was already loaded. Skipping.');\n      return;\n    }\n\n    doc.insertPosition = insertPosition;\n    if (doc.insertPosition === 'afterbegin') {\n      doc.iterator = this.prevIterator;\n    } else {\n      doc.iterator = this.nextIterator;\n    }\n\n    console.info(`Loading ${doc.name}.`);\n\n    doc.load();\n\n    this.observer.observe(doc.node);\n\n    return doc;\n  }\n\n  /**\n   * Handles lazy-loading documents.\n   *\n   * @param {Array<IntersectionObserverEntry>} entries\n   * @param {IntersectionObserver} observer\n   */\n  documentObservationHandler(entries, observer) {\n    for (const entry of entries) {\n      if (entry.isIntersecting) {\n        const doc = this.slidehub.documents.get(entry.target.id);\n        this.loadDocument(doc.iterator.next(), doc.insertPosition);\n\n        observer.unobserve(entry.target);\n      }\n    }\n  }\n};\n\nexport { SlidehubDocumentLoader };\n","import { config } from '../config.mjs';\n\n/**\n * Loads document images when needed (i.e. lazy-loading).\n */\nclass SlidehubImageLoader {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.imageObserver = null;\n\n    if ('IntersectionObserver' in window) {\n      const imageObserverOptions = {\n        root: slidehub.node,\n        rootMargin: '500px 1000px'\n      };\n\n      this.imageObserver = new IntersectionObserver(imageObservationHandler, imageObserverOptions);\n    }\n  }\n\n  start() {\n    if (this.imageObserver) {\n      this.observeExistingDocuments();\n    } else {\n      const images = Array.from(this.slidehub.node.querySelectorAll('img[data-src]'));\n      images.forEach(image => loadImage(image));\n    }\n  }\n\n  observeExistingDocuments() {\n    const documentNodes = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => this.startImageObserver(docNode));\n  }\n\n  /**\n   * Starts the image observer on all lazy-loading images.\n   *\n   * @param {HTMLElement} docNode\n   */\n  startImageObserver(docNode) {\n    const images = Array.from(docNode.querySelectorAll('img[data-src]'));\n    images.forEach(image => this.imageObserver.observe(image));\n  }\n};\n\n/**\n * Handles lazy-loading document images.\n *\n * @param {*} entries\n * @param {IntersectionObserver} observer\n */\nfunction imageObservationHandler(entries, observer) {\n  for (const entry of entries) {\n    if (entry.isIntersecting) {\n      loadImage(entry.target);\n      observer.unobserve(entry.target);\n    }\n  }\n}\n\n/**\n * Replaces the data-src attribute with the src attribute, causing the browser to load the image.\n *\n * @param {HTMLImageElement} image\n */\nfunction loadImage(image) {\n  if (!image.dataset.src) {\n    console.error('Couldn’t load image due to missing data-src attribute.', image);\n    return;\n  }\n\n  image.setAttribute('src', image.dataset.src);\n  image.removeAttribute('data-src');\n  image.addEventListener('load', () => handleItemImageLoaded(image));\n}\n\n/**\n * Plain wrapper for triggering certain actions once an image has loaded.\n *\n * @param {HTMLImageElement} image\n */\nfunction handleItemImageLoaded(image) {\n  if (config.preserveAspectRatio) {\n    setItemAspectRatio(image);\n  }\n}\n\n/**\n * Calculates the aspect ratio of an image and stores it in the DOM as a\n * custom CSS property.\n *\n * @param {HTMLImageElement} image\n */\nfunction setItemAspectRatio(image) {\n  const docNode = image.closest(config.selector.doc);\n\n  if (docNode && !docNode.style.cssText.includes('--page-aspect-ratio')) {\n    const aspectRatio = image.naturalWidth / image.naturalHeight;\n    docNode.style.setProperty('--page-aspect-ratio', aspectRatio.toString());\n  }\n}\n\nexport { SlidehubImageLoader };\n","/**\n * Feature detection for passive event listeners as per:\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: function () {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\n/**\n * @typedef {Object} AddEventListenerOptionsObject\n * @property {Boolean|AddEventListenerOptions} active\n * @property {Boolean|AddEventListenerOptions} passive\n */\n\n/**\n * Stores the third argument for `addEventListener` for both cases\n * @type {AddEventListenerOptionsObject}\n */\nconst listener = {\n  active: supportsPassive ? { passive: false } : false,\n  passive: supportsPassive ? { passive: true } : false\n};\n\nexport { listener };\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * @see https://davidwalsh.name/javascript-debounce-function\n * @param {Function} func\n * @param {Number} wait\n * @param {Boolean?} immediate\n * @returns {Function}\n */\nfunction debounce(func, wait, immediate = false) {\n  let timeout;\n\n  return function () {\n    const context = this, args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\nexport { debounce };\n","import { config } from '../config.mjs';\nimport { listener } from '../util/passive-event-listener.mjs';\nimport { debounce } from '../util/debounce.mjs';\n\nconst scrolling = {\n  vertical: {\n    delta: 'deltaY'\n  },\n  horizontal: {\n    delta: 'deltaX'\n  }\n};\n\n/**\n * Mouse Interaction.\n */\nclass SlidehubMouseInteraction {\n  constructor(slidehub) {\n    this.mouseX = window.innerWidth / 2;\n    this.mouseY = window.innerHeight / 2;\n    this.slidehub = slidehub;\n  }\n\n  start() {\n    this.initStoreMousePosition();\n    this.initHoverDocumentOnScroll();\n    this.initExistingDocuments();\n    this.initModifiers();\n  }\n\n  /**\n   * Whenever the mouse moves, store its position.\n   */\n  initStoreMousePosition() {\n    document.addEventListener('mousemove', this.storeMousePosition.bind(this), listener.passive);\n  }\n\n  /**\n   * The firing rate of the listener needs to be slowed down because the\n   * `scroll` event is rapidly firing. Not doing so will decrease the\n   * performance significantly.\n   *\n   * It’s sufficient to debounce the listener. This means the listener will\n   * be triggered **once** after the event has stopped firing.\n   */\n  initHoverDocumentOnScroll() {\n    document.addEventListener(\n      'scroll',\n      debounce(this.handleScrollDocumentHover.bind(this), 25),\n      listener.passive\n    );\n  }\n\n  /**\n   * Initialize mouse and scroll interactions for existing documents.\n   */\n  initExistingDocuments() {\n    const documents = Array.from(this.slidehub.node.querySelectorAll(config.selector.doc));\n    documents.forEach(docNode => {\n      this.initMouseInteraction(docNode);\n      const scrollbox = docNode.querySelector(config.selector.scrollbox);\n      if (scrollbox) {\n        this.initScrollInteraction(scrollbox);\n      }\n    });\n  }\n\n  /**\n   * Wrapper for initializing all event listeners related to mouse interaction.\n   *\n   * @param {HTMLElement} docNode\n   */\n  initMouseInteraction(docNode) {\n    docNode.addEventListener('wheel', this.handleWheelInteraction.bind(this), listener.active);\n    docNode.addEventListener('click', this.handleClickSelect.bind(this), listener.passive);\n    docNode.addEventListener('mousemove', this.handleMoveHover.bind(this), listener.passive);\n  }\n\n  /**\n   * Wrapper for initializing all event listeners related to scroll interaction.\n   *\n   * @param {HTMLElement} scrollboxNode\n   */\n  initScrollInteraction(scrollboxNode) {\n    scrollboxNode.addEventListener(\n      'scroll',\n      debounce(this.handleScrollDocumentHover.bind(this), 25),\n      listener.passive\n    );\n  }\n\n  /**\n   * Stores the position of the mouse cursor.\n   *\n   * @param {MouseEvent} event\n   */\n  storeMousePosition(event) {\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n  }\n\n  /**\n   * Finds and hovers the item/document under the current mouse cursor position.\n   */\n  handleScrollDocumentHover() {\n    const targetElement = document.elementFromPoint(this.mouseX, this.mouseY);\n    const docElement = targetElement.closest(config.selector.doc);\n\n    if (!docElement) {\n      return;\n    }\n\n    const doc = this.slidehub.documents.get(docElement.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    const itemElement = targetElement.closest(config.selector.item);\n    if (itemElement) {\n      doc.hoverItem(itemElement);\n    }\n  }\n\n  /**\n   * Handles wheel navigation.\n   *\n   * @param {WheelEvent} event\n   */\n  handleWheelInteraction(event) {\n    // Don’t handle scrolling on elements that are not inside a document\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    const ratio = Math.abs(event.deltaX / event.deltaY);\n    const scrollingDirection = ratio < 1 ? scrolling.vertical : scrolling.horizontal;\n\n    // When scrolling vertically, only trigger navigation when modifier is pressed\n    if (scrollingDirection === scrolling.vertical && event.shiftKey) {\n      // Prevent vertical scrolling\n      event.preventDefault();\n\n      const delta = event[scrollingDirection.delta];\n\n      doc.navigateItem.by(Math.sign(delta));\n    }\n  }\n\n  /**\n   * Selects documents/items on click.\n   *\n   * @param {MouseEvent} event\n   */\n  handleClickSelect(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.selectDocument(doc);\n\n    if (config.keepSelectedPageInFirstColumn) {\n      return;\n    }\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.selectItem(item);\n    }\n  }\n\n  /**\n   * Highlights documents/items on hover.\n   *\n   * @param {MouseEvent} event\n   */\n  handleMoveHover(event) {\n    const doc = this.slidehub.documents.get(event.currentTarget.id);\n\n    if (!doc.loaded) {\n      return;\n    }\n\n    this.slidehub.hoverDocument(doc);\n\n    const item = event.target.closest(config.selector.item);\n    if (item) {\n      doc.hoverItem(item);\n    }\n  }\n\n  /**\n   * Wrapper for enabling all event listeners related to modifier handling.\n   */\n  initModifiers() {\n    document.addEventListener('keydown', this.onModifierDown.bind(this), listener.passive);\n    document.addEventListener('keyup', this.onModifierUp.bind(this), listener.passive);\n    window.addEventListener('blur', this.onModifierBlur.bind(this), listener.passive);\n  }\n\n  /**\n   * Displays a special cursor when the modifier is pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierDown(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'ew-resize');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the modifier is no longer pressed.\n   *\n   * @param {KeyboardEvent} event\n   */\n  onModifierUp(event) {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc && event.keyCode === 16) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n\n  /**\n   * Removes the special cursor when the user somehow leaves the page.\n   */\n  onModifierBlur() {\n    const doc = this.slidehub.hoveredDocument;\n    if (doc) {\n      doc.node.style.setProperty('cursor', 'auto');\n    }\n  }\n};\n\nexport { SlidehubMouseInteraction };\n","import { listener } from '../util/passive-event-listener.mjs';\n\nconst controlKeyNames = {\n  33: 'pageUp',\n  34: 'pageDown',\n  35: 'endKey',\n  36: 'homeKey',\n  37: 'arrowLeft',\n  38: 'arrowUp',\n  39: 'arrowRight',\n  40: 'arrowDown'\n};\n\n/**\n * Keyboard Interaction.\n */\nclass SlidehubKeyboardInteraction {\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n\n    this.controlKey = {\n      homeKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.left(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      endKey: {\n        trigger: () => {\n          this.slidehub.selectedDocument.navigateItem.right(\n            this.slidehub.selectedDocument.itemCount()\n          );\n        }\n      },\n      arrowLeft: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.left(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowRight: {\n        trigger: event => {\n          this.slidehub.selectedDocument.navigateItem.right(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowUp: {\n        trigger: event => {\n          this.slidehub.navigateDocument.up(event.shiftKey ? 3 : 1);\n        }\n      },\n      arrowDown: {\n        trigger: event => {\n          this.slidehub.navigateDocument.down(event.shiftKey ? 3 : 1);\n        }\n      },\n      pageUp: {\n        trigger: () => {\n          this.slidehub.navigateDocument.up(3);\n        }\n      },\n      pageDown: {\n        trigger: () => {\n          this.slidehub.navigateDocument.down(3);\n        }\n      }\n    };\n  }\n\n  start() {\n    document.addEventListener('keydown', this.handleKeyboardInput.bind(this), listener.active);\n  }\n\n  /**\n   * Handles keyboard interactions with documents and items.\n   *\n   * @param {KeyboardEvent} event\n   */\n  handleKeyboardInput(event) {\n    if (event.keyCode in controlKeyNames) {\n      event.preventDefault();\n      const keyName = controlKeyNames[event.keyCode];\n      this.controlKey[keyName].trigger(event);\n    }\n  }\n};\n\nexport { SlidehubKeyboardInteraction };\n","/**\n * Document Navigator.\n *\n * **Usage**:\n *\n * ```\n * const navigateDocument = new DocumentNavigator(slidehub);\n * navigateDocument.up(3);\n * navigateDocument.down(1);\n * ```\n */\nclass DocumentNavigator {\n  /**\n   * @param {Slidehub} slidehub\n   * @public\n   */\n  constructor(slidehub) {\n    this.slidehub = slidehub;\n    this.iterator = null;\n  }\n\n  /**\n   * Navigate document up (in reverse document loading order, if that makes sense).\n   *\n   * @param {Number} distance\n   * @public\n   */\n  up(distance) {\n    const selectedDocumentName = this.slidehub.selectedDocument.name;\n    this.iterator = this.slidehub.documents.iteratorFor(selectedDocumentName).reverse();\n    this.by(distance);\n  }\n\n  /**\n   * Navigate document down.\n   *\n   * @param {Number} distance\n   * @public\n   */\n  down(distance) {\n    const selectedDocumentName = this.slidehub.selectedDocument.name;\n    this.iterator = this.slidehub.documents.iteratorFor(selectedDocumentName);\n    this.by(distance);\n  }\n\n  /**\n   * Navigates through documents by a certain distance. With `distance = 3`,\n   * two documents would be skipped, arriving at the third document.\n   *\n   * @param {number} distance\n   * @private\n   */\n  by(distance) {\n    this.iterator.next();\n\n    let iteratorResult;\n    for (let i = 0; i < distance; i++) {\n      iteratorResult = this.iterator.next();\n      if (iteratorResult.done) {\n        return;\n      }\n    }\n\n    const targetDoc = iteratorResult.value[1];\n    this.slidehub.selectDocument(targetDoc);\n    this.scrollDocumentIntoView(targetDoc);\n  }\n\n  /**\n   * @param {SlidehubDocument} doc\n   */\n  scrollDocumentIntoView(doc) {\n    const offset = this.getVerticalOffsets(doc.node);\n    const extraPart = doc.node.clientHeight / 2;\n    if (offset.top < 0) {\n      window.scrollBy(0, -(Math.abs(offset.top) + extraPart));\n    } else if (offset.bottom < 0) {\n      window.scrollBy(0, Math.abs(offset.bottom) + extraPart);\n    }\n  }\n\n  /**\n   * Returns an object containing vertical offsets for an element with the\n   * viewport.\n   *\n   * @param {HTMLElement} element\n   * @returns {object}\n   */\n  getVerticalOffsets(element) {\n    const docEl = document.documentElement;\n    return {\n      top: element.offsetTop - window.scrollY,\n      bottom: window.scrollY + docEl.clientHeight - (element.offsetTop + element.offsetHeight)\n    };\n  }\n};\n\nexport { DocumentNavigator };\n","import { listener } from '../util/passive-event-listener.mjs';\n\n/**\n * Modal window.\n *\n * Based on ideas from “The Incredible Accessible Modal Window” by Greg Kraus.\n * https://github.com/gdkraus/accessible-modal-dialog\n */\n\nlet lastFocusedElement;\n\nfunction enableModals() {\n  const buttonArea = document.querySelector('[data-slidehub-modal-buttons]');\n\n  if (!buttonArea) {\n    return;\n  }\n\n  const controlsOpenButton = createOpenButton('Help');\n  buttonArea.insertAdjacentHTML('beforeend', controlsOpenButton);\n\n  const modalOpenButtons = Array.from(document.querySelectorAll('button[data-target-modal]'));\n  modalOpenButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const targetModal = event.currentTarget.dataset.targetModal;\n      const modal = document.querySelector(`[data-modal-${targetModal}]`);\n      openModal(modal);\n    });\n  });\n\n  const modalCloseButtons = Array.from(document.querySelectorAll('button[data-close-modal]'));\n  modalCloseButtons.forEach(button => {\n    button.addEventListener('click', event => {\n      const modal = event.currentTarget.closest('.modal');\n      closeModal(modal);\n    });\n  });\n}\n\nfunction createOpenButton(title) {\n  return `<button class=\"button button--subtle\" data-target-modal=\"${title.toLowerCase()}\">\n    ${title}\n  </button>`;\n}\n\n/**\n * Opens the modal.\n *\n * @param {Element} modal\n */\nfunction openModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  // Store last focused element\n  lastFocusedElement = document.activeElement;\n\n  document.body.setAttribute('aria-hidden', 'true');\n  modal.setAttribute('aria-hidden', 'false');\n\n  moveFocusToModal(modal);\n\n  // Setup event listeners\n  document.addEventListener('keydown', closeOnEscape, listener.passive);\n  modal.addEventListener('keydown', trapTabKey, listener.active);\n  modal.addEventListener('click', closeOnBackground, listener.passive);\n}\n\n/**\n * Move focus to the first focusable element inside the modal.\n *\n * @param {Element} modal\n */\nfunction moveFocusToModal(modal) {\n  const focusable = getFocusableElements(modal);\n  focusable[0].focus();\n}\n\n/**\n * Closes the modal.\n *\n * @param {Element} modal\n */\nfunction closeModal(modal) {\n  if (modal === null) {\n    return;\n  }\n\n  document.body.setAttribute('aria-hidden', 'false');\n  modal.setAttribute('aria-hidden', 'true');\n\n  // Clean up event listeners\n  document.removeEventListener('keydown', closeOnEscape, listener.passive);\n  modal.removeEventListener('keydown', trapTabKey, listener.active);\n  modal.removeEventListener('click', closeOnBackground, listener.passive);\n\n  // Restore previously focused element\n  lastFocusedElement.focus();\n}\n\n/**\n * Closes the modal when clicking on the background.\n *\n * @param {MouseEvent} event\n */\nfunction closeOnBackground(event) {\n  const modal = document.querySelector('.modal[aria-hidden=\"false\"]');\n  if (modal === event.target) {\n    closeModal(modal);\n  }\n}\n\n/**\n * Closes the modal when pressing the <kbd>Esc</kbd>.\n *\n * @param {KeyboardEvent} event\n */\nfunction closeOnEscape(event) {\n  if (event.keyCode === 27) {\n    closeModal(document.querySelector('.modal[aria-hidden=\"false\"]'));\n  }\n}\n\n/**\n * Make it impossible to focus an element outside the modal\n *\n * @param {KeyboardEvent} event\n */\nfunction trapTabKey(event) {\n  if (event.keyCode !== 9) {\n    return;\n  }\n\n  const activeElement = document.activeElement;\n  const focusable = getFocusableElements(event.currentTarget);\n  const tabable = focusable.filter(element => element.tabIndex > -1);\n\n  if (tabable.length < 2) {\n    event.preventDefault();\n    return;\n  }\n\n  if (event.shiftKey) {\n    if (activeElement === tabable[0]) {\n      tabable[tabable.length - 1].focus();\n      event.preventDefault();\n    }\n  } else {\n    if (activeElement === tabable[tabable.length - 1]) {\n      tabable[0].focus();\n      event.preventDefault();\n    }\n  }\n}\n\n/**\n * Selects all focusable elements currently present in the DOM/\n *\n * @param {Element|document} ancestor\n * @returns {Array}\n */\nfunction getFocusableElements(ancestor = document) {\n  return Array.from(ancestor.querySelectorAll(focusableElementsSelector));\n}\n\nconst focusableElementsSelector =\n  'a[href], input:not(:disabled), textarea:not(:disabled), button:not(:disabled), [tabindex]';\n\nexport { enableModals };\n","/**\n * Abstract base class for Slidehub plugins.\n *\n * Ensures that classes extending `SlidehubPlugin` implement an `enable()` and\n * `disable()` method.\n *\n * **Usage**:\n *\n * ```\n * import { SlidehubPlugin } from '../core/SlidehubPlugin';\n *\n * class MyPlugin extends SlidehubPlugin {\n *    constructor(slidehub) {\n *      super(\n *        slidehub,\n *        'MyPlugin',\n *        'Description of your plugin'\n *      );\n *    }\n *\n *    enable() {\n *      // Implement an enable routine\n *    }\n *\n *    disable() {\n *      // Implement an disable routine\n *    }\n * };\n * ```\n */\nclass SlidehubPlugin {\n  constructor(slidehub, name, description) {\n    this.slidehub = slidehub;\n    this.name = name;\n    this.description = description;\n    this.enabled = false;\n    this.toggleButton = null;\n\n    if (new.target === SlidehubPlugin) {\n      throw new TypeError('Cannot construct SlidehubPlugin instances directly');\n    }\n\n    if (this.enable === SlidehubPlugin.prototype.enable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own enable method.');\n    }\n\n    if (this.disable === SlidehubPlugin.prototype.disable) {\n      throw new TypeError('A SlidehubPlugin has to implement its own disable method.');\n    }\n  }\n\n  enable() {\n    this.enabled = true;\n\n    if (!this.toggleButton) {\n      this.toggleButton = this.createToggleButton();\n      if (this.toggleButton) {\n        this.toggleButton.addEventListener('click', this.handleToggleButton.bind(this));\n      }\n    }\n  }\n\n  disable() {\n    this.enabled = false;\n  }\n\n  /**\n   * Creates a feature toggle button in the user interface.\n   *\n   * @returns {Element|null}\n   */\n  createToggleButton() {\n    const fieldset = document.querySelector('.features-fieldset');\n\n    if (!fieldset) {\n      return null;\n    }\n\n    const toggleButtonMarkup = `\n      <div class=\"form-group form-group--switch\">\n        <span class=\"form-label\" id=\"${this.name}-label\">${this.description}</span>\n        <button\n          role=\"switch\"\n          aria-checked=\"false\"\n          aria-labelledby=\"${this.name}-label\"\n          data-feature=\"${this.name}\"\n        >\n          <span class=\"state state--true\" aria-label=\"on\"></span>\n          <span class=\"state state--false\" aria-label=\"off\"></span>\n        </button>\n      </div>\n    `;\n\n    fieldset.insertAdjacentHTML('beforeend', toggleButtonMarkup);\n\n    const button = fieldset.querySelector(`[data-feature=\"${this.name}\"]`);\n    button.setAttribute('aria-checked', this.enabled.toString());\n\n    return button;\n  }\n\n  /**\n   * Toggles a toggle button and triggers its associated action.\n   *\n   * @param {MouseEvent} event\n   */\n  handleToggleButton(event) {\n    const button = event.currentTarget;\n\n    if (button instanceof HTMLElement) {\n      const isPressed = button.getAttribute('aria-checked') === 'true';\n      button.setAttribute('aria-checked', String(!isPressed));\n\n      this.triggerButtonAction(button, 'aria-checked');\n    }\n  }\n\n  /**\n   * Triggers the associated action of a toggle button.\n   *\n   * @param {HTMLElement} button\n   * @param {'aria-checked'|'aria-pressed'} stateAttr\n   */\n  triggerButtonAction(button, stateAttr) {\n    switch (true) {\n      case button.hasAttribute('data-feature'):\n        if (button.getAttribute(stateAttr) === 'true') {\n          this.enable();\n        } else {\n          this.disable();\n        }\n        break;\n\n      default:\n        console.warn('No action is associated with the control', button);\n        break;\n    }\n  }\n};\n\n/* class MyPlugin extends SlidehubPlugin {\n  constructor() {\n    super();\n  }\n\n  enable() {\n    console.log('MyPlugin.enable');\n    super.enable();\n  }\n\n  disable() {\n    console.log('MyPlugin.disable');\n    super.disable();\n  }\n};\n\nconst x = new MyPlugin();\nx.enable(); */\n\nexport { SlidehubPlugin };\n","import { SlidehubPlugin } from '../core/SlidehubPlugin.mjs';\nimport { listener } from '../util/passive-event-listener.mjs';\nimport { config } from '../config.mjs';\n\n/**\n * Item Linking.\n *\n * Opens the document source (e.g. a PDF document) by pressing <kbd>Enter</kbd>\n * or double-clicking with a pointer device.\n */\nclass DocumentSourceLinker extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Links documents to their source document';\n    super(slidehub, 'DocumentSourceLinker', description);\n\n    this.boundEnterHandler = this.enterHandler.bind(this);\n    this.boundDoubleClickHandler = this.doubleClickHandler.bind(this);\n  }\n\n  enable() {\n    document.addEventListener('keydown', this.boundEnterHandler, listener.passive);\n    document.addEventListener('dblclick', this.boundDoubleClickHandler, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    document.removeEventListener('keydown', this.boundEnterHandler);\n    document.removeEventListener('dblclick', this.boundDoubleClickHandler);\n    super.disable();\n  }\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  enterHandler(event) {\n    if (event.keyCode !== 13) {\n      return;\n    }\n\n    const openInNewTab = event.ctrlKey;\n    const doc = this.slidehub.selectedDocument;\n    DocumentSourceLinker.handleOpenIntent(doc.node, doc.selectedItemNode, openInNewTab);\n  }\n\n  /**\n   * @param {MouseEvent} event\n   */\n  doubleClickHandler(event) {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const itemNode = event.target.closest(config.selector.item);\n    const docNode = itemNode.closest(config.selector.doc);\n    if (docNode) {\n      const openInNewTab = true;\n      DocumentSourceLinker.handleOpenIntent(docNode, itemNode, openInNewTab);\n    }\n  }\n\n  /**\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static handleOpenIntent(docNode, item, openInNewTab) {\n    // Focusable elements have a default behavior (e.g. activating a link)\n    // That behavior shall not be altered/extended.\n    if (isInteractive(item)) {\n      return;\n    }\n\n    DocumentSourceLinker.openDocumentSource(docNode, item, openInNewTab);\n  }\n\n  /**\n   * Opens the document source for the current selected document in the browser.\n   *\n   * @param {HTMLElement} docNode\n   * @param {HTMLElement} item\n   * @param {boolean} openInNewTab\n   */\n  static openDocumentSource(docNode, item, openInNewTab) {\n    const itemIndex = item.dataset.page;\n    const fragment = itemIndex !== '0' ? `#page=${itemIndex}` : '';\n    const itemSource = docNode.dataset.docSource + fragment;\n\n    if (openInNewTab) {\n      window.open(itemSource);\n    } else {\n      window.location.href = itemSource;\n    }\n  }\n};\n\n/**\n * Returns true if element is interactive, false otherwise.\n *\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nfunction isInteractive(element) {\n  const tag = element.tagName.toLowerCase();\n  let potentiallyInteractive = false;\n\n  switch (true) {\n    case ['a', 'area'].includes(tag):\n      if (!element.hasAttribute('href')) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['input', 'select', 'textarea', 'button'].includes(tag):\n      if (element.disabled) {\n        return false;\n      }\n\n      potentiallyInteractive = true;\n      break;\n    case ['iframe', 'object', 'embed'].includes(tag):\n      potentiallyInteractive = true;\n      break;\n    default:\n      if (element.hasAttribute('contenteditable')) {\n        potentiallyInteractive = true;\n      }\n      break;\n  }\n\n  if (potentiallyInteractive && element.offsetParent !== null) {\n    return true;\n  }\n\n  return false;\n}\n\nexport { DocumentSourceLinker };\n","import { SlidehubPlugin } from '../core/SlidehubPlugin.mjs';\nimport { listener } from '../util/passive-event-listener.mjs';\n\nclass PageWidgetPlugin extends SlidehubPlugin {\n  constructor(slidehub) {\n    const description = 'Displays the page numbers';\n    super(slidehub, 'PageWidgetPlugin', description);\n\n    this.boundExposeItemCount = this.exposeItemCount.bind(this);\n    this.boundExposeCurrentItem = this.exposeCurrentItem.bind(this);\n    this.widgetHookNode = document.querySelector('[data-slidehub-page-widget]');\n    this.currentPageNode = null;\n    this.totalPagesNode = null;\n  }\n\n  enable() {\n    this.insertWidgetMarkup();\n    this.slidehub.node.addEventListener('SlidehubHoverDocument', this.boundExposeItemCount, listener.passive);\n    this.slidehub.node.addEventListener('SlidehubHoverItem', this.boundExposeCurrentItem, listener.passive);\n    super.enable();\n  }\n\n  disable() {\n    this.removeWidgetMarkup();\n    this.slidehub.node.removeEventListener('SlidehubHoverDocument', this.boundExposeItemCount);\n    this.slidehub.node.removeEventListener('SlidehubHoverItem', this.boundExposeCurrentItem);\n    super.disable();\n  }\n\n  insertWidgetMarkup() {\n    const widgetMarkup = `<div class=\"sh-page-widget\" aria-hidden=\"hidden\">\n      Page\n      <span class=\"sh-page-widget__current-page\" data-slidehub-current-page>0</span><span data-slidehub-total-pages>0</span>\n    </div>`;\n\n    this.widgetHookNode.insertAdjacentHTML('beforeend', widgetMarkup);\n\n    const widgetNode = this.widgetHookNode.firstElementChild;\n    this.currentPageNode = widgetNode.firstElementChild;\n    this.totalPagesNode = widgetNode.lastElementChild;\n\n    this.totalPagesNode.textContent = this.slidehub.selectedDocument.itemCount();\n    this.currentPageNode.textContent = this.slidehub.selectedDocument.selectedItemNode.dataset.page;\n  }\n\n  removeWidgetMarkup() {\n    while (this.widgetHookNode.lastChild) {\n      this.widgetHookNode.removeChild(this.widgetHookNode.lastChild);\n    }\n\n    this.totalPagesNode = null;\n    this.currentPageNode = null;\n  }\n\n  exposeItemCount(event) {\n    this.totalPagesNode.textContent = event.detail.doc.itemCount();\n  }\n\n  exposeCurrentItem(event) {\n    this.currentPageNode.textContent = event.detail.itemNode.dataset.page;\n  }\n}\n\nexport { PageWidgetPlugin };\n","/**\n * This is a hack for importing multiple modules into the same namespace.\n *\n * By exporting all exports from specific modules as defaults in a proxy\n * namespace module, one is able to import the into the same namespace:\n *\n * ```\n * import * as plugin from '../plugins/namespace';\n * ```\n *\n * which gives access to\n *\n * ```\n * plugin.DocumentSourceLinker\n * plugin.MyPlugin\n * ```\n */\n\nexport * from './DocumentSourceLinker';\nexport * from './PageWidgetPlugin';\n","/**\n * Calculates the outer width of an element. In the context of this\n * application, the outer width of an element is its `offsetWidth` plus\n * left and right margins.\n *\n * @param {HTMLElement} element\n * @returns {Number} the outer width of `element`.\n */\nfunction getOuterWidth(element) {\n  const style = window.getComputedStyle(element);\n  const marginLeft = parseInt(style.marginLeft);\n  const marginRight = parseInt(style.marginRight);\n\n  return marginLeft + element.offsetWidth + marginRight;\n}\n\nexport { getOuterWidth };\n","/**\n * Returns the fragment identifier of a URL if it is present.\n *\n * @param {String} url\n * @returns {String|null} the fragment identifier of a URL if it is present,\n *                        `null` otherwise.\n */\nfunction getFragmentIdentifier(url) {\n  const hashPosition = url.indexOf('#');\n  if (hashPosition > 0) {\n    return url.substring(hashPosition + 1);\n  }\n\n  return null;\n}\n\nexport { getFragmentIdentifier };\n","import { config } from '../config.mjs';\nimport { parseDocumentsData, parseDocumentsMarkup } from './SlidehubParser.mjs';\nimport { SlidehubDocumentLoader } from './SlidehubDocumentLoader.mjs';\nimport { SlidehubImageLoader } from './SlidehubImageLoader.mjs';\nimport { SlidehubMouseInteraction } from './SlidehubMouseInteraction.mjs';\nimport { SlidehubKeyboardInteraction } from './SlidehubKeyboardInteraction.mjs';\nimport { DocumentNavigator } from './DocumentNavigator.mjs';\nimport { enableModals } from './Modal.mjs';\n\nimport * as plugin from '../plugins/namespace.mjs';\n\nimport { debounce } from '../util/debounce.mjs';\nimport { getOuterWidth } from '../util/getOuterWidth.mjs';\nimport { getFragmentIdentifier } from '../util/getFragmentIdentifier.mjs';\n\nconst selectClassName = 'selected';\nconst hoverClassName = 'highlighted';\n\n/**\n * Main Slidehub prototype.\n */\nclass Slidehub {\n  /**\n   * @public\n   */\n  constructor() {\n    this._node = null;\n    this._documents = null;\n    this._selectedDocument = null;\n    this._hoveredDocument = null;\n    this._documentNavigator = null;\n\n    this._itemWidth = null;\n    this._visibleItems = null;\n    this._scrollboxWidth = null;\n\n    document.addEventListener('DOMContentLoaded', () => {\n      this._node = this.getNode();\n      this._documents = this.getDocuments();\n\n      let documentLoader;\n\n      if (!config.staticContent) {\n        documentLoader = new SlidehubDocumentLoader(this);\n        documentLoader.insertDocumentFrames();\n      }\n\n      const targetDoc = this.determineTargetDocument();\n\n      if (!config.staticContent) {\n        documentLoader.start(targetDoc);\n      }\n\n      this.selectDocument(targetDoc);\n      this.jumpToTargetDocument(targetDoc);\n\n      this.start();\n      this.loadPlugins();\n    });\n  }\n\n  /**\n   * Sets up the main Slidehub HTML element.\n   *\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @private\n   */\n  getNode() {\n    const existingNode = document.querySelector(config.selector.slidehub);\n    const slidehubNode = existingNode ? existingNode : this.createNode();\n\n    // Expose select/highlight color overrides to the DOM.\n    // This allows CSS to use inside of a rule declaration.\n    if (config.selectColor && config.selectColor !== '') {\n      slidehubNode.style.setProperty('--c-selected', config.selectColor);\n    }\n\n    if (config.highlightColor && config.highlightColor !== '') {\n      slidehubNode.style.setProperty('--c-highlighted', config.highlightColor);\n    }\n\n    return slidehubNode;\n  }\n\n  /**\n   * Hooks the Slidehub container element into the DOM.\n   *\n   * Requires an element with a custom attribute `data-slidehub` to be present\n   * in the DOM. A new <div> element will be created inside of it. No existing\n   * markup will be changed or removed.\n   *\n   * @returns {HTMLDivElement} the empty Slidehub DOM node.\n   * @private\n   */\n  createNode() {\n    const slidehubNode = document.createElement('div');\n    slidehubNode.classList.add(config.selector.slidehub.slice(1));\n\n    document.querySelector('[data-slidehub]').appendChild(slidehubNode);\n\n    return slidehubNode;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the internal documents data structure.\n   */\n  getDocuments() {\n    return config.staticContent ? parseDocumentsMarkup(this) : parseDocumentsData(this);\n  }\n\n  /**\n   * @returns {SlidehubDocument}\n   */\n  determineTargetDocument() {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n\n    let targetDoc;\n\n    if (this.documents.has(fragmentIdentifier)) {\n      targetDoc = this.documents.get(fragmentIdentifier);\n    } else if (document.documentElement.scrollTop === 0) {\n      // If the viewport was not scrolled already, just start from the top\n      targetDoc = this.documents.values().next().value;\n    } else {\n      // The page was scrolled (e.g. the page was reloaded with a non-zero scroll position)\n      // In this case, Slidehub attempts to load the document in the center of the view.\n      const slidehubWidth = this.node.clientWidth;\n      const centerElement = document.elementFromPoint(slidehubWidth / 2, window.innerHeight / 2);\n      const centerDocument = centerElement.closest(config.selector.doc);\n      targetDoc = this.documents.get(centerDocument.id);\n    }\n\n    return targetDoc;\n  }\n\n  jumpToTargetDocument(targetDoc) {\n    const fragmentIdentifier = getFragmentIdentifier(window.location.toString());\n    if (document.documentElement.scrollTop !== 0 || fragmentIdentifier) {\n      const centerOffset = (window.innerHeight - targetDoc.node.clientHeight) / 2;\n      // After a short while, scroll the viewport to center the document\n      // In the future, `Element.scrollIntoView({ block: 'center' })` should work\n      setTimeout(() => window.scrollBy(0, -centerOffset), 200);\n    }\n  }\n\n  /**\n   * Initializes all core functionality.\n   *\n   * @private\n   */\n  start() {\n    this.navigateDocument = new DocumentNavigator(this);\n\n    this.exposeDocumentInfo();\n\n    this.imageLoader = new SlidehubImageLoader(this);\n    this.imageLoader.start();\n\n    this.mouseInteraction = new SlidehubMouseInteraction(this);\n    this.mouseInteraction.start();\n\n    const keyboardInteraction = new SlidehubKeyboardInteraction(this);\n    keyboardInteraction.start();\n\n    this.observeDocumentLoaded();\n    enableModals();\n  }\n\n  /**\n   * Observes documents being loaded\n   */\n  observeDocumentLoaded() {\n    const documentLoadedObserver = new MutationObserver(this.mutationHandler.bind(this));\n\n    const documentNodes = Array.from(this.node.querySelectorAll(config.selector.doc));\n    documentNodes.forEach(docNode => {\n      documentLoadedObserver.observe(docNode, { childList: true });\n    });\n  }\n\n  /**\n   *\n   * @param {Array<MutationRecord>} mutationsList\n   */\n  mutationHandler(mutationsList) {\n    for (const mutation of mutationsList) {\n      if (mutation.addedNodes.length !== 0) {\n        const docNode = mutation.target;\n        this.imageLoader.startImageObserver(docNode);\n        const scrollbox = docNode.querySelector(config.selector.scrollbox);\n        if (scrollbox) {\n          this.mouseInteraction.initScrollInteraction(scrollbox);\n        }\n      }\n    }\n  }\n\n  /**\n   * Loads optional plugins.\n   *\n   * @private\n   */\n  loadPlugins() {\n    const documentSourceLinker = new plugin.DocumentSourceLinker(this);\n    documentSourceLinker.enable();\n\n    const pageWidgetPlugin = new plugin.PageWidgetPlugin(this);\n    pageWidgetPlugin.enable();\n  }\n\n  /**\n   * @returns {HTMLElement} the Slidehub DOM node.\n   * @public\n   */\n  get node() {\n    return this._node;\n  }\n\n  /**\n   * @returns {ReverseIterableMap} the Slidehub documents data structure.\n   * @public\n   */\n  get documents() {\n    return this._documents;\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently selected document.\n   * @public\n   */\n  get selectedDocument() {\n    return this._selectedDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new selected document.\n   * @private\n   */\n  set selectedDocument(doc) {\n    this._selectedDocument = doc;\n  }\n\n  /**\n   * Sets a new selected document.\n   *\n   * @param {SlidehubDocument} doc\n   * @public\n   */\n  selectDocument(doc) {\n    if (this.selectedDocument === doc) {\n      return;\n    }\n\n    // Remove selected class from currently selected document\n    if (this.selectedDocument) {\n      this.selectedDocument.node.classList.remove(selectClassName);\n    }\n\n    // Set new selected document\n    this.selectedDocument = doc;\n    this.selectedDocument.node.classList.add(selectClassName);\n\n    const slidehubSelectDocumentEvent = new CustomEvent('SlidehubSelectDocument', {\n      detail: { doc }\n    });\n    this.node.dispatchEvent(slidehubSelectDocumentEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * @returns {SlidehubDocument} the currently hovered document.\n   * @public\n   */\n  get hoveredDocument() {\n    return this._hoveredDocument;\n  }\n\n  /**\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @private\n   */\n  set hoveredDocument(doc) {\n    this._hoveredDocument = doc;\n  }\n\n  /**\n   * Sets a new hovered document after unsetting the old one.\n   *\n   * @param {SlidehubDocument} doc the new hovered document.\n   * @public\n   */\n  hoverDocument(doc) {\n    if (this.hoveredDocument === doc) {\n      return;\n    }\n\n    this.unhoverDocument();\n\n    // Set new hovered document\n    this.hoveredDocument = doc;\n    this.hoveredDocument.node.classList.add(hoverClassName);\n\n    const slidehubHoverDocumentEvent = new CustomEvent('SlidehubHoverDocument', {\n      detail: { doc }\n    });\n    this.node.dispatchEvent(slidehubHoverDocumentEvent);\n\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n  }\n\n  /**\n   * Removes the hover from the currently hovered document.\n   *\n   * **Side effect**: Also removes the hover from the currently hovered item\n   * within that document.\n   *\n   * @public\n   */\n  unhoverDocument() {\n    // Remove hovered class from currently hovered document\n    if (this.hoveredDocument) {\n      this.hoveredDocument.unhoverItem();\n      this.hoveredDocument.node.classList.remove(hoverClassName);\n      this.hoveredDocument = null;\n    }\n  }\n\n  /**\n   * @returns {DocumentNavigator} the document navigator object.\n   * @public\n   */\n  get navigateDocument() {\n    return this._documentNavigator;\n  }\n\n  /**\n   * @param {DocumentNavigator} documentNavigator\n   * @private\n   */\n  set navigateDocument(documentNavigator) {\n    this._documentNavigator = documentNavigator;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get itemWidth() {\n    return this._itemWidth;\n  }\n\n  /**\n   * @param {Number} itemWidth\n   * @private\n   */\n  set itemWidth(itemWidth) {\n    this._itemWidth = itemWidth;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get visibleItems() {\n    return this._visibleItems;\n  }\n\n  /**\n   * @param {Number} visibleItems\n   * @private\n   */\n  set visibleItems(visibleItems) {\n    this._visibleItems = visibleItems;\n  }\n\n  /**\n   * @returns {Number}\n   * @public\n   */\n  get scrollboxWidth() {\n    return this._scrollboxWidth;\n  }\n\n  /**\n   * @param {Number} scrollboxWidth\n   * @private\n   */\n  set scrollboxWidth(scrollboxWidth) {\n    this._scrollboxWidth = scrollboxWidth;\n  }\n\n  /**\n   * Wrapper method for all expose methods.\n   *\n   * @private\n   */\n  exposeDocumentInfo() {\n    this.exposeItemWidth();\n    this.exposeScrollboxWidth();\n    this.exposeNumberOfVisibleItems();\n\n    // Recalculate the scrollbox width on resize.\n    window.addEventListener('resize', debounce(() => {\n      this.exposeItemWidth();\n      this.exposeScrollboxWidth();\n      this.exposeNumberOfVisibleItems();\n    }, 200));\n  }\n\n  /**\n   * Exposes the current outer width of an item to the DOM.\n   *\n   * @private\n   */\n  exposeItemWidth() {\n    const item = this.selectedDocument.node.querySelector(config.selector.item);\n    const itemOuterWidth = getOuterWidth(item);\n\n    if (this.itemWidth !== itemOuterWidth) {\n      this.itemWidth = itemOuterWidth;\n\n      this.node.style.setProperty('--page-outer-width', this.itemWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current `clientWidth` of the selected scrollbox to the DOM.\n   *\n   * @private\n   */\n  exposeScrollboxWidth() {\n    const scrollboxNode = this.selectedDocument.node.querySelector(config.selector.scrollbox);\n\n    if (this.scrollboxWidth !== scrollboxNode.clientWidth) {\n      this.scrollboxWidth = scrollboxNode.clientWidth;\n\n      this.node.style.setProperty('--scrollbox-width', this.scrollboxWidth + 'px');\n    }\n  }\n\n  /**\n   * Exposes the current number of visible items in a document to the DOM.\n   *\n   * @private\n   */\n  exposeNumberOfVisibleItems() {\n    this.visibleItems = Math.floor(this.scrollboxWidth / this.itemWidth);\n  }\n};\n\nexport { Slidehub };\n","/**\n * Application entry point.\n */\n\n// import './lib/intersection-observer';\n\nimport { Slidehub } from './core/Slidehub.mjs';\n\n/**\n * An Immediately Invoked Function Expression, called like that because it’s\n * immediately executed when a JavaScript file like this is sourced.\n *\n * Starts the engines for Slidehub.\n */\n(function () {\n  new Slidehub();\n})();\n"]}